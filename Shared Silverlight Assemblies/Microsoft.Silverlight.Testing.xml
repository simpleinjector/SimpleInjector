<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Silverlight.Testing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Test">
            <summary>
            A class containing an Assert method.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsNotNull">
            <summary>
            The MethodInfo object used to invoke Assert.IsNotNull.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreNotSame">
            <summary>
            The MethodInfo object used to invoke Assert.AreNotSame.
            </summary>        
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreNotEqual">
            <summary>
            The MethodInfo object used to invoke Assert.AreNotEqual.
            </summary>        
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreSame">
            <summary>
            The MethodInfo object used to invoke Assert.AreSame.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AreEqual">
            <summary>
            The MethodInfo object used to invoke Assert.AreEqual.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsNull">
            <summary>
            The MethodInfo object used to invoke Assert.IsNull.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsFalse">
            <summary>
            The MethodInfo object used to invoke Assert.IsFalse.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.IsTrue">
            <summary>
            The MethodInfo object used to invoke Assert.IsTrue.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.FindAnonymousTypeExpressionInString">
            <summary>
            A regular expression which identifies a pattern signifying an 
            anonymous type.  This pattern is emitted by the Expression object 
            when it converts an anonymous type to a string.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.Test.FindTransparentIdentifier">
            <summary>
            A regular expression which identifies a pattern emitted by an
            Expression object when it converts an anonymous type to a
            string.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.Assert(System.Linq.Expressions.Expression{System.Func{System.Boolean}})">
            <summary>
            Asserts a condition is true.
            </summary>
            <param name="predicate">The condition that must be true.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.Assert(System.Linq.Expressions.Expression{System.Func{System.Boolean}},System.String)">
            <summary>
            Asserts a condition is true.
            </summary>
            <param name="predicate">The condition that must be true.</param>
            <param name="message">The message to be displayed when the test fails.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.GetMessageExpression(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Generates an assert failure message using the code block
            responsible for the failure.
            </summary>
            <param name="expression">The predicate that fails.</param>
            <param name="message">The user-provided assertion failure message.
            </param>
            <returns>A constant expression containing the user-provided failure
            message or a description of the expression that failed.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.CreateAssertExpressionAction(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Analyzes the expression and creates an action which calls the 
            correct assert method based on its contents.
            </summary>
            <param name="expression">The predicate expression.</param>
            <param name="message">The message to display if an assertion fails.</param>
            <returns>An action which calls the correct assert method.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.AssertExpression``1(System.Linq.Expressions.Expression{System.Func{System.Boolean}},System.String)">
            <summary>
            Analyzes a predicate expression and invokes the correct assert 
            method.
            </summary>
            <typeparam name="T">The type of the argument to the predicate.
            </typeparam>
            <param name="predicate">A predicate to be converted into an 
            assert statement.</param>
            <param name="message">The assertion message.</param> 
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Test.CreateBinaryExpressionAction(System.Linq.Expressions.BinaryExpression,System.String)">
            <summary>
            Creates an action from certain types of supported binary expression
            patterns.  If no supported pattern is found null is returned.  Based
            on analyzing the predicate the action invokes the correct Assert
            method.
            </summary>
            <param name="binaryExpression">A binary expression extracted from a
            predicate expression.</param>
            <param name="message">The message to display if the assertion 
            fails.</param>
            <returns>An action that invokes an Assert method.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.AsynchronousAttribute">
            <summary>
            Mark the test method as one which expects asynchronous execution. 
            It is important to call TestComplete() once it is ready or your 
            test will never continue/timeout.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.BugAttribute">
            <summary>
            An attribute that contains known bug information that can be logged 
            during a unit test run. 
            
            When applied to a test method, it will invert the result. This makes it 
            possible to perform automated runs and continuous integration while 
            validating and tracking known issues.
            
            The attribute should have the Fixed bool set to True, or be removed, 
            once the issue is resolved.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.BugAttribute.#ctor">
            <summary>
            Construct a new BugAttribute with no bug description.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.BugAttribute.#ctor(System.String)">
            <summary>
            Construct a new BugAttribute with a bug description.
            </summary>
            <param name="description">Known issue text.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.BugAttribute.ToString">
            <summary>
            Return the bug information.
            </summary>
            <returns>Known issue as a string.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.BugAttribute.Description">
            <summary>
            Gets the bug description.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.BugAttribute.Fixed">
            <summary>
            Gets or sets a value indicating whether the known issue has been 
            fixed. If it has, the attribute is ignored and will not affect 
            test results.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.CodeCoverage">
            <summary>
            The CodeCoverage class is used to collect code coverage information from
            assemblies that have been instrumented to call the Visit function at the
            beginning of every basic block.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.CodeCoverage._blocks">
            <summary>
            A bit array used to track which basic blocks have been executed.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.CodeCoverage.Visit(System.UInt32)">
            <summary>
            Record that a basic block is being executed.
            </summary>
            <param name="id">Id of the basic block.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.CodeCoverage.GetCoverageData">
            <summary>
            Get the coverage data serialized as a string for easy transport.
            </summary>
            <remarks>Previous releases of the framework used a simplistic bit
            list, this release updates the coverage reporting endpoint to an
            alternate version that ends in base 64. This maintains test runner
            compatibility with previous official releases.</remarks>
            <returns>Coverage data serialized as a string.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.CodeCoverage.HitBlockCount">
            <summary>
            Gets the current size of the blocks counter. This is not actually 
            the number of hit blocks, but it should return 0 always except 
            when at least one block is hit.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.CustomFrameworkUnitTest">
            <summary>
            Base class for test cases that use special functionality of the 
            Microsoft.Silverlight.Testing unit test framework.
            
            Tests that derive from CustomTest in most cases will not be source- or 
            functionality- compatible with the more advanced desktop Visual Studio 
            Test Team environment and harnesses.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.CustomFrameworkUnitTest.HandleException(System.Exception)">
            <summary>
            Process an exception using the test engine logic for 
            ExpectedExceptions and logging the exception if needed.
            </summary>
            <param name="ex">Exception object.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.CustomFrameworkUnitTest.InterceptUnhandledExceptions">
            <summary>
            Gets or sets a value indicating whether global unhandled exceptions 
            should be intercepted by the test harness.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.CustomFrameworkUnitTest.UnitTestHarness">
            <summary>
            Gets or sets the unit test harness instance.  Hidden from the VS 
            browser as test developers should not need to use this property.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.CustomFrameworkUnitTest.WorkItemContainer">
            <summary>
            Gets the current test task container.
            </summary>
            <returns>The current container for the test's tasks.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.CodeCoverageProvider">
            <summary>
            A provider of code coverage information to an external process.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase">
            <summary>
            The base class for test service providers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider,System.String)">
            <summary>
            Initializes a new base provider class.
            </summary>
            <param name="provider">The owning test service provider.</param>
            <param name="displayName">The display name of the service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.Initialize">
            <summary>
            Initializes the provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.IncrementBusyServiceCounter">
            <summary>
            Increments the busy service counter.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.DecrementBusyServiceCounter">
            <summary>
            Decrements the busy service counter.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.InvokeMethod(System.String,System.Object[])">
            <summary>
            Invokes a method on this provider using reflection.
            </summary>
            <param name="methodName">The name of the method.</param>
            <param name="parameters">The optional parameters.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.OnInitializeCompleted">
            <summary>
            Call the InitializeCompleted event.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.Callback(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult},Microsoft.Silverlight.Testing.Harness.Service.ServiceResult)">
            <summary>
            Performs a callback.  Null action and/or result are permitted.
            </summary>
            <param name="action">The optional callback action.</param>
            <param name="result">The result to pass back.</param>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.InitializeCompleted">
            <summary>
            Event fired once initialization is complete.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.DisplayName">
            <summary>
            Gets the display name for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.TestService">
            <summary>
            Gets the owning test service.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase.Initialized">
            <summary>
            Gets a value indicating whether the provider has been initialized 
            yet.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.CodeCoverageProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new code coverage provider.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.CodeCoverageProvider.SaveCoverageData(System.String,System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Save string-based code coverage data.
            </summary>
            <param name="data">The code coverage data, as a string.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.EnvironmentProvider">
            <summary>
            A provider of environment variables and environmental information that 
            uses the test service provider infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.EnvironmentProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new environment provider.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.EnvironmentProvider.GetEnvironmentVariable(System.String,System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Retrieve an environment variable from the system.
            </summary>
            <param name="name">The variable name.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.Extensions">
            <summary>
            Extension methods.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.Extensions.ToTransformedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Transform the XElement into a dictionary of key/value pairs.
            </summary>
            <typeparam name="T">The type of enumeration.</typeparam>
            <typeparam name="K">The key type.</typeparam>
            <typeparam name="R">The value type.</typeparam>
            <param name="that">The root enumerable.</param>
            <param name="keySelector">The key selector.</param>
            <param name="itemSelector">The item selector.</param>
            <returns>Returns a new dictionary.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider">
            <summary>
            A type that stores global settings in the isolated storage for the 
            application. An implementation of the <see cref="T:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider"/> 
            type.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider">
            <summary>
            A provider of string dictionary values.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new SettingsProvider object.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider,System.String)">
            <summary>
            Initializes a new SettingsProvider object.
            </summary>
            <param name="testService">The test service.</param>
            <param name="serviceName">The service name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider.SaveSettings(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Saves the settings.
            </summary>
            <remarks>Classes that inherit from SettingsProvider: hide this 
            function.  Do not call up through to this base method.</remarks>
            <param name="callback">The service callback.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider.Settings">
            <summary>
            Gets the settings dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider.IsReadOnly">
            <summary>
            Gets a value indicating whether the settings are read-only.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SettingsProvider.SourceName">
            <summary>
            Gets the settings source for end-user display.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider.TestFrameworkSettingsKeyName">
            <summary>
            The unique key used for storing the test framework's settings 
            dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider._settings">
            <summary>
            The underlying settings object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new isolated storage settings provider.
            </summary>
            <param name="testService">The test service instance.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider.Initialize">
            <summary>
            Initializes the isolated storage settings provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider.SaveSettings(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Saves the current settings values.
            </summary>
            <param name="callback">The service completion callback.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider.LoadSettings">
            <summary>
            Recalls the stored settings values from isolated storage.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.IsolatedStorageSettingsProvider.InitializeSettings">
            <summary>
            Initialize the isolated storage application settings object.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult">
            <summary>
            Result object for asynchronous test service response.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.CreateExceptionalResult(System.Exception)">
            <summary>
            Creates a new ServiceResult object for a failed result, the 
            sets the exception.
            </summary>
            <param name="except">The Exception object.</param>
            <returns>Returns a new ServiceResult with the Exception set.</returns>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult._result">
            <summary>
            The result LINQ element.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.#ctor">
            <summary>
            Initializes a new instance of the ServiceResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.ProcessResponse">
            <summary>
            Process the response text.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.TryGetElement">
            <summary>
            Attempt to process and return the root element of a successful 
            request. Returns null if there was an Exception.
            </summary>
            <returns>The root XML element of the response.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.SetResult(System.Xml.Linq.XElement)">
            <summary>
            Sets the result.
            </summary>
            <param name="result">The LINQ element for the result.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.Processed">
            <summary>
            Gets or sets a value indicating whether the result has been 
            processed.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.Exception">
            <summary>
            Gets or sets the exception intercepted or generated during the 
            request or 
            processing timeframe.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.Element">
            <summary>
            Gets the root XElement of the test service result.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.ServiceResult.Successful">
            <summary>
            Gets a value indicating whether the request was successful.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.ServiceType">
            <summary>
            The type of test service in use.  Used by the more advanced service 
            scenarios in SilverlightTestServiceProvider.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.ServiceType.None">
            <summary>
            No service, or unknown service type.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.ServiceType.Direct">
            <summary>
            A direct connection, be it the file system, isolated storage, or 
            similar.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.ServiceType.WebService">
            <summary>
            A web service.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService">
            <summary>
            The Silverlight test service provider is built for compilation with 
            Silverlight builds of the test framework.  Populates with the important 
            providers for web browser-hosted test runs.
            </summary>
            <summary>
            The Silverlight test service provider is built for compilation with 
            Silverlight builds of the test framework.  Populates with the important 
            providers for web browser-hosted test runs.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestServiceProvider">
            <summary>
            A system that provides test services.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestServiceProvider._services">
            <summary>
            The dictionary of services registered with this provider instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.#ctor">
            <summary>
            Initializes a new test service provider instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.Initialize">
            <summary>
            Initializes the provider and all of its test services.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.InitializeAllServices">
            <summary>
            Initialize all services and features synchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RegisterService(Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature,Microsoft.Silverlight.Testing.Harness.Service.ProviderBase)">
            <summary>
            Register a new service that the test service should expose.
            </summary>
            <param name="feature">Known feature type.</param>
            <param name="serviceInstance">Instance of the feature's 
            <see cref="T:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase"/> type.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RegisterService(System.String,Microsoft.Silverlight.Testing.Harness.Service.ProviderBase)">
            <summary>
            Register a new service that the test service should expose.
            </summary>
            <param name="featureName">String name of the feature if the known 
            enum value does not exist.</param>
            <param name="serviceInstance">Instance of the feature's 
            <see cref="T:Microsoft.Silverlight.Testing.Harness.Service.ProviderBase"/> type.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.UnregisterService(Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature)">
            <summary>
            Unregisters a feature.
            </summary>
            <param name="feature">Known feature type.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.UnregisterService(System.String)">
            <summary>
            Unregisters a feature.
            </summary>
            <param name="featureName">Known feature type string.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.HasService(Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature)">
            <summary>
            Check if a requested feature is supported by the test service 
            provider.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>A value indicating whether the feature exists.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.HasService(System.String)">
            <summary>
            Check if a requested feature is supported by the test service 
            provider.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <returns>A value indicating whether the feature exists.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.GetService``1(Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature)">
            <summary>
            Retrieve a feature.  An exception will be thrown if the service 
            does not exist.
            </summary>
            <typeparam name="TService">Type of a service, ProviderBase.</typeparam>
            <param name="feature">The feature of interest.</param>
            <returns>Returns the feature, cast properly.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.GetService(Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature)">
            <summary>
            Retrieve a feature.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The feature's provider.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.GetService(System.String)">
            <summary>
            Retrieve a feature.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RequireService(Microsoft.Silverlight.Testing.Harness.TestServiceProvider,System.Type)">
            <summary>
            Require a feature, or throw an exception if it isn't available.
            </summary>
            <param name="feature">Feature of interest.</param>
            <param name="requiredType">The required type.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RequireService(System.String,System.Type)">
            <summary>
            Require a feature, or throw an exception if it isn't available.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <param name="requiredType">The required type.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RequireService(Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature)">
            <summary>
            Require a feature or interest.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RequireService(System.String)">
            <summary>
            Requires a service.
            </summary>
            <param name="featureName">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RequireServiceInternal(System.Object)">
            <summary>
            Check for and required the presence of a service.  Throws an 
            InvalidOperationException message if the service is unavailable.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.RequireServiceInternal(System.Object,System.Type)">
            <summary>
            Require a specific feature, and that it can be cast properly.
            </summary>
            <param name="feature">Feature of interest.</param>
            <param name="cast">The type to verify assignment for a cast.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.GetServiceInternal(System.Object)">
            <summary>
            Looks for a specific service.
            </summary>
            <param name="feature">Feature of interest.</param>
            <returns>The service or null if one was not present.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.UniqueTestRunIdentifier">
            <summary>
            Gets or sets a unique test run identifier, if any is present.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestServiceProvider.BusyServiceReferenceCounter">
            <summary>
            Gets or sets an integer value that can be used to manage simple
            reference counting services.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService._webService">
            <summary>
            The service verifier and information.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.#ctor">
            <summary>
            Initializes a new SilverlightTestServiceProvider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.Initialize">
            <summary>
            Initializes the Silverlight test service.  Performs a service check 
            if needed before initializing the other providers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.SetCustomIdentification">
            <summary>
            Sets the custom ID information for the test run, if passed into 
            the run.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.SetServicePath">
            <summary>
            Determine the service path to attempt to use, and prepares the 
            verification object using those parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.AttemptServiceConnection">
            <summary>
            Pauses the initialization process to attempt a service connection. 
            The result will alter the underlying ServiceType being used by 
            this provider to ensure a fallback experience can be used.  
            
            This verification step will block the initialization and entire 
            test run until it continues.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ContinueInitialization">
            <summary>
            Continues the initialization process for the test service provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.PopulateProviders">
            <summary>
            Populates with the standard providers for Silverlight in-browser 
            testing.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceType">
            <summary>
            Gets the service type that is in use.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.WebService">
            <summary>
            Gets the web service proxy.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceVerifier">
            <summary>
            A special verification class used by SilverlightTestService.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceVerifier.VerificationServiceName">
            <summary>
            The name of a simple 'ping' method exposed by the service.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceVerifier.Verify(System.Action,System.Action)">
            <summary>
            Attempts to verify the service connection.  Calls the proper 
            success/failure Action once a verification result is possible.
            </summary>
            <param name="success">The Action to call upon connection 
            verification.</param>
            <param name="failure">An Action to call upon failure.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceVerifier.Hostname">
            <summary>
            Gets or sets the service hostname.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceVerifier.Port">
            <summary>
            Gets or sets the service port.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceVerifier.ServicePath">
            <summary>
            Gets or sets path to the simple POX service.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService.ServiceVerifier.ServiceUri">
            <summary>
            Gets the URI to the service.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.TestReportingProvider">
            <summary>
            A test service that reports test run results.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.TestReportingProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new reporting provider instance.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.TestReportingProvider.WriteLog(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult},System.String,System.String)">
            <summary>
            Begins a call to the test service to write to the log.
            </summary>
            <param name="callback">The callback, used to read or verify results 
            from the service call.</param>
            <param name="logName">The name of the log to write.</param>
            <param name="content">The log file content.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.TestReportingProvider.ReportFinalResult(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult},System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Begins a call to the test service to report a test run's results.
            </summary>
            <param name="callback">The callback, used to read or verify results 
            from the service call.</param>
            <param name="failure">A value indicating whether the test run was a 
            failure.</param>
            <param name="failures">The failed scenario count.</param>
            <param name="totalScenarios">The total scenario count.</param>
            <param name="message">Any message to report along with the failure.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature">
            <summary>
            Set of known, well-defined test service features.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature.CodeCoverageReporting">
            <summary>
            Code coverage reporting.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature.RunSettings">
            <summary>
            Provides run parameters and settings.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature.TestReporting">
            <summary>
            Provides test reporting services.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.TestServiceFeature.EnvironmentServices">
            <summary>
            Provides environment information.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebCodeCoverageProvider">
            <summary>
            A provider of code coverage information to an external process.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.WebCodeCoverageProvider.MethodName_SaveCodeCoverage">
            <summary>
            The MethodName_SaveCodeCoverage method name.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebCodeCoverageProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new code coverage provider.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebCodeCoverageProvider.SaveCoverageData(System.String,System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Save string-based code coverage data.
            </summary>
            <param name="data">The code coverage data, as a string.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebEnvironmentProvider">
            <summary>
            A provider of environment variables and environmental information that 
            uses the test service provider infrastructure.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.WebEnvironmentProvider.MethodName_GetEnvironmentVariable">
            <summary>
            The MethodName_GetEnvironmentVariable method name.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebEnvironmentProvider.#ctor(Microsoft.Silverlight.Testing.Harness.Service.SilverlightTestService)">
            <summary>
            Initializes a new environment provider.
            </summary>
            <param name="testService">The web test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebEnvironmentProvider.GetEnvironmentVariable(System.String,System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Retrieve an environment variable from the system.
            </summary>
            <param name="name">The variable name.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult">
            <summary>
            Result object for asynchronous test service response that uses a simple 
            web service / POX call.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.#ctor(System.Net.WebRequest,System.Net.WebResponse)">
            <summary>
            Initializes a new web service result.
            </summary>
            <param name="request">The request object.</param>
            <param name="response">The response object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.#ctor(System.Net.WebRequest,System.Net.WebResponse,System.Object)">
            <summary>
            Initializes a new web service result.
            </summary>
            <param name="request">The request object.</param>
            <param name="response">The response object.</param>
            <param name="details">The details to associate for debugging 
            purposes.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.ReadHttpWebResponse">
            <summary>
            Reads the web response, if successful, and parses out the string 
            content.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.ProcessResponse">
            <summary>
            Process the response text.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.Request">
            <summary>
            Gets the web request associated with the service call.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.Response">
            <summary>
            Gets the web response associated with the service call.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.RequestDetails">
            <summary>
            Gets the details of the request, used for interactive debugging 
            sessions only.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult.ResponseString">
            <summary>
            Gets the string retrieved from the response.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebSettingsProvider">
            <summary>
            A test service that reads command line settings.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.WebSettingsProvider.MethodName_GetRunParameters">
            <summary>
            Name of the method MethodName_GetRunParameters.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebSettingsProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new settings provider instance.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebSettingsProvider.SetPageTitle(System.String)">
            <summary>
            Sets the title of the web page.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebSettingsProvider.Initialize">
            <summary>
            Initialize the web settings provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebSettingsProvider.ReadRunParameters(Microsoft.Silverlight.Testing.Harness.Service.ServiceResult)">
            <summary>
            Read the run parameters.
            </summary>
            <param name="result">The service result.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebTestReportingProvider">
            <summary>
            A test service that reports test run results.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.WebTestReportingProvider.MethodName_ReportTestResults">
            <summary>
            Name of the method MethodName_ReportTestResults.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.WebTestReportingProvider.MethodName_WriteLog">
            <summary>
            Name of the method MethodName_WriteLog.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestReportingProvider.#ctor(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Initializes a new reporting provider instance.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestReportingProvider.WriteLog(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult},System.String,System.String)">
            <summary>
            Begins a call to the test service to write to the log.
            </summary>
            <param name="callback">The callback, used to read or verify results 
            from the service call.</param>
            <param name="logName">The name of the log to write.</param>
            <param name="content">The log file content.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestReportingProvider.ReportFinalResult(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult},System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Begins a call to the test service to report a test run's results.
            </summary>
            <param name="callback">The callback, used to read or verify results 
            from the service call.</param>
            <param name="failure">A value indicating whether the test run was a 
            failure.</param>
            <param name="failures">The failed scenario count.</param>
            <param name="totalScenarios">The total scenario count.</param>
            <param name="message">Any message to report along with the failure.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebTestService">
            <summary>
            Provides out-of-process access to operating system functions and other 
            services such as visual verification, if present.
            </summary>
            <summary>
            Provides out-of-process access to operating system functions and other 
            services such as visual verification, if present.
            </summary>
            <summary>
            Provides out-of-process access to operating system functions and other 
            services such as visual verification, if present.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.WebTestService._serviceUri">
            <summary>
            The service address.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.Service.WebTestService._sync">
            <summary>
            The synchronization context.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.#ctor(System.Uri)">
            <summary>
            Initializes a new plain-old-XML test service.  This assumes that 
            the caller has already verifier that a service is present and 
            responding at the service address.
            </summary>
            <param name="serviceUri">The base service URI, such as 
            "scheme://hostname:port/servicePath/".</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CreateUri(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a simple REST-style Uri given the method/service name and 
            a dictionary of key/value pairs to send as arguments.
            </summary>
            <param name="service">The method/service name.</param>
            <param name="arguments">A set of key/value pairs.</param>
            <returns>Returns a new Uri.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CreateUri(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Creates a simple REST-style Uri given the method/service name and 
            a dictionary of key/value pairs to send as arguments.
            </summary>
            <param name="service">The method/service name.</param>
            <param name="arguments">A set of key/value pairs.</param>
            <param name="queryString">Optional query string.</param>
            <returns>Returns a new Uri.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.Dictionary(System.Object[])">
            <summary>
            Builds a simple dictionary from parameters.  The value follows the 
            key parameter.  {[key, value], } ...
            
            The ToString() method is called on every object.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>Returns a key/value dictionary from the parameters.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CallMethod(System.String,System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Begin a POX method call.  The callback is used with the result when 
            it becomes available.
            </summary>
            <param name="method">The method name.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CallMethod(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Begin a POX method call.  The callback is used with the result when 
            it becomes available.
            </summary>
            <param name="method">The method name.</param>
            <param name="arguments">Dictionary of key/value pairs.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CallMethod(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Begin a POX method call.  The callback is used with the result when 
            it becomes available.
            </summary>
            <param name="method">The method name.</param>
            <param name="arguments">Dictionary of key/value pairs.</param>
            <param name="postData">Optional string that will transform the 
            request to a POST request.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CallMethodPostContinue(System.IAsyncResult)">
            <summary>
            The intermediate step that writes the POST data and then continues 
            the web request.
            </summary>
            <param name="ar">The async result object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.ResponseCallback(System.IAsyncResult)">
            <summary>
            Process the response callback from a POX method call.
            </summary>
            <param name="ar">The async result object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.UserInterfaceThreadCallback(System.Object)">
            <summary>
            On the UI thread, invoke the callback action with the result.
            </summary>
            <param name="state">The temporary state object.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CrossThreadState">
            <summary>
            A simple type to store the state information for the cross-thread 
            callback.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CrossThreadState.#ctor(System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult},Microsoft.Silverlight.Testing.Harness.Service.WebServiceResult)">
            <summary>
            Initializes a new TemporaryStateObject object.
            </summary>
            <param name="callback">The callback action.</param>
            <param name="result">The result object.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CrossThreadState.Callback">
            <summary>
            Gets the callback action.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.CrossThreadState.Result">
            <summary>
            Gets the result object.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.RequestData">
            <summary>
            The request data class, stores information used in a request for 
            associating this data with the response.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.RequestData.#ctor(System.Uri,System.Net.HttpWebRequest,System.Action{Microsoft.Silverlight.Testing.Harness.Service.ServiceResult})">
            <summary>
            Initializes a new request data object.
            </summary>
            <param name="uri">The request Uri.</param>
            <param name="request">The request object.</param>
            <param name="callback">The callback action.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.RequestData.ConvertToResult(System.Net.WebResponse)">
            <summary>
            Converts the request data object into a web service result 
            object.
            </summary>
            <param name="response">The response object.</param>
            <returns>Returns a new WebServiceResult instance.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.RequestData.PostData">
            <summary>
            Gets or sets the optional post data for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.RequestData.Request">
            <summary>
            Gets the web request.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.RequestData.RequestUri">
            <summary>
            Gets the request Uri.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.Service.WebTestService.RequestData.Callback">
            <summary>
            Gets the callback action.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.TagAttribute">
            <summary>
            Tag attribute used to associate individual test cases with tags to
            easily test related functionality.
            </summary>
            <remarks>
            The infrastructure associated with the TagAttribute is not yet in place.
            </remarks>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.TagAttribute.ReservedWords">
            <summary>
            List of reserved words that cannot be used as tags.
            </summary>
            <remarks>
            This list should be shared with the tag parser implementation when
            available.
            </remarks>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.TagAttribute.ReservedCharacters">
            <summary>
            List of reserved characters that cannot be used in tags.
            </summary>
            <remarks>
            This list should be shared with the tag parser implementation when
            available.
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.TagAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TagAttribute class.
            </summary>
            <param name="tag">
            Tag associated with the test method or class.
            </param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.TagAttribute.Tag">
            <summary>
            Gets the tag associated with the test method or class.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.HarnessExtensions">
            <summary>
            Set of extension methods used by the harness.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.HarnessExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            An AddRange implementation for the generic IList interface.
            </summary>
            <typeparam name="TListType">The list type.</typeparam>
            <param name="list">The list object.</param>
            <param name="collection">The collection to copy into the list.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.HarnessExtensions.Replace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Replace a list's contents with the items in the IEnumerable.
            </summary>
            <typeparam name="TListType">The list type.</typeparam>
            <param name="list">The list object.</param>
            <param name="sequence">The sequence to copy into the list.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.IProvideDynamicTestMethods">
            <summary>
            The IProvideDynamicTestMethods interface is used to provide additional
            test methods dynamically at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.IProvideDynamicTestMethods.GetDynamicTestMethods">
            <summary>
            Get the dynamic test methods.
            </summary>
            <returns>Sequence of dynamic test methods.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.RetryTestRunFilter">
            <summary>
            A type filter for just a specific test.  Allows the re-running of a 
            single result again in the same process.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter">
            <summary>
            A type to filter down complete sets of classes, tests and methods.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.DefaultTestRunName">
            <summary>
            The default unit test run name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter._settings">
            <summary>
            Unit test settings.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.#ctor(Microsoft.Silverlight.Testing.UnitTestSettings,Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness)">
            <summary>
            Initializes a new test run filter using an existing settings file.
            </summary>
            <param name="settings">A unit test settings instance.</param>
            <param name="harness">The unit test harness.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.GetTestClasses(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly,Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            Retrieve a set of test classes from a test assembly.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
            <param name="instances">Test class instance dictionary.</param>
            <returns>Returns a new list of test class metadata objects.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.SortTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass})">
            <summary>
            Sort the test classes if the settings for alphabetical sorting are 
            present.
            </summary>
            <param name="tests">List of test classes.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.FilterTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            Filter out tests based on the standard-supported methods.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.FilterCustomTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            Perform any custom filtering that the TestRunFilter needs.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.FilterLegacyTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            If specific string-contains filters are present.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.FilterExclusiveTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            If any exclusive classes are found, filter them.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.GetTestMethods(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,System.Object)">
            <summary>
            Retrieves the test methods from a test class metadata object.
            </summary>
            <param name="test">The test class metadata object.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a list of test method metadata objects.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.FilterTestMethods(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Filter the test methods.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.FilterCustomTestMethods(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Perform any custom filtering that the TestRunFilter needs.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.FilterExclusiveTestMethods(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            If any exclusive classes are found, filter them.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.SortTestMethods(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Sorts the test methods, if requested.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.TestRunName">
            <summary>
            Gets a friendly name for the test run.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter.UnitTestHarness">
            <summary>
            Gets the unit test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.RetryTestRunFilter._test">
            <summary>
            The test class.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.RetryTestRunFilter._method">
            <summary>
            The test method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.RetryTestRunFilter.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod)">
            <summary>
            Initializes a new test run filter using an existing settings file.
            </summary>
            <param name="test">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.RetryTestRunFilter.GetTestClasses(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly,Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            Retrieve a set of test classes from a test assembly.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
            <param name="instances">Test class instance dictionary.</param>
            <returns>Returns a new list of test class metadata objects.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.RetryTestRunFilter.GetTestMethods(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,System.Object)">
            <summary>
            Retrieves the test methods from a test class metadata object.
            </summary>
            <param name="test">The test class metadata object.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a list of test method metadata objects.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager">
            <summary>
            A helper class that manages tags and associated metadata. Tag
            expressions are evaluated at the TestClass level.
            </summary>
            <summary>
            A helper class that manages tags and associated metadata. Tag
            expressions are evaluated at the TestClass level.
            </summary>
            <summary>
            A helper class that manages tags and associated metadata. Tag
            expressions are evaluated at the TestClass level.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.PriorityTagPrefix">
            <summary>
            The prefix for any tags generated from priority values.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.TagType">
            <summary>
            A reference to the tag attribute type.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager._classTags">
            <summary>
            The test tags associated with the class.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager._methodTags">
            <summary>
            The test tags associated with methods.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager._tagsToMethods">
            <summary>
            The ability to grab the set of methods, given a test class type, 
            and the tag of interest.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager._testClass">
            <summary>
            The test class type.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.#ctor(System.Type,System.Collections.Generic.IEnumerable{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Initializes a new tag manager.
            </summary>
            <param name="test">The test class type.</param>
            <param name="methods">The set of methods to run.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.CreateClassTags(System.Type)">
            <summary>
            Reflect, read and prepare the tags for the class metadata. Performs 
            the work if this is the first time the metadata has been seen.
            </summary>
            <param name="test">The reflection object for the test class.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.CreateMethodTags(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod)">
            <summary>
            Reflect, read and prepare the tags for the method metadata. Performs 
            the work if this is the first time the metadata has been seen.
            </summary>
            <param name="method">The method metadata.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.EvaluateExpression(System.String)">
            <summary>
            Get the test methods that correspond to a tag expression.
            </summary>
            <param name="tagExpression">Tag expression.</param>
            <returns>Test methods for the tag expression.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.Universe">
            <summary>
            Gets or sets the universe of all test methods for expression 
            evaluation.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator">
            <summary>
            Evaluate tag expressions.
            </summary>
            <remarks>
            Tag expressions are derived from the following EBNF grammar:
                {Expression} :=
                    {Expression} + {Term} |
                    {Expression} - {Term} |
                    {Term}
                {Term} :=
                    {Term} * {Factor} |
                    {Factor}
                {Factor} :=
                    !{Factor} |
                    ({Expression}) |
                    {Tag}
                {Tag} :=
                    All |
                    [^InvalidCharacters]+
             
            The non-terminals for {Expression} and {Term} will be left factored
            in the recursive descent parser below.
            </remarks>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.Union">
            <summary>
            Union character.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.Intersection">
            <summary>
            Intersection character.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.Complement">
            <summary>
            Complement character.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.Difference">
            <summary>
            Difference character.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.All">
            <summary>
            The "All" string constant.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.InvalidCharacters">
            <summary>
            Invalid characters in a tag name.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.Evaluate(Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager,System.String)">
            <summary>
            Evaluate a tag expression.
            </summary>
            <param name="owner">The owner object.</param>
            <param name="tagExpression">Tag expression.</param>
            <returns>Test methods associated with the tag expression.</returns>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator._owner">
            <summary>
            The owning TagManager instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator._tagExpression">
            <summary>
            Expression being evaluated.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator._position">
            <summary>
            Current position in the expression.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager,System.String)">
            <summary>
            Create an expression evaluator.
            </summary>
            <param name="owner">The owner object.</param>
            <param name="tagExpression">Expression object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.Match(System.String)">
            <summary>
            Match a sequence of characters.
            </summary>
            <param name="expected">String to match.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.TryMatch(System.String)">
            <summary>
            Try to match a sequence of characters.
            </summary>
            <param name="expected">String to match.</param>
            <returns>Returns a value indicating whether the match was 
            successful.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.Evaluate">
            <summary>
            Evaluate an expression.
            </summary>
            <returns>Test methods described by the expression.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.ReadExpression">
            <summary>
            Evaluate an expression.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            We need to factor out left recursion, so:
                {Expression} :=
                    {Expression} + {Term} |
                    {Expression} - {Term} |
                    {Term}
            becomes:
                {Expression} :=
                	{Term}{Expression'}
                
                {Expression'} :=
                	#empty#
                	+ {Term}{Expression'}
                	- {Term}{Expression'}
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.ReadExpression(System.Collections.Generic.IEnumerable{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Evaluate an expression.
            </summary>
            <param name="term">
            Left term already read as part of the expression.
            </param>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            Non-terminal created for left-factoring:
                {Expression'} :=
                	#empty#
                	+ {Term}{Expression'}
                	- {Term}{Expression'}
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.ReadTerm">
            <summary>
            Evaluate a term.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            We need to factor out left recursion, so:
                {Term} :=
                    {Factor} * {Term} |
                    {Factor}
            becomes:
                {Term} :=
                    {Factor}{Term'}
            
                {Term'} :=
                	#empty#
                	^ {Factor}{Term'}
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.ReadTerm(System.Collections.Generic.IEnumerable{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Evaluate a term.
            </summary>
            <param name="factor">
            Left term already read as part of the expression.
            </param>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            Non-terminal created for left-factoring:
                {Term'} :=
                	#empty#
                	^ {Factor}{Term'}
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.ReadFactor">
            <summary>
            Evaluate a factor.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            {Factor} :=
                !{Factor} |
                ({Expression}) |
                {Tag}
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.CreateEmptyList">
            <summary>
            Creates a new empty collection.
            </summary>
            <returns>Returns an empty collection.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.ExpressionEvaluator.ReadTag">
            <summary>
            Evaluate a tag.
            </summary>
            <returns>Test methods described by the expression.</returns>
            <remarks>
            {Tag} :=
                All |
                [^InvalidCharacters]+
            </remarks>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.Tags">
            <summary>
            A string list for storing tags. Provides an Add method that takes 
            an attribute object and, if a TagAttribute, will append its tag 
            value to the list.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.Tags.#ctor">
            <summary>
            Initializes a new Tags instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.Tags.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new Tags instance from an existing collection.
            </summary>
            <param name="collection">The collection to copy.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager.Tags.Add(System.Attribute)">
            <summary>
            Adds a TagAttribute's tag value.
            </summary>
            <param name="tag">The tag object.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter">
            <summary>
            A method and class filter that uses expressions and the TagAttribute.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.NullTagRunName">
            <summary>
            The name to use for the test run when the tag expression is null.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.#ctor(Microsoft.Silverlight.Testing.UnitTestSettings,Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness)">
            <summary>
            Initializes a new test run filter with the tag expression setting.
            </summary>
            <param name="settings">Unit test settings.</param>
            <param name="harness">Unit test harness.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.#ctor(Microsoft.Silverlight.Testing.UnitTestSettings,Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness,System.String)">
            <summary>
            Initializes a new test run filter with the tag expression.
            </summary>
            <param name="settings">Unit test settings.</param>
            <param name="harness">Unit test harness.</param>
            <param name="tagExpression">The tag expression to use.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.SetTagExpression(System.String)">
            <summary>
            Sets the tag expression property.
            </summary>
            <param name="tagExpression">The tag expression to use.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter._hasLoggedWarning">
            <summary>
            A value indicating whether the warning has been logged yet.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.FilterCustomTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            Apply tag filtering.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.FilterCustomTestMethods(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Apply tag filtering.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.ApplyExpression(Microsoft.Silverlight.Testing.UnitTesting.Harness.TagManager,System.Collections.Generic.ICollection{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Apply the tag filtering.
            </summary>
            <param name="tagManager">The tag manager instance.</param>
            <param name="methods">Set of methods.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.FilterExclusiveTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary)">
            <summary>
            Exclusive attributes are not supported when also using tagging.
            </summary>
            <param name="classes">List of test classes.</param>
            <param name="instances">Test class instance dictionary.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.FilterExclusiveTestMethods(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Exclusive attributes are not supported when also using tagging.
            </summary>
            <param name="methods">List of test methods.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.TagTestRunFilter.TagExpression">
            <summary>
            Gets the tag expression in use by the run filter.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestAssemblyHelper">
            <summary>
            Helper code for TestAssembly logic.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestAssemblyHelper.HasExclusiveClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass})">
            <summary>
            Check whether [Exclusive] attribute is present on any classes.
            </summary>
            <param name="classes">Collection of class metadata objects.</param>
            <returns>Returns a value indicating whether any of the classes 
            include an [Exclusive] attribute.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestAssemblyHelper.SortTestClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass})">
            <summary>
            Sorts the test classes alphabetically by name.
            </summary>
            <param name="classes">A list of test class metadata objects.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassHelper">
            <summary>
            Test class helper.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassHelper._hasWarned">
            <summary>
            A value indicating whether the warning has been logged in this run.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassHelper.FilterTestsToRun(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},System.Collections.Generic.ICollection{System.String})">
            <summary>
            Filter the set of test classes by removing unused classes.
            </summary>
            <param name="classes">The input list of test class metadata objects.</param>
            <param name="classesToRun">The classes to run.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassHelper.FilterExclusiveClasses(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass},Microsoft.Silverlight.Testing.Harness.LogMessageWriter)">
            <summary>
            Look through the classes for the [Exclusive] attribute. If found, 
            remove any classes where the attribute is not present.
            </summary>
            <param name="classes">The input list of classes.</param>
            <param name="logWriter">The log writer object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassHelper.FilterByFilterClassParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass})">
            <summary>
            Look for the /p:FilterClass parameter in the test harness settings. 
            Try to do a substring match on all filtered test classes.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="classes">List of test classes to be filtered.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodHelper">
            <summary>
            Helper code for TestMethod logic.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodHelper._hasWarned">
            <summary>
            A value indicating whether the warning has been logged in this run.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodHelper.HasExclusiveMethods(System.Collections.Generic.ICollection{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod})">
            <summary>
            Check whether [Exclusive] is present on >= 1 of the methods.
            </summary>
            <param name="methods">The methods to search through.</param>
            <returns>True if at least one of the methods has Exclusive.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodHelper.FilterExclusiveMethods(System.Collections.Generic.IList{Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod},Microsoft.Silverlight.Testing.Harness.LogMessageWriter)">
            <summary>
            Look through the methods for the [Exclusive] attribute. If found, 
            remove any methods where the attribute is not present.
            </summary>
            <param name="methods">The methods to filter.</param>
            <param name="logWriter">The log writer object.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager">
            <summary>
            Manager for planning, processing, and reporting the result of a single 
            test method for a unit test provider.
            </summary>
            <summary>
            Manager for planning, processing, and reporting the result of a single 
            test method for a unit test provider.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem">
            <summary>
            A container that stores instances of the unit test harness and provider.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem">
            <summary>
            TestWorkItem which can contain sub-tasks; the underlying work item is 
            not marked complete until the Children have completed or an Exception 
            is thrown.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.WorkItem">
            <summary>
            A test work item is a task that is invoked until it is complete.  It 
            maintains its own state to be able to notify the caller when it is 
            finally complete, with no further work to be run.
            
            It is possible that some implementations of a TestWorkItem may actually 
            contain a set of sub-tasks by implementing a composite pattern.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.IWorkItem">
            <summary>
            A simple class that represents a work item for testing, the Invoke 
            method is called on the work item until the IsComplete property returns 
            true. The Invoke bool method returns false when complete.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.IWorkItem.Invoke">
            <summary>
            Invoke the work item to perform some unit of work.  Will be called 
            until it returns false.
            </summary>
            <returns>False when no more work remains.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.IWorkItem.IsComplete">
            <summary>
            Gets a value indicating whether the work item has completed.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItem.Invoke">
            <summary>
            Invoke the task.  Return false only when the task is complete.
            </summary>
            <returns>True if there is additional work to be completed.  False 
            when there is none.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItem.WorkItemComplete">
            <summary>
            Called by the task after the work is complete.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.WorkItem.IsComplete">
            <summary>
            Gets a value indicating whether the task's work is complete.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem">
            <summary>
            Queue of tasks that need to be executed.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem.Enqueue(Microsoft.Silverlight.Testing.IWorkItem)">
            <summary>
            Enqueue a work item.
            </summary>
            <param name="item">Test work item.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem.Dequeue">
            <summary>
            Dequeue a test work item.
            </summary>
            <returns>Any available work item, or null if none are available in 
            the queue.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem.Peek">
            <summary>
            Peek at the end of the test work item container.
            </summary>
            <returns>Any available test work item.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem.RemainingWork">
            <summary>
            Gets a value indicating whether any tasks are available in the queue.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem.Complete">
            <summary>
            Completion event for the work item container.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem.UnhandledException">
            <summary>
            Event fired when an unhandled exception occurs inside the 
            test work item queue.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem._children">
            <summary>
            Store the underlying tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem._finishWhenEmpty">
            <summary>
            Whether the TestTaskContainer::IsComplete should be set to true 
            after all children have been de-queued.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem._invoked">
            <summary>
            Whether the first invoke has happened yet or not.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.#ctor">
            <summary>
            Constructor for the TestTaskContainer type.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.FirstInvoke">
            <summary>
            Optional method to call on the first invoke.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.Invoke">
            <summary>
            Invoke the test container; in turn will execute child work items 
            as needed.
            </summary>
            <returns>True if additional work remains, False once IsComplete 
            is set to true.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.ClearChildren">
            <summary>
            Clear the children.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.Dequeue">
            <summary>
            Dequeue a work item.
            </summary>
            <returns>A work item.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.Enqueue(Microsoft.Silverlight.Testing.IWorkItem)">
            <summary>
            Add a new work item to the container to schedule it for invocation.
            </summary>
            <param name="item">New test work item to enqueue.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.Enqueue(System.Action)">
            <summary>
            Add a new callback action and schedule it for invocation.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.Peek">
            <summary>
            Return the top work item, if any, from this container.
            </summary>
            <returns>Peek into any test work item.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.WorkItemComplete">
            <summary>
            Work items must call this method to indicate completion of the work 
            item; in turn fires the Complete event delegates.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.WorkItemCompleteInternal">
            <summary>
            Internal-only version which can be called during a test completion 
            through the relation - not necessarily the best design; events 
            may make more sense long-term.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.WorkItemException(System.Exception)">
            <summary>
            Call when an exception occurs inside a work item.
            </summary>
            <param name="e">Exception object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.OnComplete(System.EventArgs)">
            <summary>
            Fire the Complete event.
            </summary>
            <param name="e">Empty event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.OnUnhandledException(System.Exception)">
            <summary>
            Fire the unhandled exception event.
            </summary>
            <param name="exception">Exception object.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.FinishWhenEmpty">
            <summary>
            Gets a value indicating whether the container is marked Complete 
            when all children have executed or not.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.RemainingWork">
            <summary>
            Gets a value indicating whether sub tasks remain.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.Complete">
            <summary>
            Complete event is fired when the underlying WorkItemComplete method 
            is called by the work item.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.UnitTesting.Harness.CompositeWorkItem.UnhandledException">
            <summary>
            Event fired when an exception is thrown and unhandled within the 
            underlying Invoke sequence.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem._provider">
            <summary>
            The unit test provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness,Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider)">
            <summary>
            Initializes a new unit test work item container.
            </summary>
            <param name="testHarness">The unit test harness.</param>
            <param name="unitTestProvider">The unit test metadata provider.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem.LogMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Logs a new message.
            </summary>
            <param name="message">Message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem.LogMessage(System.String)">
            <summary>
            Logs a message about the harness.
            </summary>
            <param name="harnessInformation">Information about the harness.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem.LogWriter">
            <summary>
            Gets the log message writer for the unit test system.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem.TestHarness">
            <summary>
            Gets the test harness instance.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestCompositeWorkItem.Provider">
            <summary>
            Gets the unit test provider instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.FirstInvokeOptional">
            <summary>
            Optional code run at the end of the FirstInvoke method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager._testClass">
            <summary>
            Underlying test class object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager._testMethod">
            <summary>
            Underlying test method object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager._instance">
            <summary>
            Reference to an instance of the test class.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager._result">
            <summary>
            Scenario result of the test method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager._started">
            <summary>
            The started time of execution.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager._bugAttributePresent">
            <summary>
            A value indicating whether the bug attribute was present on this 
            method.  If it is, the result will be inverted at completion.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager._mainTestMethodContainer">
            <summary>
            Contains the main test contents.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,System.Object,Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider)">
            <summary>
            Constructor for a test method manager, which handles executing a single test method 
            for a unit test provider.
            </summary>
            <param name="testHarness">The unit test harness object.</param>
            <param name="testClass">The test class metadata object.</param>
            <param name="testMethod">The test method metadata object.</param>
            <param name="instance">The test class instance.</param>
            <param name="provider">The unit test provider.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.LogStartMessage">
            <summary>
            Log a start message.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.LogEndMessage">
            <summary>
            Log an end message.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.FirstInvoke">
            <summary>
            First invoke, plan for the method's execution.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.SetResultTimes">
            <summary>
            Sets the start and finish times on the ScenarioResult object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.CreateNewResult(Microsoft.Silverlight.Testing.Harness.TestOutcome)">
            <summary>
            Creates the ScenarioResult instance for this test method.
            </summary>
            <param name="outcome">The initial test outcome value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.CompleteMethod(System.Object,System.EventArgs)">
            <summary>
            Process the result.
            </summary>
            <param name="sender">Source object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.UnhandledMethodException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Process an unhandled exception for the method.
            </summary>
            <param name="sender">Source object.</param>
            <param name="e">Unhandled exception event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.EnqueueMethodDispatcher(System.Reflection.MethodInfo)">
            <summary>
            Create a new method container to enclose a reflected method for execution.
            </summary>
            <param name="method">The method reflection object.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestMethodManager.BugAttributeProcessed">
            <summary>
            Gets or sets a value indicating whether the bug attribute's logic
            has already been processed.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogicFactory">
            <summary>
            A factory for creating the unit test objects.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogicFactory._harness">
            <summary>
            The unit test harness.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogicFactory.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness)">
            <summary>
            Initializes a new unit test logic factory.
            </summary>
            <param name="harness">The unit test harness reference.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogicFactory.CreateAssemblyManager(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider,Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter,Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly)">
            <summary>
            Creates a new AssemblyManager.
            </summary>
            <param name="provider">The unit test provider.</param>
            <param name="filter">The run filter.</param>
            <param name="assembly">The unit test assembly metadata object.</param>
            <returns>Returns a new AssemblyManager.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogicFactory.CreateTestClassManager(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider,Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,System.Object)">
            <summary>
            Creates a new TestClassManager.
            </summary>
            <param name="provider">The unit test provider.</param>
            <param name="filter">The run filter.</param>
            <param name="testClass">The test class metadata.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a new TestClassManager.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogicFactory.CreateTestMethodManager(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,System.Object)">
            <summary>
            Creates a new TestMethodManager.
            </summary>
            <param name="provider">The unit test provider.</param>
            <param name="testClass">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
            <param name="instance">The test class instance.</param>
            <returns>Returns a new TestMethodManager.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider">
            <summary>
            A log provider that outputs in a simple custom test format that Visual 
            Studio recognizes.
            </summary>
            <summary>
            A log provider that outputs in a simple custom test format that Visual 
            Studio recognizes.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.LogProvider">
            <summary>
            LogProvider interface with a single Process method that handles a
            LogMessage object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogProvider._conditionalHandlers">
            <summary>
            A dictionary of conditional action handlers.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogProvider._definedHandlers">
            <summary>
            A dictionary of types/actions for handling specific types of log
            messages.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogProvider.Process(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Perform any needed operations to log the message.
            </summary>
            <param name="logMessage">Instance of LogMessage type.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogProvider.ProcessRemainder(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Method that processes any messages not handled any other way.
            </summary>
            <param name="message">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogProvider.RegisterMessageTypeHandler(Microsoft.Silverlight.Testing.Harness.LogMessageType,System.Action{Microsoft.Silverlight.Testing.Harness.LogMessage})">
            <summary>
            Registers an action for a specific message type.
            </summary>
            <param name="type">The type of interest.</param>
            <param name="action">The handler for the type.  Takes a LogMessage 
            parameter.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogProvider.RegisterConditionalHandler(System.Func{Microsoft.Silverlight.Testing.Harness.LogMessage,System.Boolean},System.Action{Microsoft.Silverlight.Testing.Harness.LogMessage})">
            <summary>
            Registers a conditional handler.  During the log message processing 
            step, all conditional callbacks will be tried.  The first positive 
            result will then call the associated processing Action for that 
            conditional method entry.
            </summary>
            <param name="condition">A conditional callback that takes a 
            LogMessage input parameter.</param>
            <param name="action">A log message processing Action that is called 
            when the condition is true.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogProvider.UnregisterConditionalHandler(System.Func{Microsoft.Silverlight.Testing.Harness.LogMessage,System.Boolean})">
            <summary>
            Removes a conditional callback.
            </summary>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogProvider.ClearConditionalHandlers">
            <summary>
            Clear all existing conditional handlers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogProvider.ClearMessageTypeHandlers">
            <summary>
            Clear all existing message type handlers.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.ITestSettingsLogProvider">
            <summary>
            Interface for LogProviders that want access to external test settings.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ITestSettingsLogProvider.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.DefaultTestResultsFilename">
            <summary>
            The filename to use for saving test results.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.DefaultTestAdapterTypeName">
            <summary>
            The default test adapter type name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.DefaultTestListName">
            <summary>
            The default test list name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.DefaultComputerName">
            <summary>
            The default computer name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.DefaultUserName">
            <summary>
            The default user name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.DefaultTestRunConfigurationName">
            <summary>
            The default configuration name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.DefaultTestRunConfigurationDescription">
            <summary>
            The default configuration description.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider._writer">
            <summary>
            The Visual Studio log format writer.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.#ctor">
            <summary>
            Initializes a new instance of the VisualStudioLogProvider class.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.RegisterLogHandlers">
            <summary>
            Register the handler conditions of interest to this log provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestAssemblyStart(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Assembly start code.
            </summary>
            <param name="l">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.ProcessIncorrectException(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process an Exception that was not the expected Exception type.
            </summary>
            <param name="l">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.ProcessException(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process an Exception that is logged or stored.
            </summary>
            <param name="l">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.SetTestRunConfiguration(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly)">
            <summary>
            Sets the test run configuration information when the test assembly 
            begins processing.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.GenerateTestRunName(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly)">
            <summary>
            Generate a name for the test run that will be used when 
            displaying the result in Visual Studio.
            </summary>
            <param name="assembly">The test assembly metadata object.</param>
            <returns>Returns the test run name.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.NewGuid">
            <summary>
            Generates a new Guid string value.
            </summary>
            <returns>Returns a new Guid string value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.ProcessResult(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process a UTF result message.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.ProcessBug(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process [Bug(...)].
            </summary>
            <param name="l">A KnownBugLogMessage object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestRunFilterSelected(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            The run filter has been selected.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.WriteLogFile(Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness)">
            <summary>
            Saves the log file data.
            </summary>
            <param name="harness">The unit test harness.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initializes the test harness.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestResultsFileName">
            <summary>
            Gets or sets the test results filename.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestAdapterTypeName">
            <summary>
            Gets or sets the test adapter type name reported in the Visual 
            Studio results log file.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestRunId">
            <summary>
            Gets or sets the TestRunId.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestListName">
            <summary>
            Gets or sets the test list name.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.ComputerName">
            <summary>
            Gets or sets the computer name that is reported in the results
            log file.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.UserName">
            <summary>
            Gets or sets the user name that is reported in the results file.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestRunConfigurationName">
            <summary>
            Gets or sets the TestRunConfigurationName.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestRunConfigurationDescription">
            <summary>
            Gets or sets the TestRunConfigurationDescription.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestRunNamePrefix">
            <summary>
            Gets or sets a prefix for use in the test run name.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.TestRunConfigurationId">
            <summary>
            Gets or sets the TestRunConfigurationId.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.CurrentAssemblyName">
            <summary>
            Gets the current assembly name.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer">
            <summary>
            A log provider that outputs in a simple custom test format that 
            Visual Studio recognizes. This is a simple, subset writer.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.DateTimeFormat">
            <summary>
            Date time format string representing round-trip date/time 
            pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.DefaultTestTypeId">
            <summary>
            A unique ID representing the Visual Studio unit test type ID.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.ResultsXmlNamespace">
            <summary>
            The namespace for Visual Studio team test results.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer._testLists">
            <summary>
            A dictionary containing test list names and guids.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer._pendingElements">
            <summary>
            Stores temporary, pending elements for the next result.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.#ctor">
            <summary>
            Initializes a new Writer object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.FinalizeContent">
            <summary>
            Stores property values in the respective elements, clears any 
            lookup dictionaries.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.ToDateString(System.DateTime)">
            <summary>
            Returns a string value of the DateTime object.
            </summary>
            <param name="dateTime">The DateTime object.</param>
            <returns>Returns the formatted string.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.GetXmlAsString">
            <summary>
            Returns the XML log file as a string.
            </summary>
            <returns>The XML value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.CreateInitialDocument">
            <summary>
            Creates the initial results document and its XElements.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.CreateElement(System.String)">
            <summary>
            Creates a new XElement within the results XML namespace.
            </summary>
            <param name="name">The element name.</param>
            <returns>Returns a new named element.</returns>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer._total">
            <summary>
            The total number of scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer._outcomes">
            <summary>
            The set of outcomes and counts.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.IncrementResults(Microsoft.Silverlight.Testing.Harness.TestOutcome)">
            <summary>
            Increment the number of passing results.
            </summary>
            <param name="outcome">The test outcome.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.AddTestMethodResult(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,Microsoft.Silverlight.Testing.Harness.TestOutcome)">
            <summary>
            Adds the result of a test method into the log.
            </summary>
            <param name="test">The test metadata.</param>
            <param name="storage">The storage value.</param>
            <param name="codeBase">The code base value.</param>
            <param name="adapterTypeName">The adapter type name.</param>
            <param name="className">The class name.</param>
            <param name="testListName">The test list name.</param>
            <param name="computerName">The computer name.</param>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="outcome">The outcome.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.AddPendingWriteLine(System.String)">
            <summary>
            Adds a WriteLine to the next result to be processed.
            </summary>
            <param name="line">The text to output.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.AddPendingErrorMessage(System.String)">
            <summary>
            Adds an error message to the next result to be processed.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.AddPendingException(System.Exception)">
            <summary>
            Adds an Exception to the next result to be processed.
            </summary>
            <param name="e">The Exception object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.AddPendingOutput(System.Xml.Linq.XElement)">
            <summary>
            Adds pending output for the next result.
            </summary>
            <param name="element">The element to wrap in an Output element.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.GetTestListGuid(System.String)">
            <summary>
            Returns the GUID for a test list name. The result is stored 
            in memory.
            </summary>
            <param name="testListName">The test list name.</param>
            <returns>Returns the test list name guid.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.Started">
            <summary>
            Gets or sets the time that the test run started.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.Created">
            <summary>
            Gets or sets the time that the writer object and/or test run was created.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.Finished">
            <summary>
            Gets or sets the time that the test run was finished.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRun">
            <summary>
            Gets the root XML node for the test run and its results.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.UnitTestTestTypeId">
            <summary>
            Gets or sets the test type ID used for new results.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRunConfiguration">
            <summary>
            Gets the TestRunConfiguration element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.Counters">
            <summary>
            Gets the Counters element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestDefinitions">
            <summary>
            Gets the TestDefinitions element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestLists">
            <summary>
            Gets the TestLists element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestEntries">
            <summary>
            Gets the TestEntries element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.Times">
            <summary>
            Gets the Times element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.ResultSummary">
            <summary>
            Gets the ResultSummary element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.Results">
            <summary>
            Gets the Results element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRunId">
            <summary>
            Sets the TestRunId.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRunName">
            <summary>
            Sets the TestRunName.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRunUser">
            <summary>
            Sets the TestRunUser.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRunConfigurationName">
            <summary>
            Sets the TestRunConfigurationName.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRunConfigurationId">
            <summary>
            Sets the TestRunConfigurationId.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.RunOutcome">
            <summary>
            Sets the overall run outcome value.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.VisualStudioLogProvider.Writer.TestRunConfigurationDescription">
            <summary>
            Sets the TestRunConfigurationDescription.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.TextFailuresLogProvider">
            <summary>
            A log provider that outputs in a simple custom test format that Visual 
            Studio recognizes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TextFailuresLogProvider._failures">
            <summary>
            A list of failing results.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TextFailuresLogProvider.#ctor">
            <summary>
            Initializes a new TextFailuresLogProvider instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TextFailuresLogProvider.GetFailuresLog">
            <summary>
            Retrieve the text log of all failures in the unit test run.
            </summary>
            <returns>Returns the log contents.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TextFailuresLogProvider.RegisterLogHandlers">
            <summary>
            Register the handler conditions of interest to this log provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TextFailuresLogProvider.ProcessResult(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process a UTF result message.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation">
            <summary>
            Information about the web browser.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation.#ctor">
            <summary>
            Construct a new browser information instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation._firefox">
            <summary>
            Value indicating whether Firefox is being used.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation._ie">
            <summary>
            Value indicating whether Windows Internet Explorer is being used.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation._safari">
            <summary>
            Value indicating whether Apple Safari is being used.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation.IsFirefox">
            <summary>
            Gets a value indicating whether Firefox is being used.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation.IsIE">
            <summary>
            Gets a value indicating whether Internet Explorer is in use.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation.IsSafari">
            <summary>
            Gets a value indicating whether Safari is in use.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation.IsNotIE">
            <summary>
            Gets a value indicating whether a non-IE browser is in use.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation.IsWindows">
            <summary>
            Gets a value indicating whether the current platform is Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.BrowserInformation.IsMac">
            <summary>
            Gets a value indicating whether the current platform is Apple OS X.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid">
            <summary>
            A simple grid.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlControl">
            <summary>
            A managed HTML control that provides many of the same services as 
            HtmlElement, plus style, property and basic extensions.
            
            Any HtmlElement can be provided in the constructor to get access to the 
            helper methods, strong type properties, and other tools.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlControlBase">
            <summary>
            The base managed HTML control type.  In most cases, HtmlControl should 
            be used instead.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase.AutoGeneratedIdPrefix">
            <summary>
            The prefix to use for any auto-generated ID value.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase._allControls">
            <summary>
            The static, shared HtmlControlManager instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.AppendAndInitialize(System.Windows.Browser.HtmlElement,Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Used by an extension method on System.Windows.Browser.HtmlElement to
            hook a managed control up by creating a real underlying element.
            </summary>
            <param name="parent">The HtmlElement to append the managed 
            HtmlControl to.</param>
            <param name="control">The managed HtmlControlBase or HtmlControl to 
            append, Initialize, and create with a real element.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase._autogeneratedIdIndex">
            <summary>
            The current auto-generating Id index.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase._wrapper">
            <summary>
            The wrapper to save settings, events, and other properties on.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase._controls">
            <summary>
            A collection of children controls.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase._parent">
            <summary>
            The parent managed HTML control reference.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase._htmlElement">
            <summary>
            The underlying, actual browser HtmlElement object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlBase._tag">
            <summary>
            The tag name.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.#ctor">
            <summary>
            Initialize the HtmlControlBase and its fields.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.#ctor(System.String)">
            <summary>
            Initializes a new Control, places it inside the parent control, and 
            creates the underlying HtmlElement object.
            </summary>
            <param name="tag">The new type of tag name to create.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.#ctor(Microsoft.Silverlight.Testing.Html.HtmlTag)">
            <summary>
            Initializes a new Control, places it inside the parent control, and 
            creates the underlying HtmlElement object.
            </summary>
            <param name="tag">The new type of tag name to create.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.#ctor(System.Windows.Browser.HtmlElement)">
            <summary>
            Initializes a new Control object, as the root (no parent).  The 
            HtmlElement needs to already exist.
            
            Very important note:
            The Initialize method is not called automatically if you are using 
            this constructor - you must call Initialize if your code expects it 
            to be.
            </summary>
            <param name="element">The root HTML element.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.CreateAndAppend(System.Windows.Browser.HtmlElement)">
            <summary>
            Creates the actual HtmlElement and prepares its parent 
            associations.
            </summary>
            <param name="parentElement">The parent, containing HtmlElement.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetParentIfExists(System.Windows.Browser.HtmlElement)">
            <summary>
            Sets the managed HtmlControlBase parent, if it exists and is 
            registered, for an HtmlElement.
            </summary>
            <param name="parentHtmlElement">The parent HtmlElement.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.AppendSelfToParentControl">
            <summary>
            Ensures that the parent control, if any, has this control as a 
            child.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetHtmlElementInternal(System.Windows.Browser.HtmlElement)">
            <summary>
            Sets the actual HtmlElement for the control.
            </summary>
            <param name="element">The actual HtmlElement instance.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.Initialize">
            <summary>
            Called to initialize the control.  This will create the real 
            HtmlElement on the page when appended.  This also initializes 
            sub-controls and can be overridden as necessary.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.ConvertBagWrapper">
            <summary>
            Converts from a property bag to a live wrapper.  If the current 
            wrapper is not a bag, then it creates a new wrapper around the live 
            HtmlElement.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.RequireInitialization">
            <summary>
            Performs a check that initialization has happened.  Will throw an 
            InvalidOperationException if it has not yet initialized.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.HasControls">
            <summary>
            Checks if the control has managed child controls.
            </summary>
            <returns>Returns whether there are child controls.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GenerateId">
            <summary>
            Generates and assigns an ID to the control.  Also returns the value.
            </summary>
            <returns>Returns the generated and assigned ID.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetPropertyNumber(System.String)">
            <summary>
            Get a property value as an integer.
            </summary>
            <param name="property">The ScriptObject property name.</param>
            <returns>Returns the property value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetPropertyNumber(Microsoft.Silverlight.Testing.Html.HtmlProperty)">
            <summary>
            Get a property value as an integer.
            </summary>
            <param name="property">The ScriptObject property name.</param>
            <returns>Returns the property value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetProperty(Microsoft.Silverlight.Testing.Html.HtmlProperty)">
            <summary>
            Gets a property.
            </summary>
            <param name="property">The HTML property.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetProperty(Microsoft.Silverlight.Testing.Html.HtmlProperty,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="property">The HTML property.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})">
            <summary>
            Attach an event handler to the element.
            </summary>
            <param name="eventName">The HTML script event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.AttachEvent(System.String,System.EventHandler)">
            <summary>
            Attach an event handler to the element.
            </summary>
            <param name="eventName">The HTML script event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.AttachEvent(Microsoft.Silverlight.Testing.Html.HtmlEvent,System.EventHandler)">
            <summary>
            Attach an event handler to the element.
            </summary>
            <param name="eventName">The HTML script event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.AttachEvent(Microsoft.Silverlight.Testing.Html.HtmlEvent,System.EventHandler{System.Windows.Browser.HtmlEventArgs})">
            <summary>
            Attach an event handler to the element.
            </summary>
            <param name="eventName">The HTML script event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetAttribute(System.String)">
            <summary>
            Get an attribute from the element.
            </summary>
            <param name="name">The attribute name to lookup.</param>
            <returns>Returns the attribute's value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetAttribute(Microsoft.Silverlight.Testing.Html.HtmlAttribute)">
            <summary>
            Get an attribute from the element.
            </summary>
            <param name="attribute">The attribute name to lookup.</param>
            <returns>Returns the attribute's value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetStyleAttribute(System.String)">
            <summary>
            Gets the style attribute.
            </summary>
            <param name="name">The attribute to get.</param>
            <returns>Returns the string value of the style attribute.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetStyleAttribute(Microsoft.Silverlight.Testing.Html.CssAttribute)">
            <summary>
            Gets the style attribute.
            </summary>
            <param name="name">The attribute to get.</param>
            <returns>Returns the string value of the style attribute.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.RemoveAttribute(System.String)">
            <summary>
            Remove an attribute from the element.
            </summary>
            <param name="name">The attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.RemoveAttribute(Microsoft.Silverlight.Testing.Html.HtmlAttribute)">
            <summary>
            Remove an attribute from the element.
            </summary>
            <param name="attribute">The attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.RemoveStyleAttribute(System.String)">
            <summary>
            Remove a style attribute from the element.
            </summary>
            <param name="name">The style attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.RemoveStyleAttribute(Microsoft.Silverlight.Testing.Html.CssAttribute)">
            <summary>
            Remove a style attribute from the element.
            </summary>
            <param name="name">The style attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetAttribute(System.String,System.String)">
            <summary>
            Set an attribute value.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetAttribute(Microsoft.Silverlight.Testing.Html.HtmlAttribute,System.String)">
            <summary>
            Set an attribute value.
            </summary>
            <param name="attribute">The attribute name.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetStyleAttribute(System.String,System.String)">
            <summary>
            Sets the style attribute.
            </summary>
            <param name="name">Attribute name.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetStyleAttribute(Microsoft.Silverlight.Testing.Html.CssAttribute,System.String)">
            <summary>
            Sets the style attribute.
            </summary>
            <param name="name">Attribute name.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetStyleAttribute(Microsoft.Silverlight.Testing.Html.CssAttribute,Microsoft.Silverlight.Testing.Html.Unit)">
            <summary>
            Sets the style attribute.
            </summary>
            <param name="name">Attribute name.</param>
            <param name="unit">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetStyleAttribute(Microsoft.Silverlight.Testing.Html.CssAttribute,System.Enum)">
            <summary>
            Sets the style attribute.
            </summary>
            <param name="name">Attribute name.</param>
            <param name="enumValue">The value to set the property to.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetAttributeOrNull(System.String)">
            <summary>
            Gets the attribute value as a string, null if it has not been set.
            </summary>
            <param name="name">The attribute.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetAttributeOrNull(Microsoft.Silverlight.Testing.Html.HtmlAttribute)">
            <summary>
            Gets the attribute value as a string, null if it has not been set.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.GetProperty(System.String)">
            <summary>
            Gets a property.
            </summary>
            <param name="name">The HTML property.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlBase.SetProperty(System.String,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="name">The HTML property.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlBase.HtmlElement">
            <summary>
            Gets the underlying HtmlElement object.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlBase.CssClass">
            <summary>
            Gets or sets the CSS class for the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlBase.Controls">
            <summary>
            Gets the collection of child controls.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlBase.Dispatcher">
            <summary>
            Gets the dispatcher of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlBase.Parent">
            <summary>
            Gets the parent managed Control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlBase.Id">
            <summary>
            Gets or sets the control Id.  If the value is requested, but no Id 
            has been assigned, a new, special, unique Id is auto-generated and 
            assigned.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlBase.TagName">
            <summary>
            Gets the tag name of the element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControl._styleProvider">
            <summary>
            The shared style provider.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControl._advancedBorder">
            <summary>
            The border helper object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControl._padding">
            <summary>
            The padding helper object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControl._margin">
            <summary>
            The margin helper object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControl._position">
            <summary>
            The position helper object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControl._fontInfo">
            <summary>
            The FontInfo helper object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControl.#ctor(System.String)">
            <summary>
            Initializes a new HtmlControl object.  Takes the parent managed 
            control, and the TagName to create for this managed control. 
            Automatically the object is inserted into the page and the parent 
            Control.
            </summary>
            <param name="tag">The TagName to create.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControl.#ctor(Microsoft.Silverlight.Testing.Html.HtmlTag)">
            <summary>
            Initializes a new HtmlControl object.  Takes the parent managed 
            control, and the TagName to create for this managed control. 
            Automatically the object is inserted into the page and the parent 
            Control.
            </summary>
            <param name="tag">The TagName to create.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControl.#ctor(System.Windows.Browser.HtmlElement)">
            <summary>
            Initializes a new HtmlControl object.  The HtmlElement will become 
            the root of this particular HTML element tree island.
            </summary>
            <param name="root">The root, already-existing HTML element to turn 
            into a managed HtmlControl.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControl.ApplyStyles">
            <summary>
            Uses the shared style provider to apply defaults to the object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControl.SetBorder(Microsoft.Silverlight.Testing.Html.Unit,System.String)">
            <summary>
            Sets a number of border properties for the element.
            </summary>
            <param name="width">The width of the border.</param>
            <param name="color">The border color.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControl.SetBorder(Microsoft.Silverlight.Testing.Html.Unit,System.String,Microsoft.Silverlight.Testing.Html.BorderStyle)">
            <summary>
            Sets a number of border properties for the element.
            </summary>
            <param name="width">The width of the border.</param>
            <param name="color">The border color.</param>
            <param name="style">The border style.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControl.Focus">
            <summary>
            Focuses the browser on the control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.StyleProvider">
            <summary>
            Gets or sets the style provider used for all new HtmlControl 
            objects.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.BackgroundColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.ForegroundColor">
            <summary>
            Gets or sets the text (foreground) color of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is Enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Visible">
            <summary>
            Gets or sets a value indicating whether the element is visible on 
            the page.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.BorderColor">
            <summary>
            Gets or sets the border color of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.TaxIndex">
            <summary>
            Gets or sets the tax index of the control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Display">
            <summary>
            Gets or sets the Display property of the control (CSS).
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.BorderStyle">
            <summary>
            Gets or sets the border style of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Position">
            <summary>
            Gets or sets the position of the control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Padding">
            <summary>
            Gets or sets the padding of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Margin">
            <summary>
            Gets or sets the margin of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Font">
            <summary>
            Gets or sets the font of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Width">
            <summary>
            Gets or sets the width of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.Height">
            <summary>
            Gets or sets the height of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControl.BorderWidthAdvanced">
            <summary>
            Gets or sets the advanced border properties, enabling specific 
            left/right/bottom/top widths.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid._body">
            <summary>
            Table body.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid.#ctor">
            <summary>
            Initializes the property grid.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes the property grid with an initial set of string data.
            </summary>
            <param name="initialData">The initial string data.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid.AddRow(Microsoft.Silverlight.Testing.Html.HtmlControl,Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="property">The property cell.</param>
            <param name="value">The value cell.</param>
            <returns>Returns the row HtmlControl.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid.AddRow(System.String,System.String)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="property">The property value.</param>
            <param name="value">The string value.</param>
            <returns>Returns the row HtmlControl.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid.AddRow(System.String,Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="property">The property value.</param>
            <param name="value">The string value.</param>
            <returns>Returns the row HtmlControl.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid.CreateCell(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Creates a cell element with content.
            </summary>
            <param name="content">The content of the cell.</param>
            <returns>Returns the cell.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid.InitializeComponent">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector">
            <summary>
            An interactive web control for examining a test method's results and 
            detailed information.
            </summary>
            <summary>
            An interactive web control for examining a test method's results and 
            detailed information.
            </summary>
            <summary>
            An interactive web control for examining a test method's results and 
            detailed information.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlDiv">
            <summary>
            A &lt;div /&gt;-based container control for content, provides inner HTML
            and text values.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlContainerControl">
            <summary>
            A container control for content, provides inner HTML and text values.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlContainerControl.#ctor(System.Windows.Browser.HtmlElement)">
            <summary>
            Initializes a new root managed container control.
            </summary>
            <param name="root">The new root HtmlElement.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlContainerControl.#ctor(System.String)">
            <summary>
            Initializes a new HtmlContainerControl.
            </summary>
            <param name="tag">The tag name to use to create the control element.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlContainerControl.#ctor(Microsoft.Silverlight.Testing.Html.HtmlTag)">
            <summary>
            Initializes a new HtmlContainerControl.
            </summary>
            <param name="tag">The tag name to use to create the control element.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlContainerControl.InnerHtml">
            <summary>
            Gets or sets the inner HTML content.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlContainerControl.InnerText">
            <summary>
            Gets or sets the inner text content.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlDiv.#ctor(System.Windows.Browser.HtmlElement)">
            <summary>
            Initializes a new DIV.
            </summary>
            <param name="root">The existing DIV element.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlDiv.#ctor">
            <summary>
            Initializes a new div (container) element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector._details">
            <summary>
            Details control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.ToggleDropDown">
            <summary>
            Toggles the details display view.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult)">
            <summary>
            Initializes a new ResultInspector control.
            </summary>
            <param name="result">The scenario result.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.InitializeComponent">
            <summary>
            Prepare the initial visual contents of the web control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Result">
            <summary>
            Gets the scenario result object.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details">
            <summary>
            An interactive control for looking at the details.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.#ctor(Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector)">
            <summary>
            Initializes a new Details object.
            </summary>
            <param name="inspector">The parent inspector control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.ToggleVisibility">
            <summary>
            Toggles the visibility.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.DecorateContainer">
            <summary>
            Allow the Details control to decorate the parent container.
            </summary>
            <returns>Returns a set of control bases to decorate with.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.InitializeComponent">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.PopulateData">
            <summary>
            Populates and creates the controls for showing the detailed 
            information about the result.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.TempCreateInformationGrid">
            <summary>
            Temporary method to create the grid.
            </summary>
            <returns>Returns the grid control.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.BoldRow(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Apply bold formatting to all sub-controls in a row.
            </summary>
            <param name="row">Row control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.AddRetryAction(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Adds the retry action link.
            </summary>
            <param name="actions">The action container.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.AddCopyAction(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Adds the copy information action.
            </summary>
            <param name="actions">The action container.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.StyleActionLink(Microsoft.Silverlight.Testing.Html.HtmlAnchor)">
            <summary>
            Customizes the anchor for action use.
            </summary>
            <param name="anchor">The anchor.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.InsertScenarioTimeInformation(Microsoft.Silverlight.Testing.UnitTesting.UI.HtmlPropertyGrid)">
            <summary>
            Insert time information for the scenario.
            </summary>
            <param name="grid">The property grid.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.CreateInformationGrid(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates the informational property grid for the failure's 
            details.
            </summary>
            <param name="gridInformation">The information to display inside 
            the grid.</param>
            <returns>Returns the information grid.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.CreateContainer">
            <summary>
            Creates a boxed container.
            </summary>
            <returns>Returns the new container.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.CreateContainer(System.String)">
            <summary>
            Creates a boxed container.
            </summary>
            <param name="header">The header for the container.</param>
            <returns>Returns the new container.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.Inspector">
            <summary>
            Gets the parent ResultInspector instance.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.DataLoaded">
            <summary>
            Gets a value indicating whether the data has already been 
            loaded.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.Details.UnitTestHarness">
            <summary>
            Gets the unit test harness.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.ExceptionDetails">
            <summary>
            An interactive control for looking at failure details.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.ExceptionDetails.Utf">
            <summary>
            A standard unit test framework namespace for stripping out.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.ExceptionDetails.#ctor(Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector)">
            <summary>
            Initializes a new FailureDetails control.
            </summary>
            <param name="inspector">The parent inspector object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.ResultInspector.ExceptionDetails.DecorateContainer">
            <summary>
            Allow the Details control to decorate the parent container.
            </summary>
            <returns>Returns a set of control bases to decorate with.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPage">
            <summary>
            A user control that should be used as the root visual for a Silverlight 
            plugin if developers would like to use the advanced TestSurface 
            functionality within Microsoft.Silverlight.Testing.
            
            The TestSurface is automatically cleared after each test scenario 
            completes, eliminating the need for many additional cleanup methods.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPage.#ctor">
            <summary>
            Initializes the TestPage object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPage.TestPage_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Sets the test panel instance.
            </summary>
            <param name="sender">The sending object.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPage.TestPanel">
            <summary>
            Gets the test surface, a dynamic Panel that removes its children 
            elements after each test completes.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress">
            <summary>
            A control to visualize a test run's progress.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress._percent">
            <summary>
            The percent of the run that is complete.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress._progress">
            <summary>
            The progress bar.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress.#ctor">
            <summary>
            Initializes a new progress bar control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress.SetProgressColor(System.String)">
            <summary>
            Sets the color of the progress bar.
            </summary>
            <param name="value">The color value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress.UpdateProgressBar">
            <summary>
            Updates the progress bar.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress.InitializeComponent">
            <summary>
            Initializes the web control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress.MakeTransparent(Microsoft.Silverlight.Testing.Html.HtmlControl,System.Int32)">
            <summary>
            Makes a control transparent.  Works with several browsers.
            </summary>
            <param name="control">The control.</param>
            <param name="opacity">The opacity amount.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.TestRunProgress.PercentComplete">
            <summary>
            Gets or sets the percent complete on a scale from 0 to 100.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Properties.UnitTestMessage">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.CompositeWorkItem_Invoke_NoRemainingWorkItems">
            <summary>
              Looks up a localized string similar to There are no remaining test work items.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.LogException">
            <summary>
              Looks up a localized string similar to Exception: Type &quot;{0}&quot; Message &quot;{1}&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.LogIgnore">
            <summary>
              Looks up a localized string similar to Ignoring &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.LogIncorrectExceptionType">
            <summary>
              Looks up a localized string similar to Incorrect exception type &quot;{0}&quot; received. Was expecting a &quot;{1}&quot; type..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.LogNoException">
            <summary>
              Looks up a localized string similar to No Exception was observed. Was expecting a &quot;{0}&quot; type exception..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagAttribute_ctor_EmptyTag">
            <summary>
              Looks up a localized string similar to Tag cannot be empty!.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagAttribute_ctor_ReservedCharacter">
            <summary>
              Looks up a localized string similar to The tag &quot;{0}&quot; contains the invalid character &quot;{1}&quot;!.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagAttribute_ctor_ReservedTag">
            <summary>
              Looks up a localized string similar to Tag &quot;{0}&quot; is reserved!.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_EmptyTagExpression">
            <summary>
              Looks up a localized string similar to tagExpression cannot be empty!.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_ExpectedEndOfTagExpression">
            <summary>
              Looks up a localized string similar to Expected end of tag expression &quot;{0}&quot; at position {1}!.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_ExpectedTag">
            <summary>
              Looks up a localized string similar to Tag expected in expression &quot;{0}&quot; at position {1}!.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagManager_ExpressionEvaluator_InvalidTagExpression">
            <summary>
              Looks up a localized string similar to Invalid tag expression &quot;{0}&quot; (expected &quot;{1}&quot; at position {2})!.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TagTestRunFilter_TaggingInUse">
            <summary>
              Looks up a localized string similar to Tag expression &quot;{0}&quot; is in use..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TestClassHelper_ExclusiveClassesInUse">
            <summary>
              Looks up a localized string similar to Exclusive classes are in use.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TestMethodHelper_ExclusiveMethodsInUse">
            <summary>
              Looks up a localized string similar to Exclusive methods are in use.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.TestMethodManager_CompleteMethod_UnVerifiedBug">
            <summary>
              Looks up a localized string similar to The known issue could not be verified. A failure will be recorded. If this bug has been fixed, please mark the Fixed attribute value to True..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.UnitTestCompositeWorkItem_ctor_NoTestHarness">
            <summary>
              Looks up a localized string similar to No TestHarness is available..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.UnitTestContext_FeatureNotSupported">
            <summary>
              Looks up a localized string similar to The &quot;{0}&quot; functionality is not supported within this unit test system..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.UnitTestHarness_Initialize_UnitTestHarnessInitialize">
            <summary>
              Looks up a localized string similar to Initialization of UnitTestHarness.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.UnitTestHarness_RunNextStep_NoCompositeWorkItemsExist">
            <summary>
              Looks up a localized string similar to No composite work items exist to be cleared..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.UnitTestHarness_TestAssembliesNotActionable">
            <summary>
              Looks up a localized string similar to No test classes were selected to be in the test run..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.UnitTestSystem_Run_NoTestHarnessInSettings">
            <summary>
              Looks up a localized string similar to Test harness was not specified on test harness settings object. If a test harness settings object was passed in, please verify that it contains a reference to a test harness..
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Properties.UnitTestMessage.WorkItemTest_EnqueueWorkItem_AsynchronousFeatureUnavailable">
            <summary>
              Looks up a localized string similar to Test bug: A test cannot use Test Task objects, such as callbacks and conditionals, or the PumpMessages feature, unless marked with the [Asynchronous] attribute..
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTestSystem">
            <summary>
            A central entry point for unit test projects and applications.
            </summary>
            <summary>
            A central entry point for unit test projects and applications.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTestSystem.SystemName">
            <summary>
            Friendly unit test system name.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.PrepareCustomLogProviders(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            A partial method for PrepareDefaultLogManager.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.SetTestService(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            A partial method for setting the TestService.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.CreateTestPage">
            <summary>
            Creates a new TestPage visual that in turn will setup and begin a 
            unit test run.
            </summary>
            <returns>A new RootVisual.</returns>
            <remarks>Assumes the calling assembly is a test assembly.</remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.CreateTestPage(Microsoft.Silverlight.Testing.UnitTestSettings)">
            <summary>
            Creates a new TestPage visual that in turn will setup and begin a 
            unit test run.
            </summary>
            <param name="settings">Test harness settings to be applied.</param>
            <returns>A new RootVisual.</returns>
            <remarks>Assumes the calling assembly is a test assembly.</remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.MergeSettingsAndParameters(Microsoft.Silverlight.Testing.Harness.TestServiceProvider,Microsoft.Silverlight.Testing.UnitTestSettings)">
            <summary>
            Merge any settings provided by a test service with the parameters 
            that were passed inside the TestHarnessSettings.
            </summary>
            <param name="testService">The test service.</param>
            <param name="inputSettings">The run settings.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.PrepareTestService(Microsoft.Silverlight.Testing.UnitTestSettings,System.Action)">
            <summary>
            Initializes the test service and its contained providers.
            </summary>
            <param name="inputSettings">The run settings.</param>
            <param name="complete">Action to call once the test service is 
            initialized and ready to continue the run's execution.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTestSystem._system">
            <summary>
            Most recent test system instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.RegisterUnitTestProvider(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider)">
            <summary>
            Register another available unit test provider for the unit test system.
            </summary>
            <param name="provider">A unit test provider.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTestSystem._harness">
            <summary>
            Test harness instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.Run(Microsoft.Silverlight.Testing.UnitTestSettings)">
            <summary>
            Start a new unit test run.
            </summary>
            <param name="settings">Unit test settings object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.SetStandardLogProviders(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Prepares the default log manager.
            </summary>
            <param name="settings">The test harness settings.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.TryAddVisualStudioLogProvider(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Tries to instantiate and initialize a VSTT provider. Requires that 
            XLinq is available and included in the application package.
            </summary>
            <param name="settings">The test harness settings object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.CreateDefaultSettings">
            <summary>
            Creates the default settings that would be used by the UnitTestHarness
            if none were specified.
            </summary>
            <returns>A new RootVisual.</returns>
            <remarks>Assumes the calling assembly is a test assembly.</remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.OnTestHarnessCompleted(Microsoft.Silverlight.Testing.Harness.TestHarnessCompletedEventArgs)">
            <summary>
            Call the TestHarnessCompleted event.
            </summary>
            <param name="args">The test harness completed event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSystem.CreateDefaultSettings(System.Reflection.Assembly)">
            <summary>
            Create a default settings object for unit testing.
            </summary>
            <param name="callingAssembly">The assembly reflection object.</param>
            <returns>A unit test settings instance.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTestSystem.CurrentHarness">
            <summary>
            Gets a reference to the most recently run system's test harness.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTestSystem.CurrentSystem">
            <summary>
            Gets a reference to the most recently run test system.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.UnitTestSystem.TestHarnessCompleted">
            <summary>
            A completed test harness handler.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.WorkItemTest">
            <summary>
            Custom test class that provides the ability to perform semi-asynchronous 
            test tasks on the main thread.  Requires the custom unit test harness 
            that manages and invokes test work items on the thread when needed.
            
            Tests using this functionality will not be compatible with the full 
            desktop framework's Visual Studio Team Test environment.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.TestComplete">
            <summary>
            Signal that a test is complete when using Async testing.  
            
            WARNING: If you use your own methods for completing, such as an 
            HtmlTimer or other threading method, it is possible that this call 
            will occur *AFTER* the test has timed out when using Timeouts.  As 
            such, be very careful as you could complete the call to the *next* 
            test.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueWorkItem(Microsoft.Silverlight.Testing.IWorkItem)">
            <summary>
            Add a task object to the test queue.  For a test that is currently 
            executing, all tasks contained within the queue are executed to 
            completion (unless an Exception is thrown) -before- moving on to 
            the next test.
            
            The test task queue replaces the PumpMessages(...) system that 
            permitted a single callback.  This enables specialized tasks, such 
            as DOM bridge tasks, sleep tasks, and conditional continue tasks.
            </summary>
            <param name="testTaskObject">Asynchronous test task 
            instance.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueDelay(System.TimeSpan)">
            <summary>
            Delay a minimum amount of time before continuing. Similar to a sleep
            call that is not a blocking call.
            </summary>
            <param name="delay">The minimum time span to wait before continuing.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueDelay(System.Double)">
            <summary>
            Delay a minimum amount of time before continuing. Similar to a sleep
            call that is not a blocking call.
            </summary>
            <param name="milliseconds">The minimum number of milliseconds to wait
            until the delay is finished.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueConditional(System.Func{System.Boolean})">
            <summary>
            Requires a bool returning delegate to be passed in. Instructs the 
            test task queue to wait until the conditional call returns True to 
            continue executing other test tasks and/or ending the test method.
            </summary>
            <param name="conditionalDelegate">Conditional method or delegate. 
            Test will halt until this condition returns True.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueTestComplete">
            <summary>
            Enqueue a test task which calls the TestComplete method of 
            SilverlightTest.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueCallback(System.Action)">
            <summary>
            Add a Callback method into the test task queue.  Similar to the 
            PumpMessages(...) call, with the difference being that there is no 
            longer a single requirement: you can enqueue several callback 
            methods and other test tasks, all of which will execute before the 
            test completes and/or the engine continues.
            </summary>
            <param name="testCallbackDelegate">Void-returning delegate, 
            anonymous delegates work fine too.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueCallback(System.Action[])">
            <summary>
            Adds a number of callback methods into the test task queue.
            </summary>
            <param name="actions">Set of Action instances.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.Sleep(System.Int32,System.Action)">
            <summary>
            Sleep a minimum number of milliseconds before calling a test 
            callback delegate.
            </summary>
            <param name="sleepMillisecondsMinimum">Minimum number of 
            milliseconds to sleep.  The only guarantee to the tester 
            is that the sleep will be >= this amount of ms, and NOT 
            that there is precision or an exact time.</param>
            <param name="testCallback">Callback method to 
            execute after the minimum amount of time has 
            elapsed.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.Enqueue(System.Action)">
            <summary>
            Enqueue an action.  A shortcut for the EnqueueCallback.
            </summary>
            <param name="action">The action to enqueue.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.WorkItemTest.EnqueueSleep(System.Int32)">
            <summary>
            Sleep a minimum number of milliseconds.  This is the simplified 
            overload which requires no callback.
            </summary>
            <param name="sleepMillisecondsMinimum">Minimum number of 
            milliseconds to sleep.  The only guarantee to the tester is that the
            sleep will be >= this amount of ms, and NOT that there is precision 
            or an exact time.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.ExclusiveAttribute">
            <summary>
            A special indicator attribute to enable better debugging using 
            Microsoft.Silverlight.Testing.  
            
            As there is very little parameter information available for a test run, 
            this attribute singles out specific classes to execute when found.
            
            This attribute is unique to this environment and not compatible with any 
            desktop unit test framework without using a shim if it is left in code.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.PresentationTest">
            <summary>
            Implementation of useful properties and features for presentation 
            platform tests (Silverlight and WPF).
            
            Tests using this functionality will not be compatible with the full 
            desktop framework's Visual Studio Team Test environment.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.PresentationTest.TestPanel">
            <summary>
            Gets the test panel.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.SilverlightTest">
            <summary>
            Provides access to Silverlight-specific test features and 
            functionality.
            
            Tests using this functionality will not be compatible with the full 
            desktop framework's Visual Studio Team Test environment.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter">
            <summary>
            The extended writer for the unit testing harness and consumers.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.LogMessageWriter">
            <summary>
            A utility type that writes new log messages to the test harness log
            queue.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageWriter._factory">
            <summary>
            The factory used for creating new LogMessage types.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageWriter._testHarness">
            <summary>
            The test harness that contains the method to post new events into
            the log message queue.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.#ctor(Microsoft.Silverlight.Testing.Harness.ITestHarness)">
            <summary>
            Initialize a new writer class, using the default LogMessageFactory
            to create new messages.
            </summary>
            <param name="harness">The test harness instance.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.#ctor(Microsoft.Silverlight.Testing.Harness.ITestHarness,Microsoft.Silverlight.Testing.Harness.LogMessageFactory)">
            <summary>
            Initialize a new writer class.
            </summary>
            <param name="harness">The test harness instance.</param>
            <param name="messageFactory">
            The factory to use when creating new messages.
            </param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Enqueue(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Posts a log message to the test harness queue for processing.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Create">
            <summary>
            Creates a new log message using the embedded factory.
            </summary>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Create(Microsoft.Silverlight.Testing.Harness.LogMessageType)">
            <summary>
            Creates a new log message using the embedded factory.
            </summary>
            <param name="messageType">The message type.</param>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Create(Microsoft.Silverlight.Testing.Harness.LogMessageType,System.String)">
            <summary>
            Creates a new log message using the embedded factory.
            </summary>
            <param name="messageType">The message type.</param>
            <param name="message">The text message.</param>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Decorate(Microsoft.Silverlight.Testing.Harness.LogMessage,System.Object,System.Object)">
            <summary>
            Decorate a log message with a value.
            </summary>
            <param name="message">The log message to decorate.</param>
            <param name="key">The key for this decoration.</param>
            <param name="value">The value of this decoration.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.DecorateException(Microsoft.Silverlight.Testing.Harness.LogMessage,System.Exception)">
            <summary>
            Decorate the log message object with an Exception object.
            </summary>
            <param name="message">The log message object.</param>
            <param name="exception">The Exception.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.DecorateNameProperty(Microsoft.Silverlight.Testing.Harness.LogMessage,System.String)">
            <summary>
            Decorate the log message object with a name.
            </summary>
            <param name="message">The log message object.</param>
            <param name="name">Name property value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.DecorateTestStage(Microsoft.Silverlight.Testing.Harness.LogMessage,Microsoft.Silverlight.Testing.Harness.TestStage)">
            <summary>
            Decorate the log message object with a test stage value.
            </summary>
            <param name="message">The log message object.</param>
            <param name="stage">Test stage value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.DecorateTestOutcome(Microsoft.Silverlight.Testing.Harness.LogMessage,Microsoft.Silverlight.Testing.Harness.TestOutcome)">
            <summary>
            Decorate the log message object with a test outcome object.
            </summary>
            <param name="message">The log message object.</param>
            <param name="outcome">Test outcome object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.DecorateTestGranularity(Microsoft.Silverlight.Testing.Harness.LogMessage,Microsoft.Silverlight.Testing.Harness.TestGranularity)">
            <summary>
            Decorate the log message object with a test granularity object.
            </summary>
            <param name="message">The log message object.</param>
            <param name="granularity">Test granularity object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.SetType(Microsoft.Silverlight.Testing.Harness.LogMessage,Microsoft.Silverlight.Testing.Harness.LogMessageType)">
            <summary>
            Sets the type of the log message.
            </summary>
            <param name="message">The log message object.</param>
            <param name="type">The new value to set the message type to.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.DebugWriteLine(System.String)">
            <summary>
            This writes a new line of information similar to a Debug::WriteLine
            call.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Information(System.String)">
            <summary>
            Writes information through a new log message.
            </summary>
            <param name="info">The information string.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.TestInfrastructure(System.String)">
            <summary>
            Writes a message relating to the test infrastructure.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Environment(System.String)">
            <summary>
            Writes an environment message.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.TestExecution(System.String)">
            <summary>
            Writes a TestRun message.
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Error(System.String,System.Exception)">
            <summary>
            Log an error message.
            </summary>
            <param name="errorMessage">The error message string.</param>
            <param name="exception">The Exception object to decorate the message
            with.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Error(System.String)">
            <summary>
            Log an error message.
            </summary>
            <param name="errorMessage">The error message string.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Warning(System.String,System.Exception)">
            <summary>
            Log a warning message.
            </summary>
            <param name="warningMessage">The warning message string.</param>
            <param name="exception">The Exception object to decorate the message
            with.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.Warning(System.String)">
            <summary>
            Log a warning message.
            </summary>
            <param name="warningMessage">The warning message string.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.TestResult(System.String,Microsoft.Silverlight.Testing.Harness.TestOutcome)">
            <summary>
            Record a test outcome.
            </summary>
            <param name="message">The accompanying message.</param>
            <param name="outcome">The outcome value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.KnownIssue(System.String)">
            <summary>
            Writes information about an encountered, known issue.
            </summary>
            <param name="issue">Information about the known issue.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageWriter.GranularTestStage(System.String,System.String,Microsoft.Silverlight.Testing.Harness.TestGranularity,Microsoft.Silverlight.Testing.Harness.TestStage)">
            <summary>
            Records a log message that indicates a named, granular test stage 
            has happened.
            </summary>
            <param name="message">Any message for the log.</param>
            <param name="name">A name for the object or event.</param>
            <param name="granularity">The test granularity value.</param>
            <param name="stage">The test stage value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.#ctor(Microsoft.Silverlight.Testing.Harness.ITestHarness)">
            <summary>
            Initializes the unit test log message writer helper.
            </summary>
            <param name="harness">The test harness reference.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.MarkUnitTestMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Marks a message as a unit test system-specific message.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.IncorrectException(System.Type,System.Type,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod)">
            <summary>
            An incorrect exception type has occurred.
            </summary>
            <param name="expectedExceptionType">The expected type.</param>
            <param name="actualExceptionType">The actual exception's type.</param>
            <param name="test">The test metadata.</param>
            <param name="method">The method metadata.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.NoExceptionWhenExpected(System.Type,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod)">
            <summary>
            No Exception was intercepted, yet one was expected.
            </summary>
            <param name="expectedExceptionType">The expected exception type.</param>
            <param name="test">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.LogException(System.Exception,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod)">
            <summary>
            Logs and Exception that was intercepted or observed.
            </summary>
            <param name="exception">The actual Exception instance.</param>
            <param name="test">The test class metadata.</param>
            <param name="method">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.Ignore(Microsoft.Silverlight.Testing.Harness.TestGranularity,System.String)">
            <summary>
            Enqueues a Ignore message.
            </summary>
            <param name="granularity">The granularity of the ignore operation.</param>
            <param name="name">The name of the test skipped.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.TestRunFilterSelected(Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter)">
            <summary>
            Enqueues a message containing a test run filter.
            </summary>
            <param name="filter">The test run filter.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.GranularAssemblyTestStage(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly,Microsoft.Silverlight.Testing.Harness.TestGranularity,Microsoft.Silverlight.Testing.Harness.TestStage)">
            <summary>
            Records a log message that indicates a named, granular test stage has 
            happened.
            </summary>
            <param name="assembly">The assembly metadata object.</param>
            <param name="granularity">The test granularity value.</param>
            <param name="stage">The test stage value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.TestClassStage(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.Harness.TestStage)">
            <summary>
            Log a test class's stage.
            </summary>
            <param name="test">The test class metadata object.</param>
            <param name="stage">The test stage.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.TestResult(Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult)">
            <summary>
            Log the result of a unit test scenario.
            </summary>
            <param name="result">The result of the test.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.TestMethodStage(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,Microsoft.Silverlight.Testing.Harness.TestStage)">
            <summary>
            Log a test method's stage.
            </summary>
            <param name="method">The test method metadata object.</param>
            <param name="stage">The test stage.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogMessageWriter.UnitTestHarnessStage(Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness,System.String,Microsoft.Silverlight.Testing.Harness.TestStage)">
            <summary>
            Records a harness state for the unit test harness.
            </summary>
            <param name="harness">The unit test harness.</param>
            <param name="name">The harness name.</param>
            <param name="stage">The test stage.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness">
            <summary>
            A test harness for interacting with unit test providers such as Visual 
            Studio Team Test's metadata.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestHarness">
            <summary>
            Base implementation for test harnesses, implements 
            <see cref="T:Microsoft.Silverlight.Testing.Harness.ITestHarness"/> interface.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.ITestHarness">
            <summary>
            Interface that all test harnesses in this framework must use.  Basic
            enough to permit wrapping existing harnesses if needed.
            
            Setters are provided for properties in the hope that they will be used
            only for enabling testability/ wrapping other harnesses/ customization
            points.  In general a test developer should not access the underlying
            TestHarness implementations or objects.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ITestHarness.AddLogProvider(Microsoft.Silverlight.Testing.Harness.LogProvider)">
            <summary>
            Adds a log provider to the log listening routines.
            </summary>
            <param name="provider">The log provider to add.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ITestHarness.QueueLogMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Queues a log message for processing by the log providers.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ITestHarness.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Allow the Harness to process initialization settings before having
            to run tests.
            </summary>
            <param name="settings">
            Settings to initialize the harness with.
            </param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ITestHarness.Run">
            <summary>
            Begins running the test harness.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.ITestHarness.State">
            <summary>
            Gets or sets the state of the harness.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Harness.ITestHarness.TestHarnessCompleted">
            <summary>
            Event that is called after the test run is complete.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestHarness._queuedLogMessages">
            <summary>
            Queue of log messages awaiting processing.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.#ctor">
            <summary>
            Constructor for derived classes that instantiates a TestHarnessState
            object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.#ctor(Microsoft.Silverlight.Testing.Harness.TestHarnessState)">
            <summary>
            Constructor for derived classes that sets an initial 
            TestHarnessState and.
            </summary>
            <param name="initialTestHarnessState">Initial harness object. This 
            allows a developer to pass in a derived state class instance for 
            tracking test run information beyond the default.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.AddLogProvider(Microsoft.Silverlight.Testing.Harness.LogProvider)">
            <summary>
            Adds a log provider to the listening log providers group.
            </summary>
            <param name="provider">Log provider object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.QueueLogMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Enqueue a log message object for processing by the log providers.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initialization method.
            </summary>
            <param name="settings">Optional, non-null settings.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.Run">
            <summary>
            Begin running the test harness.
            </summary>
            <remarks>
            Make sure to subscribe to the Complete event before calling this 
            method, in some harnesses this may be a synchronous Run followed 
            immediately by the Complete event being fired.
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.RestartRunDispatcher">
            <summary>
            Restart the run method manager for the harness.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.RunDispatcherComplete(System.Object,System.EventArgs)">
            <summary>
            Complete event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.WriteLogFile(System.String,System.String)">
            <summary>
            Stores a log file for the test run. Depending on the execution 
            environment, this call may not successful.
            </summary>
            <param name="logName">The name of the log file.</param>
            <param name="fileContent">The log file content as a string.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.PublishResults">
            <summary>
            Publish results using the test service, if available.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.PublishFinalResult">
            <summary>
            If supported by any attached test service, this publishes the final
            test results. Typical harness implementations may immediately close
            the web browser channel upon receiving the message, so any other
            reporting should be done first.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.ProcessLogMessages">
            <summary>
            Process all queued log messages.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.InitializeSettings(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Fill member variables with any non-null settings of the same type.
            </summary>
            <param name="settings">Settings container class.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.InitializeLogProviders">
            <summary>
            Initializes all log providers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.RunNextStep">
            <summary>
            Abstract method that continues harness execution.
            </summary>
            <remarks>
            When implementing RunNextStep: Make sure to call LogManager.Flush 
            as needed (typically in this method) and convienient.
            </remarks>
            <returns>
            True as long as additional work remains for the harness.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.OnTestHarnessCompleted">
            <summary>
            Call the TestHarnessCompleted event.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarness.OnPublishing(System.EventArgs)">
            <summary>
            Call the Publishing event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarness.State">
            <summary>
            Gets or sets the overall harness state - overloaded types can be 
            used to store additional information.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarness.LogProviders">
            <summary>
            Gets the log providers list.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarness.RunDispatcher">
            <summary>
            Gets or sets the wrapper that handles calling the next Run step 
            method until complete; allows for a virtual Run method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarness.Parameters">
            <summary>
            Gets the dictionary of Parameters passed into the test harness.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarness.Settings">
            <summary>
            Gets or sets the settings used to initialize the test harness.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Harness.TestHarness.Publishing">
            <summary>
            The test harness is publishing results.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarness.TestService">
            <summary>
            Gets the TestService referenced by the test harness settings. The 
            test service provides advanced, optional functionality that is 
            useful to harness and test case developers. A typical test service 
            operates outside the process or security boundary.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Harness.TestHarness.TestHarnessCompleted">
            <summary>
            Complete event fired when the test harness has finished its test 
            run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.HarnessName">
            <summary>
            Display name for this harness.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness._globalExceptions">
            <summary>
            Manages the attachment state of a global exception handler.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness._harnessTasks">
            <summary>
            Container of all work items for the test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness._dispatcherStack">
            <summary>
            Manager of the stack of dispatchers, so that the appropriate parent 
            container handles exceptions and completion events.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness._validTestAssemblies">
            <summary>
            Number of valid test assemblies encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness._knownTestMethods">
            <summary>
            The current run's known number of test methods.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.#ctor">
            <summary>
            Initiate unit test harness.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.PublishResults">
            <summary>
            Overrides the PublishResults method so that final reporting is only
            done once all other logging is finished.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.PublishFinalResults">
            <summary>
            Publish final results. If not yet ready, will keep waiting around
            as a work item until it is done.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.IsReportingTestServiceConnected">
            <summary>
            Checks if a reporting provider is connected to the test service.
            </summary>
            <returns>Returns true if a reporting provider is connected to the
            test service.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.SetOverallStatus(System.String)">
            <summary>
            Immediately sets the overall status using a log message and
            processes the message queue.
            </summary>
            <param name="message">The message to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.PrepareCustomTestInstance(Microsoft.Silverlight.Testing.CustomFrameworkUnitTest)">
            <summary>
            Sets the unit test harness property for a test case that inherits 
            from the abstract base type 'CustomTest'.
            </summary>
            <param name="customTest">A CustomText instance.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initialize the harness with a set of test assemblies.
            </summary>
            <param name="settings">Initial harness settings.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.RestartRunDispatcher">
            <summary>
            Restarts the run dispatcher.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.TrackScenarioResult(Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult)">
            <summary>
            Track the results for our execution and also track the fail state.
            </summary>
            <param name="result">Scenario result to process.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.ReportCodeCoverage(Microsoft.Silverlight.Testing.Harness.TestServiceProvider)">
            <summary>
            Attempts to report the code coverage information using the test 
            service provider. If there is no available coverage reporting 
            service, this is a silent failure. Only reports if >= 1 blocks 
            are hit.
            </summary>
            <param name="testService">The test service.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.EnqueueTestAssembly(System.Reflection.Assembly,Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter)">
            <summary>
            Enqueue a test assembly from a simple Assembly reference.
            </summary>
            <param name="assembly">The test assembly.</param>
            <param name="runFilter">The run filter settings for the test assembly's run.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.EnqueueTestAssembly(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly,Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter)">
            <summary>
            Enqueues a test assembly.
            </summary>
            <param name="testAssembly">The test assembly metadata.</param>
            <param name="runFilter">The run filter settings for the test assembly's run.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.RunNextStep">
            <summary>
            Flush the current log manager and then perform the next invoke.
            </summary>
            <returns>Returns true if work remains.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.CreateTestRunFilter(Microsoft.Silverlight.Testing.UnitTestSettings)">
            <summary>
            Creates the test run filter for the initial run.
            </summary>
            <param name="settings">The unit test settings.</param>
            <returns>Returns a new TestRunFilter instance.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.PrepareTestAssemblyTasks">
            <summary>
            Determine what test assemblies need to be executed.  Enqueue tasks 
            for the unit test assembly providers to run the tests.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.CalculateTotalMethods(Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager,Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly,Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter)">
            <summary>
            Calculates the number of methods for a run.
            </summary>
            <param name="assemblyManager">The assembly manager.</param>
            <param name="assembly">The test assembly.</param>
            <param name="filter">The test run filter.</param>
            <returns>Returns the number of known methods returned.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.HarnessComplete(System.Object,System.EventArgs)">
            <summary>
            Event fired at the completion of the harness' work.
            </summary>
            <param name="sender">Sender object instance.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.GlobalUnhandledExceptionListener(System.Object,System.EventArgs)">
            <summary>
            Listener event for any unhandled exceptions.
            </summary>
            <param name="sender">Sender object instance.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.CreateHarnessTasks">
            <summary>
            Creates the set of harness tasks to run and hooks up to the Complete event.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.Results">
            <summary>
            Gets the list of results.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.LogWriter">
            <summary>
            Gets the log message writer instance.  This can be used to easily 
            post informative messages to the log message queue and providers.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.LogicFactory">
            <summary>
            Gets or sets the logic factory used for instantiating the 
            unit test logic and management objects.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.RootCompositeWorkItem">
            <summary>
            Gets the root container for test work to be completed.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.TestMethodCount">
            <summary>
            Gets the known number of test methods in the current test run.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.InterceptAllExceptions">
            <summary>
            Gets or sets a value indicating whether to intercept exceptions at 
            the app domain level and funnel into the current container or not.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness.DispatcherStack">
            <summary>
            Gets the internal DispatcherStack being used by the test harness.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator">
            <summary>
            Well-known keys that can be used to mark decorator instances in log 
            message objects.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.IsUnitTestMessage">
            <summary>
            Indicates that the message is specific to the unit test system.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.UnitTestHarness">
            <summary>
            The unit test harness reference.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.TestAssemblyMetadata">
            <summary>
            The metadata interfacing object for a test assembly.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.TestClassMetadata">
            <summary>
            The metadata interfacing object for a test class.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.TestMethodMetadata">
            <summary>
            The metadata interfacing object for a test method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.IncorrectExceptionMessage">
            <summary>
            Indicates that the incorrect exception was intercepted.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.IgnoreMessage">
            <summary>
            Indicates that the message indicates a skipped/ignored item.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.ExpectedExceptionType">
            <summary>
            The type of the expected exception.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.ActualExceptionType">
            <summary>
            The type of the actual exception.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.ActualException">
            <summary>
            The actual exception.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.TestRunFilter">
            <summary>
            A TestRunFilter object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator.ScenarioResult">
            <summary>
            A ScenarioResult object.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional">
            <summary>
            Helper conditional methods for unit test-specific log messages.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsUnitTestEndMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsUnitTestStartMessage(Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestLogDecorator)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="decorator">The unit test decorator of interest.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsUnitTestMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Returns a value indicating whether the message is marked as a unit
            test system message.
            </summary>
            <param name="message">The message.</param>
            <returns>Returns true if the message is a unit test system-marked 
            message.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.HasUnitTestOutcome(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsIgnoreMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsTestRunFilterMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message has an attached TestRunFilter.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns a value indicating whether the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsExceptionLogMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsIncorrectExceptionLogMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMessageConditional.IsKnownBug(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Determines whether a log message meets a specific condition or set 
            of conditions.
            </summary>
            <param name="message">The log message object.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyAssemblyMethodInfo">
            <summary>
            A lazy method type.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo">
            <summary>
            A class that does a lazy lookup when needed using reflection.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo._attributeType">
            <summary>
            Attribute Type instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo._searchType">
            <summary>
            The Type to search with.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo._hasSearched">
            <summary>
            Whether the search has happened.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo._methodInfo">
            <summary>
            The method reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.#ctor(System.Type)">
            <summary>
            Construct a new lazy method wrapper.
            </summary>
            <param name="attributeType">The attribute type.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.#ctor(System.Type,System.Type)">
            <summary>
            Construct a new lazy method wrapper.
            </summary>
            <param name="searchType">Type to search.</param>
            <param name="attributeType">Attribute type.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.GetMethodInfo">
            <summary>
            Does a search and retrieves the method information.
            </summary>
            <returns>The method reflection object.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.HasMethodInfo">
            <summary>
            Whether the type has a method info.
            </summary>
            <returns>A value indicating whether the method information has 
            been found.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.Search">
            <summary>
            Perform a search on the type.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.AttributeType">
            <summary>
            Gets the type of attribute the lazy method is searching for.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.SearchType">
            <summary>
            Gets the underlying type that is searched.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.HasSearched">
            <summary>
            Gets or sets a value indicating whether a lookup has already been attempted.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyMethodInfo.MethodInfo">
            <summary>
            Gets or sets the underlying MethodInfo from reflection.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyAssemblyMethodInfo._assembly">
            <summary>
            Underlying Assembly reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyAssemblyMethodInfo.#ctor(System.Reflection.Assembly,System.Type)">
            <summary>
            Create a new lazy method from a MethodInfo instance.
            </summary>
            <param name="assembly">Assembly reflection object.</param>
            <param name="attributeType">Attribute Type instance.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.LazyAssemblyMethodInfo.Search">
            <summary>
            Performs a search on the MethodInfo for the attributes needed.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly">
            <summary>
            Test assembly metadata interface.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly.GetTestClasses">
            <summary>
            Gets a collection of test class metadata objects.
            </summary>
            <returns>Returns a collection of metadata objects.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly.AssemblyInitializeMethod">
            <summary>
            Gets the initialization method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly.AssemblyCleanupMethod">
            <summary>
            Gets the cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly.Provider">
            <summary>
            Gets a reference to the unit test provider.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly.Name">
            <summary>
            Gets the name of the test assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly.TestHarness">
            <summary>
            Gets the test harness used to initialize the assembly.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IExpectedException">
            <summary>
            An expected exception marker for a test method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IExpectedException.ExceptionType">
            <summary>
            Gets the expected exception type.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IExpectedException.Message">
            <summary>
            Gets any message associated with the expected exception object.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IHostType">
            <summary>
            Represents the host type information for a test.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IHostType.HostType">
            <summary>
            Gets the Host type.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IHostType.HostData">
            <summary>
            Gets the host data.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IPriority">
            <summary>
            A representation of a test's priority.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass">
            <summary>
            Metadata representing a test class.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.GetTestMethods">
            <summary>
            Retrieve a collection of the test method metadata objects setup by 
            the unit test provider.
            </summary>
            <returns>A collection of test method interfaces.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.Type">
            <summary>
            Gets the test class Type instance.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.Ignore">
            <summary>
            Gets a value indicating whether the test class should be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.TestInitializeMethod">
            <summary>
            Gets the per-test initialization method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.TestCleanupMethod">
            <summary>
            Gets the per-test cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.ClassInitializeMethod">
            <summary>
            Gets the one-time class initialization method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.ClassCleanupMethod">
            <summary>
            Gets the one-time class cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.Name">
            <summary>
            Gets the name of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass.Assembly">
            <summary>
            Gets a reference to the parent test assembly metadata 
            instance.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod">
            <summary>
            Test method metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.DecorateInstance(System.Object)">
            <summary>
            Used for decorating with unit test provider-specific capabilities, 
            such as the TestContext concept.
            </summary>
            <param name="instance">Instance to decorate.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.GetDynamicAttributes">
            <summary>
            Get any attribute on the test method that are provided dynamically.
            </summary>
            <returns>
            Dynamically provided attributes on the test method.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Invoke(System.Object)">
            <summary>
            Invoke the test method.
            </summary>
            <param name="instance">Instance of the test class.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Method">
            <summary>
            Gets the test method reflection object.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.WriteLine">
            <summary>
            Hooks up to any unit test provider-enabled WriteLine capability 
            for unit tests.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Ignore">
            <summary>
            Gets a value indicating whether the test is marked to be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Description">
            <summary>
            Gets any description for the method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Name">
            <summary>
            Gets a name for the method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Category">
            <summary>
            Gets any category information for the method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Owner">
            <summary>
            Gets any test owner information.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.ExpectedException">
            <summary>
            Gets any expected exception attribute .
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Timeout">
            <summary>
            Gets any timeout information.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Properties">
            <summary>
            Gets a collection of any test properties.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.WorkItems">
            <summary>
            Gets a collection of any test work items.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod.Priority">
            <summary>
            Gets any priority information.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestProperty">
            <summary>
            A property for a test method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestProperty.Name">
            <summary>
            Gets the test property name.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestProperty.Value">
            <summary>
            Gets the test property value.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider">
            <summary>
            Provider model for a unit test system that uses reflection and metadata 
            to enable a unit test run.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider.GetUnitTestAssembly(Microsoft.Silverlight.Testing.Harness.ITestHarness,System.Reflection.Assembly)">
            <summary>
            Retrieve the metadata instance for a test assembly given a 
            reflection Assembly instance.
            </summary>
            <param name="testHarness">The test harness using the provider.</param>
            <param name="assemblyReference">Reflected test assembly.</param>
            <returns>Unit test provider-specific metadata instance for 
            the test assembly.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider.HasCapability(Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities)">
            <summary>
            Gets a value indicating whether a specific capability or set of 
            capabilities are supported by the unit test provider.
            </summary>
            <param name="capability">Capability of interest.</param>
            <returns>Gets a value indicating whether the capability is 
            supported.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider.IsFailedAssert(System.Exception)">
            <summary>
            Checks if an Exception actually represents an assertion that failed 
            to improve the logging experience.
            </summary>
            <param name="exception">Exception object.</param>
            <returns>Returns true if the Exception is an assertion exception 
            type.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider.Name">
            <summary>
            Gets the name of the unit test provider.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider.Capabilities">
            <summary>
            Gets the capabilities that the unit test provider implements.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IWorkItemMetadata">
            <summary>
            Work item for a test.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.IWorkItemMetadata.Data">
            <summary>
            Gets the associated information from the work item.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.StringEventArgs">
            <summary>
            Event arguments that pass along a string value.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.StringEventArgs.#ctor">
            <summary>
            Create a new event argument instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.StringEventArgs.#ctor(System.String)">
            <summary>
            Create a new event argument instance that stores a string value.
            </summary>
            <param name="value">String value to pass along.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.StringEventArgs._value">
            <summary>
            String value stored in the event arguments.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.StringEventArgs.Value">
            <summary>
            Gets the stored string value.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities">
            <summary>
            A set of capabilities that a unit test provider may chose to implement 
            through the metadata interfaces.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.None">
            <summary>
            No defined capabilities.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.AssemblySupportsInitializeMethod">
            <summary>
            Support for attribute [AssemblyInitialize].
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.AssemblySupportsCleanupMethod">
            <summary>
            Support for attribute [AssemblyCleanup].
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.ClassCanIgnore">
            <summary>
            Support for attribute [Ignore] for classes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanIgnore">
            <summary>
            Support for attribute [Ignore] for methods.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanDescribe">
            <summary>
            Support for attribute [Description] on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanCategorize">
            <summary>
            Support for attribute [Category] on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanHaveOwner">
            <summary>
            Support for attribute [Owner] on method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanHavePriority">
            <summary>
            Support for attribute [Priority] on method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanHaveProperties">
            <summary>
            Support for attribute [TestProperty](...) on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanHaveTimeout">
            <summary>
            Support for attribute [Timeout] on methods.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities.MethodCanHaveWorkItems">
            <summary>
            Support for attribute [WorkItem(...)]('s) on methods.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.SleepWorkItem">
            <summary>
            Test work item type that does not complete until the sleep time has 
            elapsed.  This is NOT a blocking Sleep.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.SleepWorkItem._delay">
            <summary>
            The amount of time to delay for.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.SleepWorkItem._expires">
            <summary>
            The DateTime that marks the point in time the task is complete.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.SleepWorkItem.#ctor(System.TimeSpan)">
            <summary>
            Create a new Sleep work item, including the number of 
            milliseconds to wait until continuing.
            </summary>
            <param name="delay">Amount of time to wait/delay.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.SleepWorkItem.Invoke">
            <summary>
            On the first time, will calculate the final DateTime.  Otherwise, 
            null operation (returns) until that time.
            </summary>
            <returns>Returns a value indicating whether there is more work to be
            done.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser">
            <summary>
            Utilities, helpers, and other code designed for use when testing HTML 
            bridge (and other browser pieces) using the Silverlight product and 
            test framework.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser._browserInformation">
            <summary>
            Information about the current browser.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser.CreateJavaScriptElement(System.String)">
            <summary>
            Create a new HtmlElement which represents JavaScript.
            </summary>
            <param name="javaScriptContents">JavaScript code to include.</param>
            <returns>New HTML element representing the JavaScript script 
            element.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser.ClickElement(System.Windows.Browser.HtmlElement)">
            <summary>
            Simulate clicking on an HTML element using the HTML DOM bridge to 
            invoke the "click" method on the element.
            </summary>
            <param name="htmlElement">HTML element reference.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser.ClickElement(System.String)">
            <summary>
            Simulate clicking on an HTML element using the HTML DOM bridge to 
            invoke the "click" method on the element.
            </summary>
            <param name="elementId">ID of the HTML element to click.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser.AppendScratchHtml(System.String)">
            <summary>
            Append HTML, using innerHTML, inside an element in the 
            ScratchElement.
            </summary>
            <param name="htmlContent">HTML content to append to the scratch 
            element.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser.Information">
            <summary>
            Gets Information about the current browser.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.Browser.ScratchElement">
            <summary>
            Gets a "scratch" element on the page which can be used for standard 
            HTML DOM bridge tests and other uses.  
            
            Since the lifetime of the SilverlightTest is only that of a single 
            TestMethod and its execution, calling ScratchElement in a test 
            method guarantees that you will have a fresh element with no 
            siblings barring any browser or product bugs.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureEntry">
            <summary>
            An entry that tracks failure elements and IDs to setup link associations
            in the interface.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureEntry.Element">
            <summary>
            Gets or sets the HTML control element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureEntry.Id">
            <summary>
            Gets or sets the ID string.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl">
            <summary>
            A web page control that provides a summary, and links to, any failing 
            tests during a test run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl.StartingCollectionSize">
            <summary>
            Trying to keep the initial dictionary size tiny.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl._classes">
            <summary>
            Collection of seen classes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl._first">
            <summary>
            The first element to be added.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl._last">
            <summary>
            The last element to be added.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl._lastId">
            <summary>
            The last ID to be created.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl.#ctor">
            <summary>
            Create a new FailureSummary web page control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl.FirstFailure">
            <summary>
            The first failure calls this.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl.GenerateNextFailureId">
            <summary>
            Returns the next generated failure ID.  Used to iterate through the 
            set of failures by anchors and links.
            </summary>
            <returns>Returns the integer ID.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl.AddFailure(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Adds a failure visually.
            </summary>
            <param name="testClass">Test class metadata object.</param>
            <param name="method">Method metadata object.</param>
            <param name="methodNextSpan">The next method to work with.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl.FirstFailureEntry">
            <summary>
            Gets or sets the first failure entry.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl.LastFailureEntry">
            <summary>
            Gets or sets the last failure entry.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager">
            <summary>
            A type for managing the shared 'scratch html element'.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager.DefaultScratchElementID">
            <summary>
            ID that is used for the scratch element by default.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager._instance">
            <summary>
            HTML element manager.  Static instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager.#ctor">
            <summary>
            One-time constructor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager._scratchElement">
            <summary>
            Scratch element reference.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager._dirty">
            <summary>
            Value indicating whether the element is dirty.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager.ClearDirtyScratchElement">
            <summary>
            Removes the underlying children of the html element if dirty.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager.ClearScratchElement">
            <summary>
            Recreates the scratch html element.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager.RemoveScratchElement">
            <summary>
            Remove the scratch element, if any, from its parent.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager.Instance">
            <summary>
            Gets a single instance of the scratch element manager.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.TestHtmlElementManager.ScratchElement">
            <summary>
            Gets the scratch element and marks that it has been used.  After 
            the test method completes, it will have its children elements 
            cleared automatically.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ExpectedException">
            <summary>
            Expected exception metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ExpectedException.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ExpectedException.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute)">
            <summary>
            Creates a new expected exception metadata wrapper.
            </summary>
            <param name="expectedExceptionAttribute">Attribute value.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ExpectedException._exp">
            <summary>
            The expected exception attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ExpectedException.ExceptionType">
            <summary>
            Gets the type of the expected exception.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ExpectedException.Message">
            <summary>
            Gets any message to include in a failure.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.Priority">
            <summary>
            A simple wrapper for a priority integer value that overrides the 
            ToString method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.Priority.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Priority class.
            </summary>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.Priority.ToString">
            <summary>
            Gets the priority as string.
            </summary>
            <returns>Returns the priority.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.Priority.Value">
            <summary>
            Gets the priority value.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes">
            <summary>
            The set of provider attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.#cctor">
            <summary>
            Initializes the VSTT metadata provider.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.TestClass">
            <summary>
            Gets VSTT [TestClass] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.IgnoreAttribute">
            <summary>
            Gets VSTT [Ignore] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.ClassInitialize">
            <summary>
            Gets VSTT [ClassInitialize] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.Priority">
            <summary>
            Gets VSTT [Priority] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.ClassCleanup">
            <summary>
            Gets VSTT [ClassCleanup] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.TestInitialize">
            <summary>
            Gets VSTT [TestInitialize] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.TestCleanup">
            <summary>
            Gets VSTT [TestCleanup] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.DescriptionAttribute">
            <summary>
            Gets VSTT [Description] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.TimeoutAttribute">
            <summary>
            Gets VSTT [Timeout] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.OwnerAttribute">
            <summary>
            Gets VSTT [Owner] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.ExpectedExceptionAttribute">
            <summary>
            Gets VSTT [ExpectedException] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.AssemblyInitialize">
            <summary>
            Gets VSTT [AssemblyInitialize] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.AssemblyCleanup">
            <summary>
            Gets VSTT [AssemblyCleanup] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.TestMethod">
            <summary>
            Gets VSTT [TestMethod] attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.ProviderAttributes.TestProperty">
            <summary>
            Gets VSTT [TestProperty] attribute.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass">
            <summary>
            Test class wrapper.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly)">
            <summary>
            Construct a new test class metadata interface.
            </summary>
            <param name="assembly">Assembly metadata interface object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly,System.Type)">
            <summary>
            Creates a new test class wrapper.
            </summary>
            <param name="assembly">Assembly metadata object.</param>
            <param name="testClassType">Type of the class.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass._type">
            <summary>
            Test Type.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass._tests">
            <summary>
            Collection of test method interface objects.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass._testsLoaded">
            <summary>
            A value indicating whether tests are loaded.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass._m">
            <summary>
            A dictionary of method types and method interface objects.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.GetTestMethods">
            <summary>
            Gets a collection of test method  wrapper instances.
            </summary>
            <returns>A collection of test method interface objects.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.ToString">
            <summary>
            Exposes the name of the test class.
            </summary>
            <returns>Returns the name of the test class.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Assembly">
            <summary>
            Gets the test assembly metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Type">
            <summary>
            Gets the underlying Type of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Name">
            <summary>
            Gets the name of the test class.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Ignore">
            <summary>
            Gets a value indicating whether an Ignore attribute present 
            on the class.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.TestInitializeMethod">
            <summary>
            Gets any test initialize method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.TestCleanupMethod">
            <summary>
            Gets any test cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.ClassInitializeMethod">
            <summary>
            Gets any class initialize method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.ClassCleanupMethod">
            <summary>
            Gets any class cleanup method.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Methods">
            <summary>
            Methods enum.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Methods.ClassInitialize">
            <summary>
            Initialize method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Methods.ClassCleanup">
            <summary>
            Cleanup method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Methods.TestInitialize">
            <summary>
            Test init method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestClass.Methods.TestCleanup">
            <summary>
            Test cleanup method.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod">
            <summary>
            A provider wrapper for a test method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.ContextPropertyName">
            <summary>
            Property name for the TestContext.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.DefaultPriority">
            <summary>
            Default value for methods when no priority attribute is defined.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.None">
            <summary>
            An empty object array.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod._methodInfo">
            <summary>
            Method reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.#ctor">
            <summary>
            Private constructor, the constructor requires the method reflection object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Creates a new test method wrapper object.
            </summary>
            <param name="methodInfo">The reflected method.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.OnWriteLine(System.String)">
            <summary>
            Call the WriteLine method.
            </summary>
            <param name="s">String to WriteLine.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.DecorateInstance(System.Object)">
            <summary>
            Decorates a test class instance with the unit test framework's 
            specific test context capability, if supported.
            </summary>
            <param name="instance">Instance to decorate.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.GetDynamicAttributes">
            <summary>
            Get any attribute on the test method that are provided dynamically.
            </summary>
            <returns>
            Dynamically provided attributes on the test method.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Invoke(System.Object)">
            <summary>
            Invoke the test method.
            </summary>
            <param name="instance">Instance of the test class.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.ToString">
            <summary>
            Exposes the name of the test method as a string.
            </summary>
            <returns>Returns the name of the test method.</returns>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.WriteLine">
            <summary>
            Allows the test to perform a string WriteLine.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Method">
            <summary>
            Gets the underlying reflected method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Ignore">
            <summary>
            Gets a value indicating whether there is an Ignore attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Description">
            <summary>
            Gets any description marked on the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Name">
            <summary>
            Gets the name of the method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Category">
            <summary>
            Gets the Category.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Owner">
            <summary>
            Gets the owner name of the test.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.ExpectedException">
            <summary>
            Gets any expected exception attribute information for the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Timeout">
            <summary>
            Gets any timeout.  A Nullable property.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Properties">
            <summary>
            Gets a Collection of test properties.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.WorkItems">
            <summary>
            Gets a collection of test work items.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod.Priority">
            <summary>
            Gets Priority information.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestProperty">
            <summary>
            Represents a simple test property with a key/value string pair.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestProperty.#ctor">
            <summary>
            Initializes a new instance of the TestProperty class.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestProperty.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TestProperty class.
            </summary>
            <param name="name">The initial property name.</param>
            <param name="value">The initial property value.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestProperty.Name">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestProperty.Value">
            <summary>
            Gets or sets the property value.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext">
            <summary>
            A wrapper for the unit test context capability of Visual Studio Team 
            Test's unit test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.TestMethod)">
            <summary>
            Create a new unit test context wrapper for the test method.
            </summary>
            <param name="testMethod">Test method.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.#ctor">
            <summary>
            Constructor of a new unit test context.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext._tm">
            <summary>
            Test method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.WriteLine(System.String,System.Object[])">
            <summary>
            Used to write trace messages while the test is running.
            </summary>
            <param name="format">Format string.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.NotSupportedException(System.String)">
            <summary>
            Throw a not supported exception.
            </summary>
            <param name="functionality">Functionality that is not supported (string).</param>
            <returns>A new NotSupportedException.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.AddResultFile(System.String)">
            <summary>
            Adds a file name to the list in TestResult.ResultFileNames.
            </summary>
            <param name="fileName">Filename to add as a result.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.BeginTimer(System.String)">
            <summary>
            Begins a timer with the specified name.
            </summary>
            <param name="timerName">The name of the timer to create.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.EndTimer(System.String)">
            <summary>
            Ends a timer with the specified name.
            </summary>
            <param name="timerName">Name of the timer.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext._propertyCache">
            <summary>
            Cache of properties.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.Properties">
            <summary>
            Gets test properties.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.DataRow">
            <summary>
            Gets current data row when test is used for data driven testing.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.DataConnection">
            <summary>
            Gets current data connection row when test is used for data driven testing.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.TestName">
            <summary>
            Gets the name of the test method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestContext.CurrentTestOutcome">
            <summary>
            Gets the current enum outcome - passed, failed, or inconclusive.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly">
            <summary>
            Assembly metadata for the Visual Studio Team Test unit test framework.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly._assembly">
            <summary>
            Assembly reflection object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly._init">
            <summary>
            Assembly initialization method information.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly._cleanup">
            <summary>
            Assembly cleanup method information.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly._provider">
            <summary>
            Unit test provider used for the assembly.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly._harness">
            <summary>
            The unit test harness.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider,Microsoft.Silverlight.Testing.Harness.ITestHarness,System.Reflection.Assembly)">
            <summary>
            Creates a new unit test assembly wrapper.
            </summary>
            <param name="provider">Unit test metadata provider.</param>
            <param name="unitTestHarness">A reference to the unit test harness.</param>
            <param name="assembly">Assembly reflection object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.GetTestClasses">
            <summary>
            Reflect and retrieve the test class metadata wrappers for 
            the test assembly.
            </summary>
            <returns>Returns a collection of test class metadata 
            interface objects.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.Name">
            <summary>
            Gets the name of the test assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.Provider">
            <summary>
            Gets the unit test provider instance.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.AssemblyInitializeMethod">
            <summary>
            Gets any assembly initialize method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.AssemblyCleanupMethod">
            <summary>
            Gets any assembly cleanup method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.TestHarness">
            <summary>
            Gets the test harness used to initialize the assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.UnitTestFrameworkAssembly.UnitTestHarness">
            <summary>
            Gets the test harness as a unit test harness.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider">
            <summary>
            Provider for the Visual Studio Team Test unit test (UT) framework 
            metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.ProviderName">
            <summary>
            Name of this provider.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.MyCapabilities">
            <summary>
            The capabilities of the VSTT UTF provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.HasCapability(Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviderCapabilities)">
            <summary>
            Whether the capability is supported by this provider.
            </summary>
            <param name="capability">Capability type.</param>
            <returns>A value indicating whether the capability is available.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.#ctor">
            <summary>
            Create a new Visual Studio Team Test unit test framework provider 
            instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider._assemblyCache">
            <summary>
            Cache of assemblies and assembly unit test interface objects.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.GetUnitTestAssembly(Microsoft.Silverlight.Testing.Harness.ITestHarness,System.Reflection.Assembly)">
            <summary>
            VSTT unit test provider constructor; takes an assembly reference to 
            perform reflection on to retrieve all test class types. In this 
            implementation of an engine for the VSTT metadata, only a single 
            test Assembly can be utilized at a time for simplicity.
            </summary>
            <param name="testHarness">The unit test harness.</param>
            <param name="assemblyReference">Assembly reflection object.</param>
            <returns>Returns the assembly metadata interface.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.IsFailedAssert(System.Exception)">
            <summary>
            Check if the Exception is actually a failed assertion.
            </summary>
            <param name="exception">Exception object to check.</param>
            <returns>True if the exception is actually an assert failure.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.Name">
            <summary>
            Gets the name of the provider.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.VisualStudio.VsttProvider.Capabilities">
            <summary>
            Gets the specialized capability descriptor.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureControl">
            <summary>
            Failure information.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureControl.PrefixIdentifier">
            <summary>
            The prefix identifier.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureControl._summary">
            <summary>
            The failure summary control.  Also the Parent, but this is 
            strongly typed.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureControl.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.UnitTesting.UI.FailureSummaryControl)">
            <summary>
            Initializes a new failure web control.
            </summary>
            <param name="testClass">The test class metadata object.</param>
            <param name="summaryControl">The overall summary control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureControl.CreateClassHeader(System.String)">
            <summary>
            Creates the visual header for the class.
            </summary>
            <param name="name">The test class name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureControl.StyleAnchor(Microsoft.Silverlight.Testing.Html.HtmlAnchor)">
            <summary>
            Styles the anchors used for this control.
            </summary>
            <param name="anchor">The anchor control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.FailureControl.AddMethodFailure(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Records a failure and modifies the web page to allow linking between
            the failure summary, and also next and previous failure 
            functionality.
            </summary>
            <param name="method">Unit test provider's method reference.</param>
            <param name="methodNextSpan">Span that will contain the next button.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTestSettings">
            <summary>
            Settings for the unit test system.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings">
            <summary>
            Settings used to initialize the test harness.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings.#ctor">
            <summary>
            Initializes a new instance of the TestHarnessSettings class.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings.Parameters">
            <summary>
            Gets the parameters from the response file.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings.Components">
            <summary>
            Gets the components initialized by the entry-point assembly. These
            are the dynamically loaded objects that may be needed by the
            TestHarness.
            </summary>
            <value>The components.</value>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings.LogProviders">
            <summary>
            Gets the log providers.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings.TestAssemblies">
            <summary>
            Gets the list of test assemblies.
            </summary>
            <value>The test assembly.</value>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings.TestService">
            <summary>
            Gets or sets the test service provider.  The test service lights up 
            advanced out-of-process communication, reporting, logging, and 
            other valuable services.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessSettings.TestHarness">
            <summary>
            Gets or sets the test harness.
            </summary>
            <value>The test harness.</value>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTestSettings.TagExpressionKey">
            <summary>
            The tag expression key name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTestSettings.DefaultSortTestMethods">
            <summary>
            By default test methods are sorted.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTestSettings.DefaultSortTestClasses">
            <summary>
            By default test classes are sorted.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTestSettings.#ctor">
            <summary>
            Settings for the unit test system.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTestSettings.SortTestMethods">
            <summary>
            Gets or sets a value indicating whether test methods are sorted 
            alphabetically. By default this value is true.
            </summary>
            <remarks>
            It is worth understanding that the order of unit test 
            execution should not affect the results of a test run.  Any expected
            ordering and verification from multiple test methods should be 
            refactored into a single unit test.
            </remarks>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTestSettings.SortTestClasses">
            <summary>
            Gets or sets a value indicating whether test classes are sorted 
            alphabetically. This setting is True by default.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTestSettings.TagExpression">
            <summary>
            Gets or sets the tag expression used for selecting tests to run. 
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTestSettings.TestClassesToRun">
            <summary>
            Gets a list of test classes to run. Enables filtering.
            </summary>
            <remarks>This property should be considered obsolete.</remarks>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus">
            <summary>
            Webpage control that tracks the counts for the total scenarios run, 
            failing scenarios, and also provides information about currently 
            executing work items.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus._total">
            <summary>
            Element that is the total counter.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus._fail">
            <summary>
            Element that is the failure counter.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus._status">
            <summary>
            Primary status element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus._details">
            <summary>
            Secondary status element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus._totalNumber">
            <summary>
            Number of scenarios run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus._failNumber">
            <summary>
            Number of failing scenarios.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.#ctor">
            <summary>
            Creates a new test status control on the webpage, within the 
            parentElement.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.UpdateStatus(System.String)">
            <summary>
            Update the status text indicating the current work item being 
            executed.
            </summary>
            <param name="text">Text to place in the status area.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.UpdateDetails(System.String)">
            <summary>
            Update the secondary status text.
            </summary>
            <param name="detailsText">Text to set in the detailed status area.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.RevertFinalStyle">
            <summary>
            Reverts the styling from the test complete look.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.ChangeToFinalStyle">
            <summary>
            Alter the styling to indicate that the test run is complete.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.CreateCounterDiv">
            <summary>
            Creates a div that will contain a number counter.
            </summary>
            <returns>The HTML element of the counter.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.Total">
            <summary>
            Gets or sets the number of scenarios run.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.CurrentTestStatus.Fail">
            <summary>
            Gets or sets the number of scenarios that have failed.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager">
            <summary>
            A manager for the underlying TestSurface Panel.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager._instance">
            <summary>
            Instance of the manager.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager._testPage">
            <summary>
            The test page object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager._dirty">
            <summary>
            A value indicating whether the panel is dirty.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager.ClearUsedChildren">
            <summary>
            Remove the children from the test surface, if it has 
            been used.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager.ClearChildren">
            <summary>
            Remove the children from the test surface.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager.Instance">
            <summary>
            Gets the single instance of the test surface manager.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager.TestPage">
            <summary>
            Gets or sets the Reference to the TestPage user control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.UI.TestPanelManager.TestPanel">
            <summary>
            Gets the TestSurface Panel, and tracks the use for the 
            current test method.  When the test completes, the panel children 
            will be cleared automatically.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog">
            <summary>
            A web page log provider that is specialized for the unit test framework.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.WebpageLogProvider">
            <summary>
            A log provider that operates on the live HtmlPage by logging test 
            harness information to the screen.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase">
            <summary>
            Base class for Html-based web page providers, with utility methods 
            and optional style sheet injection.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.EnablePluginResizeKeyName">
            <summary>
            The key name for changing the resize behavior.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.TestColumnWidthKeyName">
            <summary>
            The key name for a custom test column width.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.#ctor">
            <summary>
            Base constructor for the WebPageProvider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initializes the test harness.
            </summary>
            <param name="settings">The test harness settings object.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase._testPage">
            <summary>
            The test page control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.TestColumnWidth">
            <summary>
            Gets a value indicating what width to use for the HTML log.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.EnablePluginResize">
            <summary>
            Gets a value indicating whether the plugin should be resized.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.TestPage">
            <summary>
            Gets the test page control.  There is only one (static) instance per 
            application/plugin.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebpageLogProviderBase.TestColumn">
            <summary>
            Gets the test column element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.RightAngleQuote">
            <summary>
            Constant, the right angle quote in HTML.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageLogProvider._myLog">
            <summary>
            Div used for the log of this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.#ctor">
            <summary>
            Instantiate a new WebpageLogProvider class.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initializes the test harness.
            </summary>
            <param name="settings">The test harness settings object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.RegisterLogHandlers">
            <summary>
            Register the log handlers for this provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.RegisterInformationHandler">
            <summary>
            Register an informational message handler.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.RegisterWarningHandler">
            <summary>
            Register a warning handler.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.RegisterGranularHandler">
            <summary>
            Register a granular handler.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.IsGranularMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Conditional check for the granularity decorator.
            </summary>
            <param name="message">The log message.</param>
            <returns>Returns true if the condition is met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.ProcessRemainder(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            How to process any remaining messages.
            </summary>
            <param name="message">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.AppendFixedText(System.String)">
            <summary>
            Appends text to the log, in a fixed-width font.
            </summary>
            <param name="value">The string to append.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.ProcessWarning(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Display the information associated with a warning message.
            </summary>
            <remarks>This method does not do anything with an associated 
            Exception object stored in the message.</remarks>
            <param name="logMessage">Message to process.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.ProcessInformation(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Display simple information in the log.
            </summary>
            <param name="logMessage">Message to process.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.AddSimpleMessage(System.String)">
            <summary>
            Appends simple text to the log.
            </summary>
            <param name="message">The message, HTML permitted.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.AddSimpleMessage(System.String,System.String)">
            <summary>
            Appends simple text to the log.
            </summary>
            <param name="message">The message, HTML permitted.</param>
            <param name="foregroundColor">The optional foreground color, as a 
            string value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.AddSimpleMessage(System.String,System.String,System.String)">
            <summary>
            Appends simple text to the log.
            </summary>
            <param name="message">The message, HTML permitted.</param>
            <param name="foregroundColor">The optional foreground color, as a 
            string value.</param>
            <param name="backgroundColor">The optional background color, as a 
            string value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.ProcessGranularEvent(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process an event with granular properties.
            </summary>
            <param name="l">The log message object.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebpageLogProvider.LogContainer">
            <summary>
            Gets a reference to the HtmlElement that contains the running log 
            for this instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.Ellipsis">
            <summary>
            String ellipsis.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.MaximumNameDisplayLength">
            <summary>
            The maximum number of characters to display in a name without using 
            an ellipsis.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._startElements">
            <summary>
            The associated start element for a test method.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._statusDisplay">
            <summary>
            Html control that shows the current test method name and other 
            information specific to unit testing.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._failureSummary">
            <summary>
            A web page control that displays a summary and links to failures.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._scenarioCounter">
            <summary>
            The number of scenarios encountered.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._copyResultsVisible">
            <summary>
            A value indicating whether the copy results link has been added 
            to the page yet.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._mostRecentHarness">
            <summary>
            The most recent harness object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._progressBar">
            <summary>
            The test run's progress bar.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._progressText">
            <summary>
            Display progress information and/or elapsed time.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._unitTestHarness">
            <summary>
            The unit test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._start">
            <summary>
            When the test assembly starts.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog._end">
            <summary>
            When the test assembly finishes.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.#ctor">
            <summary>
            Creates a new provider for displaying results on the web page, with 
            specialized knowledge of the unit test system.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initializes the test harness.
            </summary>
            <param name="settings">The test harness settings object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.InitializeComponent">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.PlaceProgressBar">
            <summary>
            Places the progress bar.  If we can attach inside the existing 
            header, then insert inside that - otherwise, the progress bar 
            is just inserted inside the test column.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.RegisterLogHandlers">
            <summary>
            Register the handling conditions for log messages in the unit test 
            web page's log provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ProcessException(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process the log of an exception.
            </summary>
            <param name="logMessage">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ProcessEndMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process the end message.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.CopyResultDetails(System.String)">
            <summary>
            A method that copies the result details into the clipboard and 
            displays an alert. On IE-only does the message appear.
            </summary>
            <param name="text">The details to copy.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.CompleteTestGroup">
            <summary>
            Method to show the closure of a test group at runtime.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ElapsedReadableTime(System.DateTime,System.DateTime)">
            <summary>
            Returns a human-readable formatting of the time different between 
            two DateTime instances.
            </summary>
            <param name="start">The starting time.</param>
            <param name="finish">The finishing time.</param>
            <returns>Returns a human-readable string.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ElapsedReadableTime(System.TimeSpan)">
            <summary>
            Returns a human-readable formatting of the time different between 
            two DateTime instances.
            </summary>
            <param name="ts">The time span instance.</param>
            <returns>Returns a human-readable string.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.TestAssemblyStart(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Assembly start code.
            </summary>
            <param name="l">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.TestMethodStart(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Test method start code.
            </summary>
            <param name="l">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.TruncateNameIfNeeded(System.String)">
            <summary>
            Returns either the full string, or a truncated version with an 
            ellipsis, if needed.
            </summary>
            <param name="name">The name string.</param>
            <returns>Returns the updated string.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.TruncateNameIfNeededWithHover(System.String)">
            <summary>
            Returns either the full string, or a truncated version with an 
            ellipsis, if needed.
            </summary>
            <param name="name">The name string.</param>
            <returns>Returns the updated string.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.TestClassStart(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Test class start code.
            </summary>
            <param name="l">Log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.UnitTestHarnessStart(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Unit test harness starting message.
            </summary>
            <param name="l">Log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.UpdateStatusDisplay(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Updates the status display for any log message that has a 
            name decorator.
            </summary>
            <param name="l">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.UpdateAndStart(System.Action{Microsoft.Silverlight.Testing.Harness.LogMessage})">
            <summary>
            A wrapper that both updates the status and then calls the start 
            message handler.
            </summary>
            <param name="action">The customized handler for the start message.</param>
            <returns>Returns an aggregate action that performs both actions.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.IncrementScenarioCounter">
            <summary>
            Increments the scenario counter, which includes ignored tests.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.FindFirstChildElement``1(Microsoft.Silverlight.Testing.Html.HtmlContainerControl)">
            <summary>
            Search in a container control for the first child element of a 
            particular type.
            </summary>
            <param name="container">The container control.</param>
            <typeparam name="CONTROL_TYPE">The control type to search for.</typeparam>
            <returns>Returns null or the first child element that matches.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ProcessResult(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process a UTF result message.
            </summary>
            <param name="logMessage">The log message object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ProcessBug(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process [Bug(...)].
            </summary>
            <param name="l">A KnownBugLogMessage object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ProcessIgnoreMessage(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process [Ignore].
            </summary>
            <param name="l">The Ignore message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ProcessIncorrectException(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Process an Exception that was not the expected Exception type.
            </summary>
            <param name="l">The log message.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.CreateText">
            <summary>
            Creates a new container control for text.
            </summary>
            <returns>Returns a new container control.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.CreateText(System.Boolean)">
            <summary>
            Creates a new container control for text.
            </summary>
            <param name="isDiv">A value indicating whether this is a div or a 
            span (div is for true values).</param>
            <returns>Returns a new container control.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.UI.UnitTestWebpageLog.ProcessRemainder(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Remainder objects are just appended.
            </summary>
            <param name="message">The log message object.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult">
            <summary>
            A result from a test scenario.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,Microsoft.Silverlight.Testing.Harness.TestOutcome,System.Exception)">
            <summary>
            Creates a result record.
            </summary>
            <param name="method">Test method metadata object.</param>
            <param name="testClass">Test class metadata object.</param>
            <param name="result">Test result object.</param>
            <param name="exception">Exception instance, if any.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.ToString">
            <summary>
            The string representation of the ScenarioResult.
            </summary>
            <returns>Returns a verbose string representation of the result.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.Started">
            <summary>
            Gets or sets the scenario's started time.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.Finished">
            <summary>
            Gets or sets the scenario's finishing time.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.TestMethod">
            <summary>
            Gets the test method metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.TestClass">
            <summary>
            Gets the test class metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.Result">
            <summary>
            Gets or sets the Result object.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.ScenarioResult.Exception">
            <summary>
            Gets the Exception instance, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager">
            <summary>
            Container and manager type which handles an entire test assembly; contains sub work 
            items that represent all actions needed to execute its tests.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager._filter">
            <summary>
            The test run filter object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager._assembly">
            <summary>
            Unit test provider-agnostic assembly metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager._testClasses">
            <summary>
            Container of work items for running test classes.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter,Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness,Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider,Microsoft.Silverlight.Testing.UnitTesting.Metadata.IAssembly)">
            <summary>
            Create a new assembly manager, takes in the harness, provider 
            reference and actual IAssembly object.
            </summary>
            <param name="runFilter">The test run filter object.</param>
            <param name="testHarness">Harness object.</param>
            <param name="provider">The unit test metadata provider.</param>
            <param name="testAssembly">The test assembly metadata object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager.FirstInvoke">
            <summary>
            When the test run is ready to test the underlying test assembly that
            this class manages, perform reflection and enqueue work items to run
            the tests.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager.EnqueueAssemblyInitialize">
            <summary>
            The assembly initialize method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager.EnqueueAssemblyCleanup">
            <summary>
            The assembly cleanup method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager.EnqueueTestClasses">
            <summary>
            Reflect over all test classes in the assembly and add any which are not 
            filtered out into the test work item queue.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager.EnqueueMethodDispatcher(System.Reflection.MethodInfo)">
            <summary>
            Helper to enqueue a new method dispatcher.
            </summary>
            <param name="method">The method reflection object.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.AssemblyManager.ClassInstances">
            <summary>
            Gets the collection of all the instances of the assembly's test
            classes, used to keep a single reference of the type.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer">
            <summary>
            A method container.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer._timeout">
            <summary>
            The timeout time.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer._method">
            <summary>
            The test method metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer.#ctor">
            <summary>
            Constructs a new method container.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer.#ctor(System.Object,System.Reflection.MethodInfo,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod)">
            <summary>
            Constructs a new method container.
            </summary>
            <param name="instance">An instance of the method's type.</param>
            <param name="method">The method reflection object.</param>
            <param name="testMethod">The test method.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer._methodTask">
            <summary>
            The task that involves the method, and contains its own internal 
            test queue, if needed for asynchronous tasks.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer._methodInfo">
            <summary>
            The reflection object for the method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer.Invoke">
            <summary>
            Invoke into the method.
            </summary>
            <returns>Returns the condition of any remaining work.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer.FirstInvoke">
            <summary>
            On the first invoke, make sure there's a task to call the method.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Harness.MethodContainer.MethodInfo">
            <summary>
            Gets the method's reflection object.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary">
            <summary>
            A dictionary that manages single instances of types for use across the 
            unit test system.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary.GetInstance(System.Type)">
            <summary>
            Returns the instance for a Type; if there is not an instance yet, 
            this will use Activator.CreateInstance to create it.
            </summary>
            <param name="type">The Type instance to retrieve.</param>
            <returns>Returns an instance of the Type.  Returns a new instance 
            if the Type has not yet been used.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassInstanceDictionary.ClearInstance(System.Type)">
            <summary>
            Remove any instance for the type.
            </summary>
            <param name="type">The Type of instance to remove.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager">
            <summary>
            Test class manager.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager._filter">
            <summary>
            Test run filter object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager._testClass">
            <summary>
            Reference to the class and its metadata.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager._testExecutionQueue">
            <summary>
            Queue of any tests to run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager._instance">
            <summary>
            Class instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager.#ctor(Microsoft.Silverlight.Testing.UnitTesting.Harness.TestRunFilter,Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestHarness,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestClass,System.Object,Microsoft.Silverlight.Testing.UnitTesting.Metadata.IUnitTestProvider)">
            <summary>
            A container type that handles an entire test class throughout the 
            test run.
            </summary>
            <param name="filter">Test run filter object.</param>
            <param name="testHarness">The unit test harness.</param>
            <param name="testClass">The test class metadata interface.</param>
            <param name="instance">The object instance.</param>
            <param name="provider">The unit test provider.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager.FirstInvoke">
            <summary>
            Code run the first time this container is invoked.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager.PrepareInstance">
            <summary>
            Custom tests need to be prepared before use.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager.EnqueueTestClassInitialize">
            <summary>
            The test initialize method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager.EnqueueTestClassCleanup">
            <summary>
            The test cleanup method.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager.PopulateTestMethods">
            <summary>
            Reflect through the class to find any test methods, and add them to 
            the list of queued methods.  Also, sorts the methods if appropriate 
            based on the settings file.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.TestClassManager.EnqueueMethodDispatcher(System.Reflection.MethodInfo)">
            <summary>
            Add a new method dispatcher to the test work item queue.  This is a 
            work item container which is able to manage its own internal test 
            work item queue.
            </summary>
            <param name="method">The method reflection object.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.WorkItemsManager">
            <summary>
            A special type dedicated to keeping a running stack of the dispatch 
            managers that are actually enabled for "work item" use.  The current 
            dispatcher is used by the test work item queue.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.WorkItemsManager._stack">
            <summary>
            Dispatcher stack; a stack of work item containers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.WorkItemsManager.#ctor">
            <summary>
            Creates a new empty stack for work item containers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.WorkItemsManager.Push(Microsoft.Silverlight.Testing.UnitTesting.ICompositeWorkItem)">
            <summary>
            Push a new dispatcher onto the stack.
            </summary>
            <param name="composite">The composite work item to push.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.WorkItemsManager.Pop">
            <summary>
            Pop a dispatcher off the stack.
            </summary>
            <returns>Returns the top-most container.  Throws an 
            InvalidOperationException if none is available.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.WorkItemsManager.CurrentCompositeWorkItem">
            <summary>
            Gets the current test work item dispatcher, which is the dispatcher 
            on the top of the stack.  Returns null if there is none.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMethodContainer">
            <summary>
            A container which is able to attach to the underlying test dispatcher 
            stack to enable advanced asynchronous functionality, when supported.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMethodContainer._harness">
            <summary>
            The unit test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMethodContainer._granularity">
            <summary>
            The granularity of the contained item.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMethodContainer._testMethod">
            <summary>
            The test method metadata object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMethodContainer.#ctor(Microsoft.Silverlight.Testing.Harness.ITestHarness,System.Object,System.Reflection.MethodInfo,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,Microsoft.Silverlight.Testing.Harness.TestGranularity)">
            <summary>
            Initializes dispatcher-stack attaching method container work item.
            </summary>
            <param name="testHarness">Test harness.</param>
            <param name="instance">Test instance.</param>
            <param name="method">Method reflection object.</param>
            <param name="testMethod">Test method metadata.</param>
            <param name="granularity">Granularity of test.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMethodContainer.FirstInvoke">
            <summary>
            Connect to dispatcher stack for advanced functions, if supported.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Harness.UnitTestMethodContainer.SupportsWorkItemQueue">
            <summary>
            Check a MethodInfo for the advanced async attribute.
            </summary>
            <returns>True if the work item queue is supported.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.CallbackWorkItem">
            <summary>
            A work item for tests to use which will call the delegate when the work 
            item is executed.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.CallbackWorkItem._action">
            <summary>
            Stored void delegate.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.CallbackWorkItem.#ctor(System.Action)">
            <summary>
            Create a new Callback work item.
            </summary>
            <param name="callback">Action to execute on Invoke.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.CallbackWorkItem.Invoke">
            <summary>
            Execute the callback.
            </summary>
            <returns>Whether the work item is complete.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.ConditionalWorkItem">
            <summary>
            A test work item that is complete once the condition is asserted.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.ConditionalWorkItem._delegate">
            <summary>
            The conditional delegate.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.ConditionalWorkItem.#ctor(System.Func{System.Boolean})">
            <summary>
            Construct a new conditional work item.
            </summary>
            <param name="conditionalMethod">Conditional delegate.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.ConditionalWorkItem.Invoke">
            <summary>
            Invoke the condition, will continue invoking until 
            the condition is false.
            </summary>
            <returns>Completes the invocation once the condition is true.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.MethodInvokeWorkItem">
            <summary>
            A simple work item that invokes a method through the reflection 
            MethodInfo instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.MethodInvokeWorkItem.None">
            <summary>
            An empty object array.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.MethodInvokeWorkItem._instance">
            <summary>
            An object instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.MethodInvokeWorkItem._method">
            <summary>
            Method reflection object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.MethodInvokeWorkItem._testMethod">
            <summary>
            The test method to invoke.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.MethodInvokeWorkItem.#ctor(System.Object,System.Reflection.MethodInfo,Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod)">
            <summary>
            Creates a new method invoke work item for a MethodInfo instance.
            </summary>
            <param name="instance">The type instance.</param>
            <param name="method">The method on the type to invoke when the 
            work item is executed.</param>
            <param name="testMethod">The test method metadata.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.MethodInvokeWorkItem.Invoke">
            <summary>
            Invokes the underlying method on the instance and marks the 
            test work item as complete.
            </summary>
            <returns>False, noting the completion of the work item.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviders">
            <summary>
            Unit test providers.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviders._providers">
            <summary>
            List of unit test providers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviders.#cctor">
            <summary>
            Static constructor that initializes the built-in unit test metadata providers.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviders.GetAssemblyProvider(Microsoft.Silverlight.Testing.Harness.ITestHarness,System.Reflection.Assembly)">
            <summary>
            Gets the unit test provider for an assembly.  The framework only 
            currently supports a single provider per test assembly, so if more 
            than one registered provider can handle the assembly, at runtime an 
            InvalidOperationException is thrown.
            </summary>
            <param name="harness">The test harness making the request.</param>
            <param name="testAssembly">Assembly reflection object.</param>
            <returns>The unit test provider for the test assembly.  Throws if 
            more than one can process the assembly.  Returns null if there is 
            not a provider for the assembly.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviders.GetAssemblyWrapper(Microsoft.Silverlight.Testing.Harness.ITestHarness,System.Reflection.Assembly)">
            <summary>
            Returns the IAssembly provider for an assembly.
            </summary>
            <param name="harness">Test harness object.</param>
            <param name="testAssembly">Assembly reflection object.</param>
            <returns>Returns null or an IAssembly instance.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UnitTesting.Metadata.UnitTestProviders.Providers">
            <summary>
            Gets the list of Unit Test providers.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.DecoratorDictionary">
            <summary>
            A dictionary that can store just about any kind of object, keyed off any
            object.  As a Hashtable, it permits using keys of 
            - enums
            - objects
            - types
            
            This makes it ideal for use in decorating and adorning special types in
            the system, such as log messages.
            
            A strongly-typed decorator key could come from an enum value, while a
            prototype extension to the test system could simply use a string key for
            organizing.  
            
            In all instances, the resulting object needs to be cast appropriately.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.DecoratorDictionary.HasDecorator(System.Object)">
            <summary>
            Check if a decorator exists.
            </summary>
            <param name="decoratorKey">The decorator key object.</param>
            <returns>
            Returns a value indicating whether the decorator key exists.  Even
            if the key exists, the instance value for the key could be set to
            null, yielding a null instance.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.DecoratorDictionary.HasDecorators(System.Object[])">
            <summary>
            Check if a set of decorators exists.
            </summary>
            <param name="decorators">The set of decorator(s) of interest.</param>
            <returns>
            Returns a value indicating whether the decorators of interest were
            present.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.DecoratorDictionary.GetDecorator(System.Object)">
            <summary>
            Retrieves the decorator instance if it exists.  If not, this method
            returns null.
            </summary>
            <param name="decoratorKey">The decorator key object.</param>
            <returns>
            Returns the instance or null if it does not exist.  No exceptions
            are thrown in this method.
            </returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.ResourceUtility">
            <summary>
            Helper functionality for dealing with embedded resources in an assembly.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ResourceUtility.GetAllText(System.Object,System.String)">
            <summary>
            Get a string containing the text of an embedded resource in an
            assembly.
            </summary>
            <param name="instance">
            An instance whose assembly can be retrieved through reflection.
            </param>
            <param name="fullEmbeddedResourceName">
            Complete embedded resource name.
            </param>
            <returns>
            A string containing the embedded resource's string contents.
            </returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.LogMessageFactory">
            <summary>
            A simple factory used for creating new log messages.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageFactory.Create">
            <summary>
            Create a new LogMessage instance.
            </summary>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessageFactory.Create(Microsoft.Silverlight.Testing.Harness.LogMessageType)">
            <summary>
            Create a new LogMessage instance.
            </summary>
            <param name="messageType">The type of message to create.</param>
            <returns>Returns a new LogMessage instance.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.LogMessageFactory.DefaultLogMessageType">
            <summary>
            Gets or sets the default log message type used for the creation of
            unspecific log message types.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.LogDecorator">
            <summary>
            Well-known keys that can be used to mark decorator instances in log 
            message objects.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogDecorator.ExceptionObject">
            <summary>
            Key for a decorator that is a simple Exception object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogDecorator.NameProperty">
            <summary>
            Key for a decorator that is a simple Name string property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogDecorator.TestOutcome">
            <summary>
            An associated TestOutcome value.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogDecorator.TestStage">
            <summary>
            The stage of a message or event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogDecorator.TestGranularity">
            <summary>
            The granularity of a message or event.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestOutcome">
            <summary>
            A number of possible test outcomes or results.  For compatibility, this 
            information resembles that of the desktop test framework, although many 
            of the states may not apply or be valid for an in-browser test harness.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Error">
            <summary>
            A test outcome of Error.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Failed">
            <summary>
            A test outcome of Failed.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Timeout">
            <summary>
            A test outcome of Timeout.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Aborted">
            <summary>
            A test outcome of Aborted.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Inconclusive">
            <summary>
            A test outcome of Inconclusive.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.PassedButRunAborted">
            <summary>
            A test outcome of a run that was aborted, but passed.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.NotRunnable">
            <summary>
            A test outcome of NotRunnable.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.NotExecuted">
            <summary>
            A test outcome of NotExecuted.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Disconnected">
            <summary>
            A test outcome of Disconnected.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Warning">
            <summary>
            A test outcome of Warning.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Passed">
            <summary>
            A test outcome of Passed.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Completed">
            <summary>
            A test outcome of Completed.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.InProgress">
            <summary>
            A test outcome of InProgress.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestOutcome.Pending">
            <summary>
            A test outcome of Pending.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestStage">
            <summary>
            The stage of a test scenario, case or system running.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestStage.Starting">
            <summary>
            In the process of starting.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestStage.Running">
            <summary>
            Currently running.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestStage.Finishing">
            <summary>
            Finishing up.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestStage.Canceling">
            <summary>
            The test is canceling.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler">
            <summary>
            Provides a property that will attach and detach a known event handler
            delegate when the bit is flipped.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler._eventHandler">
            <summary>
            The event to fire when attached.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler._attached">
            <summary>
            Whether the event handler is attached as a global unhandled
            exception handler.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.#ctor(System.EventHandler)">
            <summary>
            Creates a new exception handler "manager" with the provided
            EventHandler.
            </summary>
            <param name="eventHandler">The event handler to manage.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.ChangeExceptionBubbling(System.EventArgs,System.Boolean)">
            <summary>
            Mark the Handled property in the event args as True to stop any 
            event bubbling.
            </summary>
            <param name="e">Event arguments.</param>
            <param name="exceptionHandled">
            Value indicating whether the Exception should be marked as handled.
            </param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.GetExceptionObject(System.EventArgs)">
            <summary>
            Return the Exception property from the EventArgs.
            </summary>
            <param name="e">Event arguments.</param>
            <returns>
            Returns the Exception object that the event arguments stores.
            </returns>
            <remarks>
            This method is compatible with the full desktop framework as well as
            Silverlight.
            </remarks>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.OnGlobalException(System.Object,System.Windows.ApplicationUnhandledExceptionEventArgs)">
            <summary>
            Internal event that is hooked up to the global exception handler.
            </summary>
            <param name="sender">Source object of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.UpdateAttachment">
            <summary>
            Called after a change to the attachment field value.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.AttachHandler">
            <summary>
            Attach the handler globally.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.DetachHandler">
            <summary>
            Detach the handler globally.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.GlobalExceptionHandler.AttachGlobalHandler">
            <summary>
            Gets or sets a value indicating whether the handler is currently 
            attached to the global exception handler.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.LogMessage">
            <summary>
            A log message.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessage.DefaultLogMessageType">
            <summary>
            The default log message used during initialization.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessage.#ctor">
            <summary>
            Initializes a new log message of the default message type.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessage.#ctor(Microsoft.Silverlight.Testing.Harness.LogMessageType)">
            <summary>
            Initializes a new log message.
            </summary>
            <param name="messageType">The message type.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessage.ToString">
            <summary>
            Converts to string representation.
            </summary>
            <returns>A string version of the LogMessage.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessage.HasDecorator(System.Object)">
            <summary>
            Check if a decorator is present on the LogMessage.
            </summary>
            <param name="decorator">The decorator of interest.</param>
            <returns>
            Returns a value indicating whether the decorator is present in the
            DecoratorDictionary.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.LogMessage.HasDecorators(System.Object[])">
            <summary>
            Check if a set of decorators are present.
            </summary>
            <param name="decorators">The decorator(s) of interest.</param>
            <returns>
            Returns a value indicating whether the decorator(s) of interest are
            present.
            </returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.LogMessage.Decorators">
            <summary>
            Gets the set of decorator instances attached to the log message.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.LogMessage.MessageType">
            <summary>
            Gets or sets the type of message.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.LogMessage.Message">
            <summary>
            Gets or sets the log's message.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.LogMessage.Item(System.Object)">
            <summary>
            Gets or sets the decorator type for the message.
            </summary>
            <param name="decorator">
            The type of decorator.  Only one explicit Type is permitted,
            although multiple types within the same type hierarchy are
            legitimate.
            </param>
            <returns>Returns the instance of the decorator, if any.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestGranularity">
            <summary>
            The hierarchy of test execution represented in more generic terms, this
            allows for more robust and useful actions by log providers.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestGranularity.Harness">
            <summary>
            Harness-level granularity.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestGranularity.TestGroup">
            <summary>
            Group of test-level granularity.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestGranularity.Test">
            <summary>
            Test-level granularity.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.TestGranularity.TestScenario">
            <summary>
            Scenario-level granularity.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.DebugOutputProvider">
            <summary>
            The most verbose log provider, this calls .ToString() on each and every 
            LogMessage that it processes.  The output will appear in an attached 
            debugger's "Output" window.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.DebugOutputProvider.#ctor">
            <summary>
            Initializes a new instance of the DebugOutputProvider class.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.DebugOutputProvider.Process(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Display a LogMessage in the debug output window.
            </summary>
            <param name="logMessage">Message object.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.DebugOutputProvider.ShowAllFailures">
            <summary>
            Gets or sets a value indicating whether any TestResult failures will 
            be reported, regardless of whether the TestResult type is being 
            monitored for debug output.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.DebugOutputProvider.ShowEverything">
            <summary>
            Gets or sets a value indicating whether all messages appear in the 
            debug output.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.LogMessageType">
            <summary>
            Set of defined types of log messages to allow for some level of 
            filtering and selective processing of log messages.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.TestResult">
            <summary>
            Pass, fail, etc.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.Debug">
            <summary>
            Debug::WriteLine or tracing.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.Warning">
            <summary>
            Non-fatal log message.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.Error">
            <summary>
            Fatal error message.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.KnownIssue">
            <summary>
            Information about a known defect.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.Information">
            <summary>
            General information similar to a Console::WriteLine.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.Environment">
            <summary>
            Operating system setting or platform values.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.TestExecution">
            <summary>
            New unit of test or test run note.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.LogMessageType.TestInfrastructure">
            <summary>
            Related test systems or out-of-process communication information.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider">
            <summary>
            A log provider that operates on the live HtmlPage by logging very 
            high-level pass/fail status to the screen.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.DefaultDisplayName">
            <summary>
            Name to display in the header for the test harness or test product 
            name.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider._control">
            <summary>
            The test column header control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider._hasFailed">
            <summary>
            Whether any failures have been found.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider._hasResults">
            <summary>
            Whether we've had any results at all.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider._hasFinished">
            <summary>
            Has a granular TestGroup completion been processed.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.#ctor">
            <summary>
            Creates a new web page header provider.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.#ctor(System.String)">
            <summary>
            Creates a new web page header provider.
            </summary>
            <param name="displayName">The display name for the harness.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.Initialize(Microsoft.Silverlight.Testing.Harness.TestHarnessSettings)">
            <summary>
            Initializes the test harness.
            </summary>
            <param name="settings">The test harness settings object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.RegisterLoggingHandlers">
            <summary>
            Registers the conditional delegates.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.NotFailedButWithResults(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Conditional check, if the message has results and the current state 
            of the run, as tracked by this provider, is "pass".
            </summary>
            <param name="message">The log message.</param>
            <returns>Returns true when the conditions are met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.MarksTestGroupCompletion(Microsoft.Silverlight.Testing.Harness.LogMessage)">
            <summary>
            Conditional check, if the message is of a granular nature, a test 
            group, and in the finishing stage.
            </summary>
            <param name="message">The log message.</param>
            <returns>Returns true when the conditions are met.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.UpdateIndicator">
            <summary>
            Alter the coloring to indicate the status.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebpageHeaderLogProvider.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestHarnessCompletedEventArgs">
            <summary>
            Event information marking the completion of a test run.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarnessCompletedEventArgs.#ctor(Microsoft.Silverlight.Testing.Harness.TestHarnessState)">
            <summary>
            Creates a new TestHarnessCompletedEventArgs.
            </summary>
            <param name="testHarnessState">The final test harness state.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessCompletedEventArgs.State">
            <summary>
            Gets the final test harness state.
            
            This contains the final pass versus fail result at a minimum.
            Specific harnesses may extend the type to contain additional
            information, logs, scenario counts, or anything else.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.RunDispatcher">
            <summary>
            Handle calling into the test framework as needed to perform the test
            run, process the internal test dispatcher queue, and keep execution
            moving forward.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Harness.RunDispatcher._runNextStep">
            <summary>
            Delegate that returns whether more work remains and runs the next
            set of work.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.RunDispatcher.#ctor(System.Func{System.Boolean})">
            <summary>
            Creates a new RunMethodManager, taking in a conditional delegate to
            run for each step to see if more work remains.
            </summary>
            <param name="runNextStep">
            The conditional delegate that performs work and indicates whether
            additional work remains.
            </param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.RunDispatcher.Create(System.Func{System.Boolean})">
            <summary>
            Create a new run method manager object.
            </summary>
            <param name="runNextStep">
            Conditional indicating whether more work will remain after
            performing the work.
            </param>
            <returns>
            Returns the run method manager. Typically depends on the execution 
            platform and environment.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.RunDispatcher.Run">
            <summary>
            A completely synchronous implementation, unless overridden, that
            calls RunNextStep() until the harness is finished.
            
            The default implementation will not work with a presentation-rich
            test environment.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.RunDispatcher.RunNextStep">
            <summary>
            Calls a conditional delegate, and returns whether there is more work
            to be done.
            </summary>
            <returns>
            Returns a value indicating whether there is additional work
            remaining after executing the current work.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.RunDispatcher.OnComplete">
            <summary>
            Calls the Complete event handler.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Harness.RunDispatcher.Complete">
            <summary>
            Event that is called when all work is complete.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.HtmlTestColumn">
            <summary>
            A type that represents a web page used for test purposes of the current 
            Silverlight plugin.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.HtmlTestColumn.ImplicitPadding">
            <summary>
            Padding that is always present between the control and plugin.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.HtmlTestColumn.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes the HtmlTestColumn control.
            </summary>
            <param name="allocatedColumnWidth">The allocated width in pixels of
            the test column.</param>
            <param name="leftMargin">The left margin size, in pixels.</param>
            <param name="clientHeight">The calculated height of the browser's 
            client space.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.HtmlTestColumn.PreparePositioning">
            <summary>
            Positions the column absolutely.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.HtmlTestColumn.PrepareLeftEdge(System.Int32)">
            <summary>
            Creates a border on the left side of the column.
            </summary>
            <param name="leftMargin">The margin on the left.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssPosition">
            <summary>
            The position type for an element.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssBox">
            <summary>
            An attached, 4-component unit box for CSS values.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.Box">
            <summary>
            A simple type that tracks the 4 coordinates in a box - left, top, 
            bottom, right, for CSS use.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Box.Left">
            <summary>
            Gets or sets the left Unit.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Box.Top">
            <summary>
            Gets or sets the top Unit.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Box.Bottom">
            <summary>
            Gets or sets the bottom Unit.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Box.Right">
            <summary>
            Gets or sets the right Unit.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Box.All">
            <summary>
            Gets or sets all four box components at once, to the same value.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssBox._mhe">
            <summary>
            The managed control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssBox._cssProperties">
            <summary>
            The enum property names.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssBox.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase,Microsoft.Silverlight.Testing.Html.CssAttribute,Microsoft.Silverlight.Testing.Html.CssAttribute,Microsoft.Silverlight.Testing.Html.CssAttribute,Microsoft.Silverlight.Testing.Html.CssAttribute)">
            <summary>
            Initializes a new CssBox type with the specified CSS property names.
            </summary>
            <param name="element">The parent managed HTML element.</param>
            <param name="top">The top property.</param>
            <param name="right">The right property.</param>
            <param name="bottom">The bottom property.</param>
            <param name="left">The left property.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssBox.SetStyleProperty(Microsoft.Silverlight.Testing.Html.CssAttribute,Microsoft.Silverlight.Testing.Html.Unit)">
            <summary>
            Sets a style property.
            </summary>
            <param name="style">The style name.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.CssBox.ManagedHtmlElement">
            <summary>
            Gets the managed HTML element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.CssBox.Top">
            <summary>
            Gets or sets the Top value.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.CssBox.Right">
            <summary>
            Gets or sets the Right value.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.CssBox.Bottom">
            <summary>
            Gets or sets the Bottom value.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.CssBox.Left">
            <summary>
            Gets or sets the left value.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssPosition.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Initializes a new position type.
            </summary>
            <param name="element">The owning element.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.EventAttachment`1">
            <summary>
            A type that represents an event attachment, with the handler and name.
            </summary>
            <typeparam name="T">The type of handler.</typeparam>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.EventAttachment`1.Handler">
            <summary>
            Gets or sets the event handler.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.EventAttachment`1.EventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.BorderStyle">
            <summary>
            Border line styles in CSS.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Dashed">
            <summary>
            The Dashed border style.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Dotted">
            <summary>
            The Dotted border style.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Double">
            <summary>
            The Double border style.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Groove">
            <summary>
            The Groove border style.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Inset">
            <summary>
            The Inset border style.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Outset">
            <summary>
            The Outset border style.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Ridge">
            <summary>
            The Ridge border style.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BorderStyle.Solid">
            <summary>
            The Solid border style.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssDisplay">
            <summary>
            A subset of the CSS property values for display.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssDisplay.None">
            <summary>
            Do not display the element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssDisplay.Block">
            <summary>
            The element will be displayed as a block-level element, with a line
            break before and after the element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssDisplay.Inline">
            <summary>
            Default in CSS. The element will be displayed as an inline element, 
            with no line break before or after the element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssDisplay.InlineBlock">
            <summary>
            Displays using the inline block box model.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssSize">
            <summary>
            A height and width type that attaches to a control to update HtmlElement
            values directly.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.Size`1">
            <summary>
            A simple type with both a Width and Height value.
            </summary>
            <typeparam name="T">The type of width and height property.</typeparam>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Size`1.#ctor">
            <summary>
            Initializes a new Size instance.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Size`1.#ctor(`0,`0)">
            <summary>
            Initializes a new Size instance.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Size`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Size`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssSize._mhe">
            <summary>
            The managed Control reference.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssSize._cssProperties">
            <summary>
            Stored property enum names.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssSize.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase,Microsoft.Silverlight.Testing.Html.CssAttribute,Microsoft.Silverlight.Testing.Html.CssAttribute)">
            <summary>
            Initializes a new CssSize.
            </summary>
            <param name="element">The element.</param>
            <param name="width">The width CSS property.</param>
            <param name="height">The height CSS property.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssSize.SetStyleProperty(Microsoft.Silverlight.Testing.Html.CssAttribute,Microsoft.Silverlight.Testing.Html.Unit)">
            <summary>
            Sets the style property.
            </summary>
            <param name="style">The style enum name.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.CssSize.Width">
            <summary>
            Gets or sets the width unit.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.CssSize.Height">
            <summary>
            Gets or sets the height Unit.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssAttribute">
            <summary>
            CSS style property names.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BackgroundAttachment">
            <summary>
            The CSS property BackgroundAttachment.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BackgroundColor">
            <summary>
            The CSS property BackgroundColor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BackgroundImage">
            <summary>
            The CSS property BackgroundImage.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BackgroundPosition">
            <summary>
            The CSS property BackgroundPosition.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BackgroundRepeat">
            <summary>
            The CSS property BackgroundRepeat.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Background">
            <summary>
            The CSS property Background.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Border">
            <summary>
            The CSS pBorder property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderTop">
            <summary>
            The CSS property BorderTop.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderTopColor">
            <summary>
            The CSS property BorderTopColor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderTopStyle">
            <summary>
            The CSS property BorderTopStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderTopWidth">
            <summary>
            The CSS property BorderTopWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderRight">
            <summary>
            The CSS property BorderRight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderRightColor">
            <summary>
            The CSS property BorderRightColor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderRightStyle">
            <summary>
            The CSS property BorderRightStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderRightWidth">
            <summary>
            The CSS property BorderRightWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderLeft">
            <summary>
            The CSS property BorderLeft.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderLeftColor">
            <summary>
            The CSS property BorderLeftColor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderLeftStyle">
            <summary>
            The CSS property BorderLeftStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderLeftWidth">
            <summary>
            The CSS property BorderLeftWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderBottom">
            <summary>
            The CSS property BorderBottom.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderBottomColor">
            <summary>
            The CSS property BorderBottomColor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderBottomStyle">
            <summary>
            The CSS property BorderBottomStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderBottomWidth">
            <summary>
            The CSS property BorderBottomWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderColor">
            <summary>
            The CSS property BorderColor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderStyle">
            <summary>
            The CSS property BorderStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderWidth">
            <summary>
            The CSS property BorderWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Clear">
            <summary>
            The CSS Clear property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Cursor">
            <summary>
            The CSS Cursor property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Color">
            <summary>
            The CSS Color property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Display">
            <summary>
            The CSS Display property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.FontWeight">
            <summary>
            The CSS property FontWeight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.FontSize">
            <summary>
            The CSS property FontSize.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.FontFamily">
            <summary>
            The CSS property FontFamily.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.FontStyle">
            <summary>
            The CSS property FontStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Height">
            <summary>
            The CSS Height property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MarginLeft">
            <summary>
            The CSS property MarginLeft.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MarginTop">
            <summary>
            The CSS property MarginTop.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MarginRight">
            <summary>
            The CSS property MarginRight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MarginBottom">
            <summary>
            The CSS property MarginBottom.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Margin">
            <summary>
            The CSS Margin property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PaddingLeft">
            <summary>
            The CSS property PaddingLeft.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PaddingTop">
            <summary>
            The CSS property PaddingTop.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PaddingRight">
            <summary>
            The CSS property PaddingRight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PaddingBottom">
            <summary>
            The CSS property PaddingBottom.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Padding">
            <summary>
            The CSS Padding property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.TextDecoration">
            <summary>
            The CSS property TextDecoration.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Width">
            <summary>
            The CSS Width property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Float">
            <summary>
            The CSS Float property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Visibility">
            <summary>
            The CSS property Visibility.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Top">
            <summary>
            The Top CSS property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Right">
            <summary>
            The CSS Right property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Bottom">
            <summary>
            The CSS Bottom property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Left">
            <summary>
            The CSS Left property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Position">
            <summary>
            The CSS property Position.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Clip">
            <summary>
            The CSS Clip property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Overflow">
            <summary>
            The CSS property Overflow.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.VerticalAlign">
            <summary>
            The CSS property VerticalAlign.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Zindex">
            <summary>
            The CSS Zindex property.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MaxHeight">
            <summary>
            The CSS property MaxHeight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MinHeight">
            <summary>
            The CSS property MinHeight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MaxWidth">
            <summary>
            The CSS property MaxWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MinWidth">
            <summary>
            The CSS property MinWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.FontSizeAdjust">
            <summary>
            The CSS property FontSizeAdjust.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.FontStretch">
            <summary>
            The CSS property FontStretch.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.FontVariant">
            <summary>
            The CSS property FontVariant.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Font">
            <summary>
            The CSS property Font.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Content">
            <summary>
            The CSS property Content.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.CounterIncrement">
            <summary>
            The CSS property CounterIncrement.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.CounterReset">
            <summary>
            The CSS property CounterReset.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Quotes">
            <summary>
            The CSS property Quotes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.ListStyleType">
            <summary>
            The CSS property ListStyleType.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.ListStylePosition">
            <summary>
            The CSS property ListStylePosition.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.ListStyleImage">
            <summary>
            The CSS property ListStyleImage.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.ListStyle">
            <summary>
            The CSS property ListStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.MarkerOffset">
            <summary>
            The CSS property MarkerOffset.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.OutlineColor">
            <summary>
            The CSS property OutlineColor.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.OutlineStyle">
            <summary>
            The CSS property OutlineStyle.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.OutlineWidth">
            <summary>
            The CSS property OutlineWidth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Outline">
            <summary>
            The CSS property Outline.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Marks">
            <summary>
            The CSS property Marks.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Orphans">
            <summary>
            The CSS property Orphans.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Page">
            <summary>
            The CSS property Page.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PageBreakAfter">
            <summary>
            The CSS property PageBreakAfter.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PageBreakBefore">
            <summary>
            The CSS property PageBreakBefore.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PageBreakInside">
            <summary>
            The CSS property PageBreakInside.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Size">
            <summary>
            The CSS property Size.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Windows">
            <summary>
            The CSS property Windows.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderCollapse">
            <summary>
            The CSS property BorderCollapse.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.BorderSpacing">
            <summary>
            The CSS property BorderSpacing.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.CaptionSide">
            <summary>
            The CSS property CaptionSide.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.EmptyCells">
            <summary>
            The CSS property EmptyCells.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.TableLayout">
            <summary>
            The CSS property TableLayout.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Direction">
            <summary>
            The CSS property Direction.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.LineHeight">
            <summary>
            The CSS property LineHeight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.LetterSpacing">
            <summary>
            The CSS property LetterSpacing.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.TextAlign">
            <summary>
            The CSS property TextAlign.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.TextIndent">
            <summary>
            The CSS property TextIndent.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.TextTransform">
            <summary>
            The CSS property TextTransform.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.UnicodeBidi">
            <summary>
            The CSS property UnicodeBidi.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.WhiteSpace">
            <summary>
            The CSS property WhiteSpace.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.WordSpacing">
            <summary>
            The CSS property WordSpacing.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Azimuth">
            <summary>
            The CSS property Azimuth.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.CueAfter">
            <summary>
            The CSS property CueAfter.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.CueBefore">
            <summary>
            The CSS property CueBefore.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Cue">
            <summary>
            The CSS property Cue.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Elevation">
            <summary>
            The CSS property Elevation.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PauseAfter">
            <summary>
            The CSS property PauseAfter.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PauseBefore">
            <summary>
            The CSS property PauseBefore.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Pause">
            <summary>
            The CSS property Pause.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Pitch">
            <summary>
            The CSS property Pitch.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PitchRange">
            <summary>
            The CSS property PitchRange.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.PlayDuring">
            <summary>
            The CSS property PlayDuring.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Richness">
            <summary>
            The CSS property Richness.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Speak">
            <summary>
            The CSS property Speak.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.SpeakHeader">
            <summary>
            The CSS property SpeakHeader.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.SpeakNumeral">
            <summary>
            The CSS property SpeakNumeral.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.SpeakPunctuation">
            <summary>
            The CSS property SpeakPunctuation.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.SpeechRate">
            <summary>
            The CSS property SpeechRate.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Stress">
            <summary>
            The CSS property Stress.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.VoiceFamily">
            <summary>
            The CSS property VoiceFamily.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.CssAttribute.Volume">
            <summary>
            The CSS property Volume.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssMargin">
            <summary>
            The margin type for an element.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssMargin.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Initializes a new margin type for the control.
            </summary>
            <param name="element">The owning element.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssPadding">
            <summary>
            The padding type for an element.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssPadding.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Initializes a new padding type.
            </summary>
            <param name="element">The owning element.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.FontInfo">
            <summary>
            Represents the font properties for text. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontInfo._owner">
            <summary>
            The owning control of this font information.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontInfo.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Initializes a FontInfo object.
            </summary>
            <param name="owner">The owning Control reference.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontInfo.SetCssValue(Microsoft.Silverlight.Testing.Html.CssAttribute,System.String)">
            <summary>
            Set a value on the owning HtmlElement.
            </summary>
            <param name="property">The CSS property.</param>
            <param name="val">The value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontInfo.GetCssValue(Microsoft.Silverlight.Testing.Html.CssAttribute)">
            <summary>
            Gets a CSS value.
            </summary>
            <param name="property">The property name.</param>
            <returns>Returns the actual value as a string.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontInfo.CopyFrom(Microsoft.Silverlight.Testing.Html.FontInfo)">
            <summary>
            Copies the font properties of another FontInfo into this instance.
            </summary>
            <param name="font">Object to copy from.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontInfo.CopyFontNamesAndSizeFrom(Microsoft.Silverlight.Testing.Html.FontInfo)">
            <summary>
            Copies the font properties of another FontInfo into this instance.
            </summary>
            <param name="info">Object to copy from.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontInfo.MergeWith(Microsoft.Silverlight.Testing.Html.FontInfo)">
            <summary>
            Combines the font properties of another FontInfo with this instance.
            </summary>
            <param name="font">Object to merge values with.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontInfo.ToString">
            <summary>
            The string value of the FontInfo instance.
            </summary>
            <returns>Returns a string.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontInfo.Bold">
            <summary>
            Gets or sets a value indicating whether the text is bold.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontInfo.Italic">
            <summary>
            Gets or sets a value indicating whether the text is italic.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontInfo.Name">
            <summary>
            Gets or sets the name of the font.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontInfo.Names">
            <summary>
            Gets or sets the font names.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontInfo.Size">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontInfo.Strikeout">
            <summary>
            Gets or sets a value indicating whether the text has a line through it.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontInfo.Underline">
            <summary>
            Gets or sets a value indicating whether the text is underlined.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.FontNamesConverter">
            <summary>
            Converts a string with font names separated by commas to and from an 
            array of strings containing individual names.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines if the specified data type can be converted to an array 
            of strings containing individual font names.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="sourceType">The source type.</param>
            <returns>Returns whether the object can be converted.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Parses a string that represents a list of font names separated by 
            commas into an array of strings containing individual font names.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="culture">The culture information.</param>
            <param name="value">The object value.</param>
            <returns>The names array from the object.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Creates a string that represents a list of font names separated 
            by commas from an array of strings containing individual font names.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="culture">The culture information.</param>
            <param name="value">The value object.</param>
            <param name="destinationType">The destination type.</param>
            <returns>Returns the converted object.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.FontSize">
            <summary>
            Specifies the font size.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.NotSet">
            <summary>
            The font size is not set.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.AsUnit">
            <summary>
            The font size is specified as point values.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.Smaller">
            <summary>
            The font size is smaller.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.Larger">
            <summary>
            The font size is larger.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.XXSmall">
            <summary>
            The font size is extra extra small.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.XSmall">
            <summary>
            The font size is extra small.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.Small">
            <summary>
            The font size is small.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.Medium">
            <summary>
            The font size is medium.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.Large">
            <summary>
            The font size is large.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.XLarge">
            <summary>
            The font size is extra large.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontSize.XXLarge">
            <summary>
            The font size is extra extra large.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.FontUnit">
            <summary>
            Represents the font unit.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.Empty">
            <summary>
            Specifies an empty FontUnit.  This field is read only. 
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.Smaller">
            <summary>
            Specifies a FontUnit with FontSize.Smaller font. This field is 
            read only. 
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.Larger">
            <summary>
            Specifies a  with FontSize.Larger font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.XXSmall">
            <summary>
            Specifies a  with FontSize.XXSmall font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.XSmall">
            <summary>
            Specifies a  with FontSize.XSmall font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.Small">
            <summary>
            Specifies a  with FontSize.Small font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.Medium">
            <summary>
            Specifies a  with FontSize.Medium font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.Large">
            <summary>
            Specifies a  with FontSize.Large font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.XLarge">
            <summary>
            Specifies a  with FontSize.XLarge font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit.XXLarge">
            <summary>
            Specifies a  with FontSize.XXLarge font. This field is read only.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit._type">
            <summary>
            The FontSize type.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.FontUnit._value">
            <summary>
            The Unit value.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.#ctor(Microsoft.Silverlight.Testing.Html.FontSize)">
            <summary>
            Initializes a new instance of the  class with a FontSize.
            </summary>
            <param name="type">The font size.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.#ctor(Microsoft.Silverlight.Testing.Html.Unit)">
            <summary>
            Initializes a new instance of the  class with a Unit.
            </summary>
            <param name="value">The integer value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the  class with an integer value.
            </summary>
            <param name="value">The integer value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the  class with a double value.
            </summary>
            <param name="value">The unit value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.#ctor(System.Double,Microsoft.Silverlight.Testing.Html.UnitType)">
            <summary>
            Initializes a new instance of the  class with a double value.
            </summary>
            <param name="value">The unit value.</param>
            <param name="type">The type of unit.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  class with a string.
            </summary>
            <param name="value">The unit value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new FontUnit type with a value and culture info.
            </summary>
            <param name="value">The string value.</param>
            <param name="culture">Font culture.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.GetHashCode">
            <summary>
            Get the hash code for the object.
            </summary>
            <returns>Returns the hash code.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.Equals(System.Object)">
            <summary>
            Determines if the specified object is equal to the represented by 
            this instance.
            </summary>
            <param name="obj">Object to check.</param>
            <returns>Returns a value indicating whether the object is 
            equivalent.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.op_Equality(Microsoft.Silverlight.Testing.Html.FontUnit,Microsoft.Silverlight.Testing.Html.FontUnit)">
            <summary>
            Compares two  objects for equality.
            </summary>
            <param name="left">Left object.</param>
            <param name="right">Right object.</param>
            <returns>Returns whether the object are identical.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.op_Inequality(Microsoft.Silverlight.Testing.Html.FontUnit,Microsoft.Silverlight.Testing.Html.FontUnit)">
            <summary>
            Compares two  objects for inequality.
            </summary>
            <param name="left">Left object.</param>
            <param name="right">Right object.</param>
            <returns>Returns whether the objects are not identical.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.Parse(System.String)">
            <summary>
            Parse a string into a FontUnit object.
            </summary>
            <param name="value">The string value.</param>
            <returns>Returns a new FontUnit.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parse a string into a FontUnit object.
            </summary>
            <param name="value">The string value.</param>
            <param name="culture">The culture info object.</param>
            <returns>Returns a new FontUnit.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.Point(System.Int32)">
            <summary>
            Creates a  of type Point from an integer value.
            </summary>
            <param name="number">The point data.</param>
            <returns>Returns a new FontUnit.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.ToString">
            <summary>
            Convert a FontUnit to a string.
            </summary>
            <returns>Returns the string value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.ToString(System.Globalization.CultureInfo)">
            <summary>
            String vale of the FontUnit.
            </summary>
            <param name="culture">The culture info object.</param>
            <returns>Returns the string value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.ToString(System.IFormatProvider)">
            <summary>
            String value of the FontUnit.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>Returns the string version of FontUnit.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnit.op_Implicit(System.Int32)~Microsoft.Silverlight.Testing.Html.FontUnit">
            <summary>
            Implicitly creates a  of type Point from an integer value.
            </summary>
            <param name="points">The unit to implicitly convert.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontUnit.IsEmpty">
            <summary>
            Gets a value indicating whether the font size has been set.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontUnit.Type">
            <summary>
            Gets the font size by type.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.FontUnit.Unit">
            <summary>
            Gets the font size by Unit.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.FontUnitConverter">
            <summary>
            Converts a FontUnit to and from a specified data type.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines if the specified data type can be converted to a 
            FontUnit.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="sourceType">The source type.</param>
            <returns>Returns a value, whether it can convert the object.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object into a FontUnit.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="culture">The culture information.</param>
            <param name="value">The value to convert.</param>
            <returns>Returns the converted object.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns a value indicating whether the converter can
            convert to the specified destination type.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="destinationType">The type to convert to.</param>
            <returns>Returns if the type can convert.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.FontUnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified FontUnit into the specified Type.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="culture">The culture information.</param>
            <param name="value">The value to convert.</param>
            <param name="destinationType">The destination type.</param>
            <returns>Returns the converted object.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlAnchor">
            <summary>
            A HTML anchor control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAnchor.DoNothingJavaScript">
            <summary>
            JavaScript code that will cause a link to not navigate anywhere, but 
            the OnClick event will still fire.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlAnchor.#ctor">
            <summary>
            Initializes a new managed anchor control inside the parent control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlAnchor.#ctor(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})">
            <summary>
            Initializes a new managed anchor control.
            </summary>
            <param name="innerText">The inner text of the anchor/link.</param>
            <param name="clickHandler">The click handler for the button.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlAnchor.#ctor(System.String)">
            <summary>
            Initializes a new HtmlAnchor object in the parent control.
            </summary>
            <param name="nameOfLink">The name of the link to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlAnchor.ClearHref">
            <summary>
            Removes the HREF attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlAnchor.InitializeNamedLink(System.String)">
            <summary>
            Initializes a named link anchor - no href, just a name.
            </summary>
            <param name="thisLinkName">The name attribute's value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlAnchor.OnClick(System.Object,System.Windows.Browser.HtmlEventArgs)">
            <summary>
            This calls the Click event handler.
            </summary>
            <remarks>
            The target of the Click will be the managed HtmlAnchor object 
            instance and NOT the actual HtmlElement.
            </remarks>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlAnchor.Href">
            <summary>
            Gets or sets the hypertext reference for the anchor.
            
            Set to null to include JavaScript that does nothing, to prevent a 
            click-through 
            or page error.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlAnchor.Name">
            <summary>
            Gets or sets the name of the anchor.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlAnchor.Target">
            <summary>
            Gets or sets the target.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlAnchor.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Html.HtmlAnchor.Click">
            <summary>
            The target of the Click will be the managed HtmlAnchor object 
            instance and NOT the actual HtmlElement.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlAttribute">
            <summary>
            Set of HTML attribute names, as defined by the W3C's 
            HTML 4 spec.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Abbr">
            <summary>
            Abbreviation for a cell.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Accept">
            <summary>
            MIME types accepted for the upload input control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Accesskey">
            <summary>
            The accessibility key.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Action">
            <summary>
            The handler location on the server for forms.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Align">
            <summary>
            Alignment attribute.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Alt">
            <summary>
            Alternative text.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Archive">
            <summary>
            List of archive addresses.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Axis">
            <summary>
            List of related headers.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Border">
            <summary>
            Controls the border around a table.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Cellpadding">
            <summary>
            Padding for table cells.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Cellspacing">
            <summary>
            Spacing for table cells.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Char">
            <summary>
            The alignment character.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Charoff">
            <summary>
            Offset for alignment char.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Charset">
            <summary>
            Char encoding of linked resource.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Checked">
            <summary>
            For radio buttons and check boxes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Cite">
            <summary>
            URI for source document or message.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Class">
            <summary>
            Space-separated list of classes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Classid">
            <summary>
            Identifies an implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Codebase">
            <summary>
            Base URI for classid, data, archive.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Codetype">
            <summary>
            Content type for code.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Cols">
            <summary>
            List of lengths for columns.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Colspan">
            <summary>
            Number of cols spanned by cell.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Content">
            <summary>
            Associated information for a Meta tag.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Coords">
            <summary>
            Comma-separated list of lengths.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Data">
            <summary>
            Reference to object's data.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Datetime">
            <summary>
            Date and time of change.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Declare">
            <summary>
            Declare but don't instantiate flag.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Defer">
            <summary>
            UA may defer execution of script.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Dir">
            <summary>
            Direction for text.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Disabled">
            <summary>
            Unavailable in this context.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Enctype">
            <summary>
            Encoding type for a form.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.For">
            <summary>
            Matches field ID value in a label.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Frame">
            <summary>
            Which parts of frame to render.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Frameborder">
            <summary>
            Request frame borders.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Headers">
            <summary>
            List of IDs for header cells.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Height">
            <summary>
            Height of elements and other items.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Href">
            <summary>
            A hypertext reference.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Hreflang">
            <summary>
            The language code.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Id">
            <summary>
            Unique ID.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Ismap">
            <summary>
            Use a server-side image map.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Label">
            <summary>
            For use in hierarchical menus.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Lang">
            <summary>
            Language code.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Longdesc">
            <summary>
            Link to longer description.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Marginheight">
            <summary>
            Margin height in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Marginwidth">
            <summary>
            Margin width in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Maxlength">
            <summary>
            Max characters for text fields.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Media">
            <summary>
            Media value for style links.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Method">
            <summary>
            HTTP method used to submit the form.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Multiple">
            <summary>
            Default is single selection.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Name">
            <summary>
            The name of an element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Nohref">
            <summary>
            This region has no action.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Noresize">
            <summary>
            Allow users to resize frames.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onblur">
            <summary>
            On blur event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onchange">
            <summary>
            On change event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onclick">
            <summary>
            On click event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Ondblclick">
            <summary>
            On double click event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onfocus">
            <summary>
            On focus event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onkeydown">
            <summary>
            On key down event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onkeypress">
            <summary>
            On key press event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onkeyup">
            <summary>
            On key up event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onload">
            <summary>
            On load event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onmousedown">
            <summary>
            On mouse down event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onmousemove">
            <summary>
            On mouse move event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onmouseout">
            <summary>
            On mouse out event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onmouseover">
            <summary>
            On mouse over event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onmouseup">
            <summary>
            On mouse up event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onreset">
            <summary>
            On reset event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onselect">
            <summary>
            On select event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onsubmit">
            <summary>
            On submit event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Onunload">
            <summary>
            On unload event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Profile">
            <summary>
            Named dictionary of meta info.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Readonly">
            <summary>
            Read only value.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Rel">
            <summary>
            Forward link types.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Rev">
            <summary>
            Reverse link types.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Rows">
            <summary>
            List of lengths.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Rowspan">
            <summary>
            Number of rows spanned by cell.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Rules">
            <summary>
            Ruling between rows and cols.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Scheme">
            <summary>
            Select form of content.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Scope">
            <summary>
            Scope covered by header cells.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Scrolling">
            <summary>
            Scrollbar or none.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Selected">
            <summary>
            Selected value.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Shape">
            <summary>
            Controls interpretation of coords.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Size">
            <summary>
            For select tag, number of visible rows.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Span">
            <summary>
            Col attributes or default number of columns 
            in group.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Src">
            <summary>
            URI for various resources or links.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Standby">
            <summary>
            Message to show while loading.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Style">
            <summary>
            Associated style information.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Summary">
            <summary>
            Purpose or structure for speech output.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Tabindex">
            <summary>
            Position in tabbing order.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Target">
            <summary>
            Render in a specific frame/window.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Title">
            <summary>
            Advisory title.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Type">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Usemap">
            <summary>
            Use client-side image map.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Valign">
            <summary>
            Vertical alignment in cells.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Value">
            <summary>
            Property value.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Valuetype">
            <summary>
            How to interpret value.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlAttribute.Width">
            <summary>
            Width value.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlButton">
            <summary>
            An HtmlButton control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlButton.#ctor">
            <summary>
            Initializes a new HtmlButton object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlButton.OnClick(System.Object,System.Windows.Browser.HtmlEventArgs)">
            <summary>
            Calls the Click event handler.  The source object is the button.
            </summary>
            <param name="sender">The event source.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Html.HtmlButton.Click">
            <summary>
            The Click event handler.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlControlCollection">
            <summary>
            A collection of controls.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlCollection._children">
            <summary>
            The control's children.  Only children that are actually added to 
            the collection show up - actual HtmlElement objects in the real 
            DOM of the browser may exist that are not represented here.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Initializes a new control collection object.
            </summary>
            <param name="owner">The collection's owner control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.Add(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Adds a new control to the collection.
            </summary>
            <param name="item">The control to add.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.Clear">
            <summary>
            Removes all controls from the collection.  Also clears 
            the browser elements.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.ClearBrowserElements">
            <summary>
            Removes elements from the web browser for all children 
            in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.Contains(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Check whether the collection contains the control.
            </summary>
            <param name="item">The Control object.</param>
            <returns>Returns a value indicating whether the Control is in the 
            collection.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.IndexOf(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Returns the index in the collection of the control.
            </summary>
            <param name="control">The Control object.</param>
            <returns>Returns the index of the control.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.Remove(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Removes the control from the collection.
            </summary>
            <param name="item">The control object.</param>
            <returns>Returns a value indicating whether the control was removed.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the object at a location in the collection.
            </summary>
            <param name="index">The index value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.CopyTo(Microsoft.Silverlight.Testing.Html.HtmlControlBase[],System.Int32)">
            <summary>
            Copies the collection into the array.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">The starting index.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A System.Collections.Generic.IEnumerator&lt;T&gt; that can 
            be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An System.Collections.IEnumerator object that can be used 
            to iterate through the collection.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.Owner">
            <summary>
            Gets the owning Control reference.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.Count">
            <summary>
            Gets the count of objects in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read only.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlControlCollection.Item(System.Int32)">
            <summary>
            Gets the Control at the specific index.
            </summary>
            <param name="index">The object index.</param>
            <returns>Returns the control.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlControlManager">
            <summary>
            The HtmlControl manager.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlControlManager._managedControls">
            <summary>
            A set of managed controls to associate known HtmlElements that 
            have attached managed Controls.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlManager.#ctor">
            <summary>
            Creates a new HTML control manager that associates with a HARD reference 
            the element and control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlManager.HasControl(System.Windows.Browser.HtmlElement)">
            <summary>
            Check if the HtmlElement has a known managed control.
            </summary>
            <param name="element">The element object.</param>
            <returns>Returns whether the element has an attached control.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlManager.GetControl(System.Windows.Browser.HtmlElement)">
            <summary>
            Retrieves a managed control instance, if any, for the HTML element.
            </summary>
            <param name="element">The HTML element.</param>
            <returns>Returns the managed control for an HTML element.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlManager.GetKey(System.Windows.Browser.HtmlElement)">
            <summary>
            Retrieves the key, if any. Also attempts to be proactive in 
            clearing out no longer-alive weak references, though once the key 
            is found the remaining keys are not checked.
            </summary>
            <param name="element">The HtmlElement object.</param>
            <returns>Returns the WeakReference that corresponds to the element 
            key in the weak reference dictionary.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlManager.RegisterControl(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Register a managed HTML element control with the collection.
            </summary>
            <param name="control">The Control object.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlControlManager.UnregisterElement(System.Windows.Browser.HtmlElement)">
            <summary>
            Removes an HTML element from the set of known control.
            </summary>
            <param name="element">The HTML element object.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag">
            <summary>
            A bag that stores HtmlElement information before the actual element is 
            initialized.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper">
            <summary>
            A wrapper around HtmlElement that stores and retrieves values, 
            properties, and other important data.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper._realElement">
            <summary>
            The real HtmlElement after it has been initialized.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.#ctor">
            <summary>
            Initializes the HtmlElementWrapper with no real HtmlElement set.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.#ctor(System.Windows.Browser.HtmlElement)">
            <summary>
            Initializes a new element wrapper.
            </summary>
            <param name="realElement">The element whose properties to wrap.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.#ctor(System.Windows.Browser.HtmlElement,Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag)">
            <summary>
            Initializes the HtmlElementWrapper by copying the contents of a 
            property bag into the real element, and then discarding the bag's 
            contents.
            </summary>
            <param name="realElement">The real HtmlElement.</param>
            <param name="bag">The existing wrapper (bag) to copy the information
            from.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.MoveBagContents(Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag)">
            <summary>
            Copies the contents of the property, event and attribute bag into 
            the actual live control.
            </summary>
            <param name="bag">The bag containing the values.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.AttachEvent(System.String,System.EventHandler)">
            <summary>
            Attach an event handler to the element.
            </summary>
            <param name="name">The HTML script event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})">
            <summary>
            Attach an event handler to the element.
            </summary>
            <param name="name">The HTML script event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.GetAttribute(System.String)">
            <summary>
            Get an attribute from the element.
            </summary>
            <param name="name">The attribute name to lookup.</param>
            <returns>Returns the attribute's value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.GetProperty(System.String)">
            <summary>
            Gets a property.
            </summary>
            <param name="name">The HTML property.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.GetStyleAttribute(System.String)">
            <summary>
            Gets the style attribute.
            </summary>
            <param name="name">The attribute to get.</param>
            <returns>Returns the string value of the style attribute.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.RemoveAttribute(System.String)">
            <summary>
            Remove an attribute from the element.
            </summary>
            <param name="name">The attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.RemoveStyleAttribute(System.String)">
            <summary>
            Remove a style attribute from the element.
            </summary>
            <param name="name">The style attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.SetAttribute(System.String,System.String)">
            <summary>
            Set an attribute value.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.SetProperty(System.String,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="name">The HTML property.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapper.SetStyleAttribute(System.String,System.String)">
            <summary>
            Sets the style attribute.
            </summary>
            <param name="name">Attribute name.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag._attributes">
            <summary>
            The attributes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag._properties">
            <summary>
            The properties.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag._styles">
            <summary>
            The styles.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag._events">
            <summary>
            The event attachments.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag._htmlEvents">
            <summary>
            The event attachments that use HtmlEventArgs.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.#ctor">
            <summary>
            Initializes a new bag that stores HtmlElement properties and settings before 
            the actual HtmlElement exists.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.AttachEvent(System.String,System.EventHandler)">
            <summary>
            Attach an event handler.
            </summary>
            <param name="name">The event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})">
            <summary>
            Attach an event handler to the element.
            </summary>
            <param name="name">The HTML script event name.</param>
            <param name="handler">The event handler.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.GetAttribute(System.String)">
            <summary>
            Get an attribute from the element.
            </summary>
            <param name="name">The attribute name to lookup.</param>
            <returns>Returns the attribute's value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.GetProperty(System.String)">
            <summary>
            Gets a property.
            </summary>
            <param name="name">The HTML property.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.GetStyleAttribute(System.String)">
            <summary>
            Gets the style attribute.
            </summary>
            <param name="name">The attribute to get.</param>
            <returns>Returns the string value of the style attribute.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.RemoveAttribute(System.String)">
            <summary>
            Remove an attribute from the element.
            </summary>
            <param name="name">The attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.RemoveStyleAttribute(System.String)">
            <summary>
            Remove a style attribute from the element.
            </summary>
            <param name="name">The style attribute name.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.SetAttribute(System.String,System.String)">
            <summary>
            Set an attribute value.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.SetProperty(System.String,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="name">The HTML property.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.SetStyleAttribute(System.String,System.String)">
            <summary>
            Sets the style attribute.
            </summary>
            <param name="name">Attribute name.</param>
            <param name="value">The value to set the property to.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.Attributes">
            <summary>
            Gets the stored attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.Properties">
            <summary>
            Gets the stored properties.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.StyleAttributes">
            <summary>
            Gets the stored style attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.Events">
            <summary>
            Gets the standard event attachments.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlElementWrapperBag.HtmlEvents">
            <summary>
            Gets the HTML events.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlEvent">
            <summary>
            JavaScript events that can be attached to, exposed on an HtmlElement.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlEvent.Click">
            <summary>
            The mouse Click event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlEvent.Change">
            <summary>
            The change event for input controls.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlEvent.Mouseover">
            <summary>
            The mouse over event.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlEvent.Mouseout">
            <summary>
            The mouse out event.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlHeaderControl">
            <summary>
            A control for interacting with the header on an HTML page.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlHeaderControl.#ctor">
            <summary>
            Initializes a new HtmlHeaderControl object.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlHeaderControl.#ctor(System.Windows.Browser.HtmlElement)">
            <summary>
            Initializes a new HtmlHeaderControl object.
            </summary>
            <param name="existingElement">A reference to the existing header 
            element on the page.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlInputControl">
            <summary>
            A HTML input control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlInputControl._type">
            <summary>
            The type of input control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlInputControl.#ctor(System.String)">
            <summary>
            Initializes a new HtmlInputControl object.
            </summary>
            <param name="type">The type of input control.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlInputControl.Value">
            <summary>
            Gets or sets the value of the input control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlInputControl.Name">
            <summary>
            Gets or sets the name attribute for the control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlInputControl.Type">
            <summary>
            Gets the input control's type string.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlInputText">
            <summary>
            A HTML text input control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlInputText.TextValue">
            <summary>
            Constant string, "text".
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlInputText.#ctor">
            <summary>
            Initializes a new text input control instance.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlInputText.MaxLength">
            <summary>
            Gets or sets the maximum length of text for the input control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlInputText.Size">
            <summary>
            Gets or sets the size of the input control.
            </summary>
        </member>
        <member name="E:Microsoft.Silverlight.Testing.Html.HtmlInputText.Changed">
            <summary>
            The changed event for the input control.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlLineBreak">
            <summary>
            A &lt;br /&gt; control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlLineBreak.#ctor">
            <summary>
            Initializes a new line break element.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlPageControl">
            <summary>
            A control for interacting with the header on an HTML page.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlPageControl._header">
            <summary>
            The header control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlPageControl._body">
            <summary>
            The body control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlPageControl.#ctor(System.Windows.Browser.HtmlElement)">
            <summary>
            Initializes a new HtmlPageControl object.
            </summary>
            <param name="existingElement">A reference to the existing page 
            element on the page.</param>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlPageControl.Body">
            <summary>
            Gets the body control.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlPageControl.Header">
            <summary>
            Gets the header control for the page.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.HtmlPageControl.Title">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlProperty">
            <summary>
            Well-known HTML script object property names.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Attributes">
            <summary>
            All defined HTML element attributes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ChildNodes">
            <summary>
            The child nodes of an element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ClassName">
            <summary>
            The CSS class name of an element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ClientWidth">
            <summary>
            The viewable client width.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ClientHeight">
            <summary>
            The viewable client height.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Dir">
            <summary>
            The text direction of an element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Disabled">
            <summary>
            The property that marks an input control as not enabled, 
            as defined by common browsers.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.FirstChild">
            <summary>
            The first child element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Id">
            <summary>
            The ID attribute of the object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.InnerHTML">
            <summary>
            The inner HTML property of an HTML element.  Non-W3C.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.InnerText">
            <summary>
            The inner text property of an HTML element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Lang">
            <summary>
            The language of an attribute's values and an element's content.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.LastChild">
            <summary>
            The last child element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.LocalName">
            <summary>
            The local name of an XML element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.NamespaceURI">
            <summary>
            The URI string for an xmlns attribute of a XML element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.NextSibling">
            <summary>
            The next sibling object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.NodeName">
            <summary>
            The name of the node.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.NodeType">
            <summary>
            The type of the node.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.NodeValue">
            <summary>
            The value of the node.  Used for text nodes.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.OffsetLeft">
            <summary>
            The horizontal offset relative to the container.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.OffsetTop">
            <summary>
            The vertical offset relative to the container.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.OffsetParent">
            <summary>
            The offset container of the current element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.OffsetWidth">
            <summary>
            Returns the width of an element without margins.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.OffsetHeight">
            <summary>
            The height of an element without margins.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.OwnerDocument">
            <summary>
            The DOM object that contains the current object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ParentNode">
            <summary>
            The parent of the current object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Prefix">
            <summary>
            The namespace prefix, if any, for an XML element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.PreviousSibling">
            <summary>
            The previous sibling object.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ScrollLeft">
            <summary>
            Distance between scrollbar and the horizontal location of 
            an element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ScrollTop">
            <summary>
            Distance between the scrollbar and the top location of an 
            element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ScrollHeight">
            <summary>
            The height of an element, including that hidden by scrolling 
            or out of the screen.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.ScrollWidth">
            <summary>
            The width, including non-visible portions.  Complement to 
            ScrollHeight.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Style">
            <summary>
            The style object for an element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.TabIndex">
            <summary>
            The tab order of the element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.TagName">
            <summary>
            The tag name of the element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlProperty.Title">
            <summary>
            The title of the attribute.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.CssBorder">
            <summary>
            An attached box type that represents the four border dimensions for an 
            HTML element's border.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.CssBorder.#ctor(Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Initializes a new attached CSS border for a managed HtmlElement.
            </summary>
            <param name="element">The owner of the border.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.Extensions">
            <summary>
            Set of extensions for working with the helper enums, values, 
            types, and strings for use on web pages.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.AppendChild(System.Windows.Browser.HtmlElement,Microsoft.Silverlight.Testing.Html.HtmlControlBase)">
            <summary>
            Append the managed HtmlControl to the HtmlElement.  Extension method
            for HtmlElement.
            </summary>
            <param name="element">The HtmlElement.</param>
            <param name="control">The managed HtmlControlBase / HtmlControl.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.ScriptPropertyName(Microsoft.Silverlight.Testing.Html.HtmlProperty)">
            <summary>
            Returns the ScriptProperty name.  This is a camel-case value. Only 
            alters the first character.
            </summary>
            <param name="property">The property name.</param>
            <returns>Returns the value, as a string, with the first letter 
            capitalized.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.Plural(System.String,System.Int32)">
            <summary>
            A plural 's' as the suffix, when not equal to one.
            </summary>
            <param name="value">The string value.</param>
            <param name="number">The number to check.</param>
            <returns>Returns an empty string or the English plural 's'.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.ReplaceUnderscores(System.String)">
            <summary>
            Replace any underscores with dashes.
            </summary>
            <param name="s">The input string.</param>
            <returns>Returns a string's underscores with dashes.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.ScriptPropertyName(System.Enum)">
            <summary>
            Returns a property name for use in browser scripting engines. This 
            is as a string value, with the first character lowercase.
            </summary>
            <param name="enumValue">The enumeration value.</param>
            <returns>Returns the value of the current enumeration item, with the
            first character lowercase.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.CamelCase(System.String)">
            <summary>
            Used in helping to camel-case a string.  This will make the first 
            character of a string lowercase.
            </summary>
            <param name="value">The input string.</param>
            <returns>Returns the string, with the first character lowercase.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.CamelCaseAndReplace(Microsoft.Silverlight.Testing.Html.HtmlAttribute)">
            <summary>
            Camel case and replaces underscores in the HtmlAttribute enum.
            </summary>
            <param name="attribute">Attribute object.</param>
            <returns>Returns the string.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.CapitalizeFirstCharacter(System.String)">
            <summary>
            Capitalizes the first character in a string.
            </summary>
            <param name="value">The input string.</param>
            <returns>Returns the string, with the first character 
            capitalized.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.ModifyFirstCharacterCase(System.String,System.Boolean)">
            <summary>
            Modifies the capitalization of the string.  The first character will
            be capitalized, or lowercase, depending on the passed-in bool value 
            that is the second character.
            </summary>
            <param name="value">The input string.</param>
            <param name="capitalize">A value indicating whether to capitalize 
            the first character or not.  Setting to false will un-capitalize 
            (lowercase) the same character instead.</param>
            <returns>Returns the string, with a modified first character.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Extensions.CssPropertyName(Microsoft.Silverlight.Testing.Html.BorderStyle)">
            <summary>
            Returns the border style enum as a script property name.
            </summary>
            <param name="style">The style enum value.</param>
            <returns>Returns a script-ready name for the property.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlSpan">
            <summary>
            A &lt;span /&gt;-based container control for content, provides inner 
            HTML and text values.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.HtmlSpan.#ctor">
            <summary>
            Initializes a new span (container) element.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.HtmlTag">
            <summary>
            Set of HTML tags.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.A">
            <summary>
            An Anchor element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Abbr">
            <summary>
            An abbreviation element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Acronym">
            <summary>
            An acronym element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Address">
            <summary>
            An address element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Area">
            <summary>
            An image map's area element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.B">
            <summary>
            A bold text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Base">
            <summary>
            A page's base URI definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Bdo">
            <summary>
            A text direction definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Big">
            <summary>
            A large text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Blockquote">
            <summary>
            A large text quote element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Body">
            <summary>
            The main body element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Br">
            <summary>
            A line break element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Button">
            <summary>
            An input button element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Caption">
            <summary>
            A table's caption element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Cite">
            <summary>
            A citation element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Code">
            <summary>
            A code or fixed text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Col">
            <summary>
            A table column definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Colgroup">
            <summary>
            A column grouping definition element for table use.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Dd">
            <summary>
            A description or definition-description element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Del">
            <summary>
            A removed text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Div">
            <summary>
            A division or section element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Dl">
            <summary>
            A definition list element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Dt">
            <summary>
            A definition term element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Em">
            <summary>
            An emphasized text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Fieldset">
            <summary>
            A fieldset element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Form">
            <summary>
            A form element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Frame">
            <summary>
            A sub frame element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Frameset">
            <summary>
            A frameset definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.H1">
            <summary>
            A header 1 element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.H2">
            <summary>
            A header 2 element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.H3">
            <summary>
            A header 3element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.H4">
            <summary>
            A header 4 element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.H5">
            <summary>
            A header 5 element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.H6">
            <summary>
            A header 6 element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Head">
            <summary>
            The document's informational header element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Hr">
            <summary>
            A horizontal rule element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Html">
            <summary>
            An HTML document's root element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.I">
            <summary>
            Italic text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Iframe">
            <summary>
            A inline sub-frame element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Img">
            <summary>
            An image element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Input">
            <summary>
            A input element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Ins">
            <summary>
            A inserted/modified text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Kbd">
            <summary>
            A keyboard text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Label">
            <summary>
            An input control label element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Legend">
            <summary>
            A fieldset's title element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Li">
            <summary>
            A list item element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Link">
            <summary>
            A linked resource definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Map">
            <summary>
            An image map element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Meta">
            <summary>
            A metadata definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Noframes">
            <summary>
            A noframe section's element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Noscript">
            <summary>
            A noscript section's element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Object">
            <summary>
            An embedded object element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Ol">
            <summary>
            A ordered list element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Optgroup">
            <summary>
            A option group element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Option">
            <summary>
            A dropdown list's item definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.P">
            <summary>
            A Paragraph element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Param">
            <summary>
            An object parameter element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Pre">
            <summary>
            A preformatted text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Q">
            <summary>
            A short quote element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Samp">
            <summary>
            A sample code element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Script">
            <summary>
            A script element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Select">
            <summary>
            A dropdown/selectable list element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Small">
            <summary>
            A small text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Span">
            <summary>
            A text section/span element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Strong">
            <summary>
            A strong text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Style">
            <summary>
            A style definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Sub">
            <summary>
            A subscript element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Sup">
            <summary>
            A superscript element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Table">
            <summary>
            A table definition element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Tbody">
            <summary>
            A table body element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Td">
            <summary>
            A table cell element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Textarea">
            <summary>
            A multiline text area element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Tfoot">
            <summary>
            A table footer element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Th">
            <summary>
            A table header element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Thead">
            <summary>
            A table header element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Title">
            <summary>
            A document title element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Tr">
            <summary>
            A table row element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Tt">
            <summary>
            A teletype text element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Ul">
            <summary>
            An unordered list element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.HtmlTag.Var">
            <summary>
            A variable element.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.Color">
            <summary>
            String definitions for the test framework.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.VeryLightGray">
            <summary>
            Very light gray representing #eee color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.AnotherLightGray">
            <summary>
            Another grey color, #ddd.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.LightGray">
            <summary>
            Light gray representing #999 color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.DarkGray">
            <summary>
            Dark gray representing #333 color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.Blue">
            <summary>
            Blue color #00f.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.Manila">
            <summary>
            Manila folder color color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.ManilaBorder">
            <summary>
            Border that pairs well with the "Manila" color color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.Tan">
            <summary>
            Tan color color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.White">
            <summary>
            White color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.Black">
            <summary>
            Black color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.Red">
            <summary>
            Pure Red color.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Color.Yellow">
            <summary>
            Yellow color.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation">
            <summary>
            Provides screen information about the browser.
            </summary>
            <remarks>A simple proxy to JavaScript window and screen variables,
            abstracts away common web browser differences.</remarks>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation._isNavigator">
            <summary>
            Flag indicating Navigator/Firefox/Safari or Internet Explorer.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.Screen">
            <summary>
            Gets the window.screen ScriptObject.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ClientWidth">
            <summary>
            Gets the window object's client width.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ClientHeight">
            <summary>
            Gets the window object's client height.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ScrollLeft">
            <summary>
            Gets the current horizontal scrolling offset.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ScrollTop">
            <summary>
            Gets the current vertical scrolling offset.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ScreenWidth">
            <summary>
            Gets the width of the entire display.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ScreenHeight">
            <summary>
            Gets the height of the entire display.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.AvailableScreenWidth">
            <summary>
            Gets the width of the available screen real estate, excluding the 
            dock or task bar.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.AvailableScreenHeight">
            <summary>
            Gets the height of the available screen real estate, excluding the 
            dock or task bar.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ScreenPositionLeft">
            <summary>
            Gets the absolute left pixel position of the window in display 
            coordinates.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.BrowserScreenInformation.ScreenPositionTop">
            <summary>
            Gets the absolute top pixel position of the window in display 
            coordinates.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.Paragraph">
            <summary>
            A simple managed HTML paragraph control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Paragraph.#ctor">
            <summary>
            Initializes a new paragraph control.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Paragraph.#ctor(System.String)">
            <summary>
            Initializes a new paragraph control with HTML content included.
            </summary>
            <param name="html">The initial HTML content.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.StyleProvider">
            <summary>
            Used for applying a style to all new controls.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.StyleProvider.ApplyStyle(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Applies the styles to the control.  Derived classes can customize 
            the type, tag, or other properties of the controls to limit when the 
            styles are applied.
            </summary>
            <param name="control">The control reference.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.Unit">
            <summary>
            A struct that is a length measurement for web page use.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Unit.Empty">
            <summary>
            An Empty, unassigned Unit instance.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Unit._type">
            <summary>
            The type of unit.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.Unit._value">
            <summary>
            The unit's value.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Unit structure with the specified 
            int as the value and with Pixel as the unit's default type.
            </summary>
            <param name="value">The unit's value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the Unit struct with the double as the
            unit and Pixel as the unit's default type.
            </summary>
            <param name="value">The unit's value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.#ctor(System.Double,Microsoft.Silverlight.Testing.Html.UnitType)">
            <summary>
            Initializes a new instance of the Unit struct with the specified 
            double number as the value and the specified UnitType as the unit 
            type.
            </summary>
            <param name="value">The unit's value.</param>
            <param name="type">The type of the unit.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Unit struct with the specified 
            text string that contains the unit value and unit type.  The default
            unit type is pixel.
            </summary>
            <param name="value">The unit's value.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the Unit struct with the specified 
            text string that contains the unit value and unit type.
            </summary>
            <param name="value">The unit's value.</param>
            <param name="culture">The culture type in use.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.#ctor(System.String,System.Globalization.CultureInfo,Microsoft.Silverlight.Testing.Html.UnitType)">
            <summary>
            Initializes a new Unit type with the given value, culture type and 
            UnitType values.
            </summary>
            <param name="value">The unit's value.</param>
            <param name="culture">The culture in use.</param>
            <param name="defaultType">The default UnitType to use.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.GetHashCode">
            <summary>
            Gets the hash code for the value.
            </summary>
            <returns>Returns the hash code for the value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.Equals(System.Object)">
            <summary>
            Compares this Unit with the specified object.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>Returns whether they are equal.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.op_Equality(Microsoft.Silverlight.Testing.Html.Unit,Microsoft.Silverlight.Testing.Html.Unit)">
            <summary>
            Compares two units to find out if they have the same value and type.
            </summary>
            <param name="left">The left Unit.</param>
            <param name="right">The right Unit.</param>
            <returns>Returns whether they are equal.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.op_Inequality(Microsoft.Silverlight.Testing.Html.Unit,Microsoft.Silverlight.Testing.Html.Unit)">
            <summary>
            Compares two units to find out if they have different values and/or 
            types.
            </summary>
            <param name="left">The left Unit.</param>
            <param name="right">The right Unit.</param>
            <returns>Returns whether they are not equal.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.GetStringFromType(Microsoft.Silverlight.Testing.Html.UnitType)">
            <summary>
            Converts UnitType to persistence string.
            </summary>
            <param name="type">The type of unit.</param>
            <returns>Returns the string value for the UnitType.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.GetTypeFromString(System.String)">
            <summary>
            Converts persistence string to UnitType.
            </summary>
            <param name="value">The string value to convert.</param>
            <returns>Returns a UnitType object.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.Parse(System.String)">
            <summary>
            Parse a string into a new Unit instance.
            </summary>
            <param name="value">The string value.</param>
            <returns>Returns a new Unit struct.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parse a string into a new Unit instance.
            </summary>
            <param name="value">The string value.</param>
            <param name="culture">The culture to use.</param>
            <returns>Returns a new Unit struct.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.Percentage(System.Double)">
            <summary>
            Creates a Unit of type Percentage from the specified integer.
            </summary>
            <param name="number">The number value of the unit.</param>
            <returns>Returns a new Unit of a percentage value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.Pixel(System.Int32)">
            <summary>
            Creates a Unit of type Pixel from the specified integer.
            </summary>
            <param name="number">The number value of the unit.</param>
            <returns>Returns a new Unit of a pixel value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.Point(System.Int32)">
            <summary>
            Creates a Unit of type Point from the specified integer.
            </summary>
            <param name="number">The number value of the unit.</param>
            <returns>Returns a Unit of the point value.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.ToString">
            <summary>
            Converts a Unit to a string.
            </summary>
            <returns>Returns a string version of the Unit.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.ToString(System.Globalization.CultureInfo)">
            <summary>
            Converts a Unit to a string.
            </summary>
            <param name="culture">The culture to use.</param>
            <returns>Returns a string version of the Unit.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.ToString(System.IFormatProvider)">
            <summary>
            Converts a Unit to a string.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>Returns a string version of the Unit.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.Unit.op_Implicit(System.Int32)~Microsoft.Silverlight.Testing.Html.Unit">
            <summary>
            Implicitly creates a Unit of type Pixel from the specified integer.
            </summary>
            <param name="number">The number to implicitly convert.</param>
            <returns>Returns a new Unit type from the number.</returns>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Unit.IsEmpty">
            <summary>
            Gets a value indicating whether the Unit is empty.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Unit.Type">
            <summary>
            Gets the type of the Unit.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Html.Unit.Value">
            <summary>
            Gets the value of the Unit.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.UnitConverter">
            <summary>
            A type converter for Unit.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
              Returns a value indicating whether the unit converter can 
              convert from the specified source type.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="sourceType">The source type for the conversion.</param>
            <returns>Returns the conversion information.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
              Returns a value indicating whether the converter can
              convert to the specified destination type.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="destinationType">The destination type for the 
            conversion.</param>
            <returns>Returns whether the conversion will work.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Performs type conversion from the given value into a Unit.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="culture">The culture information.</param>
            <param name="value">The value to convert from.</param>
            <returns>Returns the converted object.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Html.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Performs type conversion to the specified destination type.
            </summary>
            <param name="context">Context matches the desktop framework's 
            signature for this method.</param>
            <param name="culture">The culture information.</param>
            <param name="value">The value to convert.</param>
            <param name="destinationType">The destination Type.</param>
            <returns>Returns the converted object.</returns>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Html.UnitType">
            <summary>
            Specifies the unit of measure.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Unknown">
            <summary>
            The unknown type.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Pixel">
            <summary>
            Measurement is in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Point">
            <summary>
            Measurement is in points.  A point represents 1/72 of an inch.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Pica">
            <summary>
            Measurement is in picas.  A pica represents 12 points.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Inch">
            <summary>
            Measurement is in inches.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Mm">
            <summary>
            Measurement is in millimeters.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Cm">
            <summary>
            Measurement is in centimeters.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Percentage">
            <summary>
            Measurement is a percentage relative to the parent.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Em">
            <summary>
            Measurement is relative to the height of the parent element's font.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.Html.UnitType.Ex">
            <summary>
            Measurement is relative to the height of the lowercase letter x of 
            the parent element's font.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.ResultIndicatorColor">
            <summary>
            A type that represents a web page used for test purposes of the current 
            Silverlight plugin.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.ResultIndicatorColor.FinishedFailure">
            <summary>
            The color used to indicate a failed run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.ResultIndicatorColor.InProgressFailure">
            <summary>
            The color used to indicate that a failure has happened during an 
            in-progress run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.ResultIndicatorColor.FinishedSuccess">
            <summary>
            The color used to indicate a good run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.ResultIndicatorColor.InProgressSuccess">
            <summary>
            The color used to indicate that there have been no failures yet, but
            the run is in-progress.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.ResultIndicatorColor.BackgroundFailure">
            <summary>
            The background color used to indicate a failing run.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.ResultIndicatorColor.BackgroundSuccess">
            <summary>
            The background color used to indicate a passing run.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.TestColumnHeader">
            <summary>
            The test column's header control.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.TestColumnHeader.TestColumnIndicator">
            <summary>
            The fixed name used for test column indicator's class names.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.TestColumnHeader._indicator">
            <summary>
            The pass/fail indicator area.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.TestColumnHeader._about">
            <summary>
            The framework title.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.TestColumnHeader.#ctor">
            <summary>
            Initializes a new column header.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.TestColumnHeader.#ctor(System.String)">
            <summary>
            Initializes a new column header.
            </summary>
            <param name="displayName">The display name of the framework.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.TestColumnHeader.UpdateIndicatorColoring(System.Boolean,System.Boolean)">
            <summary>
            Sets the color of the result indicator in the header.
            </summary>
            <param name="runInProgress">A value indicating whether the run is 
            still in progress, or has completed.</param>
            <param name="runIsSuccessful">A value indicating whether the run 
            results indicate success so far.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.TestColumnHeader.CreateAbout">
            <summary>
            Creates the section that displays that about box / framework title.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.TestColumnHeader.CreateIndicator">
            <summary>
            Creates the indicator area.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.TestColumnHeader.StylizeHeader">
            <summary>
            Styles the header.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.TestColumnHeader.DisplayProductName">
            <summary>
            Gets or sets the display name for the framework/product.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.TestStyleProvider">
            <summary>
            Style provider for the test framework.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.TestStyleProvider.ApplyStyle(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Applies the test framework styles to the control.
            </summary>
            <param name="control">The control reference.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage">
            <summary>
            A type that represents a web page used for test purposes of the current 
            Silverlight plugin.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.DefaultMinimumPluginWidth">
            <summary>
            The default minimum size of the plugin width.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.DefaultMinimumPluginHeight">
            <summary>
            The default minimum size of the plugin height.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.DefaultTestColumnWidth">
            <summary>
            The default width of the test column.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.ImplicitPadding">
            <summary>
            Amount of padding to have between the column and the plugin. 
            Not adjustable.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.DefaultFontFamily">
            <summary>
            Font used for text.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.DefaultFixedFontFamily">
            <summary>
            Font used to fixed width text.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.DefaultFontSize">
            <summary>
            The default font size to use in logging operations.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._defaultFontFamilies">
            <summary>
            The set of default fonts.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._defaultFixedFontFamilies">
            <summary>
            The set of default fixed fonts.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._plugin">
            <summary>
            The Silverlight plugin HTML element.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._pluginContainer">
            <summary>
            The container of the Silverlight plugin.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._testColumn">
            <summary>
            The primary test column.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._minimumPluginSize">
            <summary>
            The minimum size of the plugin.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._browserClientSize">
            <summary>
            The known size of the client.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._pluginSize">
            <summary>
            The current size allocated and calculated for the plugin.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage._testColumnWidth">
            <summary>
            The width allocated for the test column.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.#ctor(System.Boolean)">
            <summary>
            Initializes the HtmlTestPage Control.
            </summary>
            <param name="permitResizing">A value indicating whether to allow 
            the plugin and page to resize the contents.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes the HtmlTestPage Control with a specific minimum plugin 
            size requirement.
            </summary>
            <param name="minimumPluginWidth">The minimum width that the plugin 
            can be sized to.</param>
            <param name="minimumPluginHeight">The minimum height that the plugin
            can be sized to.</param>
            <param name="testColumnWidth">The width to allocate for the test 
            column.</param>
            <param name="permitResizing">A value indicating whether to allow 
            the plugin and page to resize the contents.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.SetDefaultFont(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Sets the font of the control to be the default font for the test 
            framework.
            </summary>
            <param name="control">The managed HTML control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.SetDefaultFixedFont(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Sets the font of the control to be the default fixed-size font for 
            the test framework.
            </summary>
            <param name="control">The managed HTML control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.SetDefaultFontSize(Microsoft.Silverlight.Testing.Html.HtmlControl)">
            <summary>
            Sets the font size of the control to be the default size for the 
            test framework.
            </summary>
            <param name="control">The managed HTML control.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.PrepareApplicationFonts">
            <summary>
            Prepares the fonts for use in the HTML-side of the test framework's
            application.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.CalculatePreferredPluginSize">
            <summary>
            Calculate the size of the Silverlight control to meet a set of 
            hard-coded dimensions and resize the plugin and plugin element.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.ResizeSilverlightPlugin">
            <summary>
            Resize the plugin using the preferred sizes.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.Plugin">
            <summary>
            Gets the plugin element.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.PluginContainer">
            <summary>
            Gets the container of the plugin object.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.UI.WebBrowserTestPage.TestColumn">
            <summary>
            Gets the test column.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.UI.WebBrowserTick">
            <summary>
            A type which handles preparing the underlying dispatcher or timer from 
            which the test work items execute.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTick.DefaultTickInterval">
            <summary>
            Millisecond interval to use for the interval between DispatcherTimer
            ticks.
            </summary>
        </member>
        <member name="F:Microsoft.Silverlight.Testing.UI.WebBrowserTick._timer">
            <summary>
            Dispatcher timer.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTick.#ctor(System.Func{System.Boolean})">
            <summary>
            Creates a new run method manager using the default value for the 
            timer's millisecond interval.
            </summary>
            <param name="runNextStep">
            Conditional delegate which returns true as long as there is 
            additional work.
            </param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTick.#ctor(System.Func{System.Boolean},System.Int32)">
            <summary>
            Sets up a new run method manager.
            </summary>
            <param name="runNextStep">
            Conditional delegate which returns true as long as there is 
            additional work.
            </param>
            <param name="millisecondInterval">Milliseconds between ticks, at a 
            minimum.</param>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTick.Run">
            <summary>
            Begin the execution process by hooking up the underlying 
            DispatcherTimer to call into the test framework regularly and 
            perform test work items.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.UI.WebBrowserTick.Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Call into the underlying work item queue, if the method manager is 
            still set to run.
            </summary>
            <param name="sender">Sending object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.TestHarnessState">
            <summary>
            Base class representing the overall state of a test run.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarnessState.IncrementFailures">
            <summary>
            Increment the failures counter.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.TestHarnessState.IncrementTotalScenarios">
            <summary>
            Increments the total scenarios counter.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessState.Failures">
            <summary>
            Gets the count of failing scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessState.TotalScenarios">
            <summary>
            Gets the total count of scenarios run.
            </summary>
        </member>
        <member name="P:Microsoft.Silverlight.Testing.Harness.TestHarnessState.Failed">
            <summary>
            Gets a value indicating whether the status recorded indicates a
            failure.
            </summary>
        </member>
        <member name="T:Microsoft.Silverlight.Testing.Harness.ReflectionUtility">
            <summary>
            A set of helper methods for interacting with methods and types that are
            marked with attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetTypesWithAttribute(System.Reflection.Assembly,System.Type)">
            <summary>
            Retrieve all types in an assembly that are decorated with a specific
            attribute.
            </summary>
            <param name="assembly">Assembly to search.</param>
            <param name="decoratingAttribute">
            Instance of the Type of attribute that marks interesting methods.
            </param>
            <returns>
            A collection of types from the assembly.  An empty collection is
            returned if no types were found matching the constraints.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAttributes(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Given a MethodInfo type, returns the attributes (if any) that are of 
            the decoratingAttribute parameter's type.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A collection populated with the Attribute instances.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            Given a MethodInfo type, returns the attributes (if any) that are of 
            the decoratingAttribute parameter's type.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <param name="inherit">A value indicating whether to look for 
            inheriting custom attributes.</param>
            <returns>
            A collection populated with the Attribute instances.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAttributes(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,System.Type,System.Boolean)">
            <summary>
            Given a test method, returns the attributes (if any) that are of 
            the decoratingAttribute parameter's type.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <param name="inherit">Whether to inherit attributes.</param>
            <returns>
            A collection populated with the Attribute instances.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAssembliesFromInstances(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Retrieve a list of Reflection.Assembly types from a set of 
            instances and/or types.
            </summary>
            <param name="objects">Set of instances or types.</param>
            <returns>A set of Assembly instances from the instances or types.</returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAssemblies(System.Type[])">
            <summary>
            Returns a list of unique assemblies from a set of types.
            </summary>
            <param name="types">Set of types.</param>
            <returns>
            A list of unique Assembly instances from the input types.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAttribute(System.Collections.Generic.ICollection{System.Attribute})">
            <summary>
            Given a list of attributes, retrieves a single Attribute instance.
            Will throw an exception if multiple attributes exist on the method.
            </summary>
            <param name="attributes">List of attributes.</param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAttribute(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Given a method and a decorative attribute of interest, retrieves a
            single Attribute instance.  Will throw an exception if multiple
            attributes exist on the method.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">
            Attribute type of interest.
            </param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAttribute(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,System.Type)">
            <summary>
            Given a test method and a decorative attribute of interest,
            retrieves a single Attribute instance.  Will throw an exception if
            multiple attributes exist on the method.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">
            Attribute type of interest.
            </param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetAttribute(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,System.Type,System.Boolean)">
            <summary>
            Given a test method and a decorative attribute of interest,
            retrieves a single Attribute instance.  Will throw an exception if
            multiple attributes exist on the method.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">
            Attribute type of interest.
            </param>
            <param name="inherit">A value indicating whether to look for custom 
            inherited attributes.</param>
            <returns>
            The attribute instance, or null if it does not exist.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.HasAttribute(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Returns a value indicating whether a method has the attribute.
            </summary>
            <param name="member">MemberInfo instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A value indicating whether the type has the decorating attribute or
            not.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.HasAttribute(Microsoft.Silverlight.Testing.UnitTesting.Metadata.ITestMethod,System.Type)">
            <summary>
            Returns a value indicating whether a method has the attribute.
            </summary>
            <param name="method">ITestMethod instance.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A value indicating whether the type has the decorating attribute or
            not.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetMethodsWithAttribute(System.Type,System.Type)">
            <summary>
            Return a collection of MethodInfo instances given a type to look
            through  and the attribute of interest.
            </summary>
            <param name="type">Type to look through for methods.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            A collection of the method reflection objects, if any, with the
            marked attribute present.
            </returns>
        </member>
        <member name="M:Microsoft.Silverlight.Testing.Harness.ReflectionUtility.GetOneMethodWithAttribute(System.Type,System.Type)">
            <summary>
            Retrieve a MethodInfo from a single decorated method inside a type,
            if any.  Throws an Exception if there are > 1 methods that are
            decorated with the attribute.
            </summary>
            <param name="type">Type of interest.</param>
            <param name="decoratingAttribute">Attribute of interest.</param>
            <returns>
            MethodInfo reflection object.  Null if none are found.
            </returns>
        </member>
    </members>
</doc>
